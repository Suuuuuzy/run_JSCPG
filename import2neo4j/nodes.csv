id:ID	labels:label	type	flags:string[]	lineno:int	code	childnum:int	funcid:int	classname	namespace	endlineno:int	name	doccomment
0	Filesystem	Directory									/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test	
1	Filesystem	File									/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test.js	
2	AST	AST_TOPLEVEL	TOPLEVEL_FILE	1						9	/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test.js	
3	Artificial	CFG_FUNC_ENTRY					2				/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test.js	
4	Artificial	CFG_FUNC_EXIT					2				/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test.js	
5	AST	AST_STMT_LIST		1		0	2			9		
6	AST	AST_FUNC_DECL		1	test	0	2			4		
7	Artificial	CFG_FUNC_ENTRY					6					
8	Artificial	CFG_FUNC_EXIT					6					
9	AST	string		1	test	0	6			1		
10	AST	NULL		1		1	6					
11	AST	AST_PARAM_LIST		1	input	2	6			4		
12	AST	AST_PARAM		1	input	0	6					
13	AST	NULL		1	any	0	6					
14	AST	string		1	input	1	6			1		
15	AST	NULL		1	any	2	6					
16	AST	AST_STMT_LIST		1		3	6			4		
17	AST	AST_ASSIGN_OP	BINARY_ADD	2	+=	0	6			2		
18	AST	AST_VAR		2		0	6			2		
19	AST	string		2	input	0	6			2	input	
20	AST	integer		2	1	1	6			2		
21	AST	AST_RETURN		3	"return input;"	1	6			3		
22	AST	AST_VAR		3		0	6			3		
23	AST	string		3	input	0	6			3	input	
24	AST	NULL		1		4	6					
25	AST	NULL		1		5	6					
26	AST	AST_FUNC_DECL		5	foo	1	2			9		
27	Artificial	CFG_FUNC_ENTRY					26					
28	Artificial	CFG_FUNC_EXIT					26					
29	AST	string		5	foo	0	26			5		
30	AST	NULL		5		1	26					
31	AST	AST_PARAM_LIST		5	"input, input2"	2	26			9		
32	AST	AST_PARAM		5	input	0	26					
33	AST	NULL		5	any	0	26					
34	AST	string		5	input	1	26			5		
35	AST	NULL		5	any	2	26					
36	AST	AST_PARAM		5	input2	1	26					
37	AST	NULL		5	any	0	26					
38	AST	string		5	input2	1	26			5		
39	AST	NULL		5	any	2	26					
40	AST	AST_STMT_LIST		5		3	26			9		
41	AST	AST_ASSIGN		6	=	0	26			6		
42	AST	AST_VAR		6		0	26			6		
43	AST	string		6	input	0	26			6	input	
44	AST	AST_BINARY_OP	BINARY_ADD	6	+	1	26			6		
45	AST	AST_BINARY_OP	BINARY_ADD	6	+	0	26			6		
46	AST	AST_VAR		6		0	26			6		
47	AST	string		6	input2	0	26			6	input2	
48	AST	integer		6	2	1	26			6		
49	AST	AST_VAR		6		1	26			6		
50	AST	string		6	input	0	26			6	input	
51	AST	AST_ASSIGN		7	=	1	26			7		
52	AST	AST_VAR		7		0	26			7		
53	AST	string		7	input	0	26			7	input	
54	AST	AST_CALL		7		1	26			7		
55	AST	AST_NAME	NAME_NOT_FQ	7		0	26			7		
56	AST	string		7	test	0	26					
57	AST	AST_ARG_LIST		7	(input)	1	26			7		
58	AST	AST_VAR		7		0	26			7		
59	AST	string		7	input	0	26			7	input	
60	AST	AST_RETURN		8	"return input;"	2	26			8		
61	AST	AST_VAR		8		0	26			8		
62	AST	string		8	input	0	26			8	input	
63	AST	NULL		5		4	26					
64	AST	NULL		5		5	26					
65	Filesystem	File									/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test2.js	
66	AST	AST_TOPLEVEL	TOPLEVEL_FILE	1						6	/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test2.js	
67	Artificial	CFG_FUNC_ENTRY					66				/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test2.js	
68	Artificial	CFG_FUNC_EXIT					66				/home/lsong18/projs/JSJoern/esprima-joern/examples/php-format/test/test2.js	
69	AST	AST_STMT_LIST		1		0	66			6		
70	AST	AST_ASSIGN		1	=	0	66			1		
71	AST	AST_VAR		1		0	66			1		
72	AST	string		1	tmp	0	66			1	tmp	
73	AST	integer		1	0	1	66			1		
74	AST	AST_ASSIGN		2	=	1	66			2		
75	AST	AST_VAR		2		0	66			2		
76	AST	string		2	realcommand	0	66			2	realcommand	
77	AST	AST_BINARY_OP	BINARY_ADD	2	+	1	66			2		
78	AST	AST_VAR		2		0	66			2		
79	AST	string		2	tmp	0	66			2	tmp	
80	AST	integer		2	10	1	66			2		
81	AST	AST_ASSIGN_OP	BINARY_ADD	3	+=	2	66			3		
82	AST	AST_VAR		3		0	66			3		
83	AST	string		3	realcommand	0	66			3	realcommand	
84	AST	integer		3	1	1	66			3		
85	AST	AST_CALL		4		3	66			4		
86	AST	AST_NAME	NAME_NOT_FQ	4		0	66			4		
87	AST	string		4	test	0	66					
88	AST	AST_ARG_LIST		4	(realcommand)	1	66			4		
89	AST	AST_VAR		4		0	66			4		
90	AST	string		4	realcommand	0	66			4	realcommand	
91	AST	AST_ASSIGN		5	=	4	66			5		
92	AST	AST_VAR		5		0	66			5		
93	AST	string		5	realcommand	0	66			5	realcommand	
94	AST	AST_CALL		5		1	66			5		
95	AST	AST_NAME	NAME_NOT_FQ	5		0	66			5		
96	AST	string		5	foo	0	66					
97	AST	AST_ARG_LIST		5	"(tmp, realcommand)"	1	66			5		
98	AST	AST_VAR		5		0	66			5		
99	AST	string		5	tmp	0	66			5	tmp	
100	AST	AST_VAR		5		1	66			5		
101	AST	string		5	realcommand	0	66			5	realcommand	
102	AST	AST_ASSIGN		6	"info = exec(realcommand)"	5	66			6		
103	AST	AST_VAR		6	any	0	66			6		
104	AST	string		6	info	0	66			6		
105	AST	AST_CALL		6		1	66			6		
106	AST	AST_NAME	NAME_NOT_FQ	6		0	66			6		
107	AST	string		6	exec	0	66					
108	AST	AST_ARG_LIST		6	(realcommand)	1	66			6		
109	AST	AST_VAR		6		0	66			6		
110	AST	string		6	realcommand	0	66			6	realcommand	
