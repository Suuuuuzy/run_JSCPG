GitBook,3.2.1,GitBook is a command line tool (and Node.js library) for building beautiful books using GitHub/Git and Markdown (or AsciiDoc). Stored Cross-Site-Scripting (XSS) is possible in GitBook before 3.2.2 by including code outside of backticks in any ebook. This code will be executed on the online reader.,,
Keystone,0.3.22,"Description:Versions of keystone prior to 4.0.0 are vulnerable to Cross-Site Scripting (XSS). The package fails to properly encode rendered HTML on admin-created blog posts. This allows attackers to execute arbitrary JavaScript in the victim's browser. Exploiting this vulnerability requires having access to an admin account.
Description:Versions of keystone prior to 4.0.0 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize user input on the Contact Us page, allowing attackers to submit contact forms with malicious JavaScript in the message field. The output is not properly encoded leading an admin that opens new inquiry to execute the arbitrary JavaScript supplied in their browser.","https://www.npmjs.com/advisories/981
https://www.npmjs.com/advisories/980",
mustache,2.2.0,mustache package before 2.2.1 for Node.js allows remote attackers to conduct cross-site scripting (XSS) attacks by leveraging a template with an attribute that is not quoted.,https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-8862,
handlebars,3.0.7,The handlebars package before 4.0.0 for Node.js allows remote attackers to conduct cross-site scripting (XSS) attacks by leveraging a template with an attribute that is not quoted.,https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-8861,
serve-index,1.6.2,Cross-site scripting (XSS) vulnerability in the serve-index package before 1.6.3 for Node.js allows remote attackers to inject arbitrary web script or HTML via a crafted file or directory name.,https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-8856,
marked,0.3.1,Incomplete blacklist vulnerability in marked 0.3.2 and earlier for Node.js allows remote attackers to conduct cross-site scripting (XSS) attacks via a vbscript tag in a link.,https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-1370,
validator,1.5.1,The validator package before 2.0.0 for Node.js allows remote attackers to bypass the cross-site scripting (XSS) filter via hex-encoded characters.,https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-9772,
express,4.4.5,"The Express web framework before 3.11 and 4.x before 4.5 for Node.js does not provide a charset field in HTTP Content-Type headers in 400 level responses, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via characters in a non-standard encoding.",https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6393,
http_server,1.0.12,"The package fails to sanitize filenames, allowing attackers to execute arbitrary JavaScript in the victim's browser through files with names containing malicious code.",https://www.npmjs.com/advisories/1170,
mavon-editor,2.7.6,"The package fails to sanitize entered input, allowing attackers to execute arbitrary JavaScript in a victim's browser",https://www.npmjs.com/advisories/1169,
webtorrent,0.107.5,Versions of webtorrent prior to 0.107.6 are vulnerable to Cross-Site Scripting. webtorrent servers started with torrent.createServer() lists a torrent's title and files in the index page without sanitization. This allows attackers to execute arbitrary JavaScript in the victim's browser through files with names containing the malicious payload. The issue is mitigated due to the fact that the server only allows fetching data pieces from the torrent, https://www.npmjs.com/advisories/1158,
vant,1.6.27,"Versions of vant prior to 2.1.8 are vulnerable to Cross-Site Scripting. The text value of the Picker component column is not sanitized, which may allow attackers to execute arbitrary JavaScript in a victim's browser.",https://www.npmjs.com/advisories/1157,
status-board ,10.0.0,"Description_1: Versions of status-board prior to 10.0.1 are vulnerable to Cross-Site Scripting. The _createPreviewButton() function fails to sanitize the href attribute of a created <a> tag. This may allow attackers to execute arbitrary JavaScript in a victim's browser.
Description_2: All versions of status-board are vulnerable to Cross-Site Scripting. The renderJsDashboard() function concatenates the safeDashboard variable to the HTTP response message with insufficient sanitization. If this variable is controlled by user input it may allow attackers to execute arbitrary JavaScript in a victim's browser.
Description_3: All versions of status-board are vulnerable to Cross-Site Scripting. The renderDashboard() function concatenates the safeDashboard variable to the printed error message with insufficient sanitization. If this variable is controlled by user input it allows attackers to execute arbitrary JavaScript in a victim's browser.
","URL_1: https://www.npmjs.com/advisories/1154
URL_2: https://www.npmjs.com/advisories/1151
URL_3: https://www.npmjs.com/advisories/1150
",
cyberchef,8.31.1,Versions of cyberchef prior to 8.31.3 are vulnerable to Cross-Site Scripting. In Text Encoding Brute Force the table rows are created by concatenating the value variable unsanitized in the HTML code. If this variable is controlled by user input it allows attackers to execute arbitrary JavaScript in a victim's browser.,https://www.npmjs.com/advisories/1149,
selectize-plugin-a11y,1.0.4,Versions of selectize-plugin-a11y prior to 1.1.0 are vulnerable to Cross-Site Scripting. The accessibility.liveRegion.speak function does not sanitize the msg variable before rendering it as HTML. If this variable is controlled by user input it allows attackers to execute arbitrary JavaScript in a victim's browser.,https://www.npmjs.com/advisories/1145,
@risingstack/protect,1.2.0,All versions of @risingstack/protect are vulnerable to Cross-Site Scripting. The isXss() XSS validator has several bypasses that may allow attackers to execute arbitrary JavaScript in a victim's browser.,https://www.npmjs.com/advisories/1116/versions,
min-http-server,1.0.6,"All versions of min-http-server are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize filenames, allowing attackers to execute arbitrary JavaScript in the victim's browser through files with names containing malicious code.",https://www.npmjs.com/advisories/1111,
http-file-server,0.2.6,"All versions of http-file-server are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize filenames, allowing attackers to execute arbitrary JavaScript in the victim's browser through files with names containing malicious code.",https://www.npmjs.com/advisories/1110,
console-feed,2.8.9,"Versions of console-feed prior to 2.8.10 are vulnerable to Cross-Site Scripting (XSS). The package fails to properly escape the rendered output. If an application uses console-feed and a malicious JavaScript payload was passed to a console.log('%_', payload) call, the package would render HTML containing the malicious payload.",https://www.npmjs.com/advisories/1088,
dmn-js-properties-panel,0.2.0,"Versions of dmn-js-properties-panel prior to 0.8.0 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize input in specially configured diagrams, which may allow attackers to inject arbitrary JavaScript in the embedding website.",https://www.npmjs.com/advisories/1088,"dmn-js-properties-panel is properties panel 
extension for dmn-js "
cmmn-js-properties-panel,0.7.2,"Versions of cmmn-js-properties-panel prior to 0.8.0 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize input in specially configured diagrams, which may allow attackers to inject arbitrary JavaScript in the embedding website.",https://www.npmjs.com/advisories/1080,"icmmn-js-properties-panel is properties 
panel extension for cmmn-js"
bpmn-js-properties-panel,0.30.0,"Versions of bpmn-js-properties-panel prior to 0.31.0 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize input in specially configured diagrams, which may allow attackers to inject arbitrary JavaScript in the embedding website.",https://www.npmjs.com/advisories/1079,"bpmn-js-properties-panel is  properties 
panel for bpmn-js"
takeapeek,0.2.2,"All versions of takeapeek are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize filenames, allowing attackers to execute arbitrary JavaScript in the victim's browser through files with names containing malicious code.",https://www.npmjs.com/advisories/1038,
jquery.json-viewer,1.2.0,"Versions of jquery.json-viewer prior to 1.3.0 are vulnerable to Cross-Site Scripting (XSS). The package insufficiently sanitizes user input when creating links, and concatenates the user input in an <a> tag. ",https://www.npmjs.com/advisories/1036,
eco,1.0.3,"Description_1:All versions of eco are vulnerable to Cross-Site Scripting (XSS). The package fails to escape output on the TypeAhead and QueryInput components, which may allow attackers to execute arbitrary JavaScript on the victim's browser.
Description_2:All versions of eco are vulnerable to Cross-Site Scripting (XSS). The package's default __escape implementation fails to escape single quotes, which may allow attackers to execute arbitrary JavaScript on the victim's browser.","https://www.npmjs.com/advisories/1028
https://www.npmjs.com/advisories/1024",
@ionic/core,4.3.0,"Versions of @ionic/core prior to 4.0.3, 4.1.3, 4.2.1 or 4.3.1 are vulnerable to Cross-Site Scripting (XSS). The package uses the unsafe innerHTML function without sanitizing input, which may allow attackers to execute arbitrary JavaScript on the victim's browser. This issue affects the components:
<ion-alert>.message
<ion-searchbar>.placeholder
<ion-infinite-scroll-content>.loadingText
<ion-refresher-content>.pullingText
<ion-refresher-content>.refershingText",https://www.npmjs.com/advisories/1023,
buttle,0.3.1,"All versions of buttle are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize filenames, allowing attackers to execute arbitrary JavaScript in the victim's browser through files with names containing malicious code.",https://www.npmjs.com/advisories/1009,
@berslucas/liljs,1.0.1,"Versions of @berslucas/liljs prior to 1.0.2 are vulnerable to Cross-Site Scripting (XSS). The package uses the unsafe innerHTML function without sanitizing input, which may allow attackers to execute arbitrary JavaScript on the victim's browser.",https://www.npmjs.com/advisories/1016,
html-pages,3.1.0,"All versions of html-pages are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize folder names, allowing attackers to execute arbitrary JavaScript in the victim's browser through folders with names containing malicious code.",https://www.npmjs.com/advisories/1001,
node-red,0.18.5,"Versions of node-red prior to 0.18.6 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize the name field in new items, allowing attackers to execute arbitrary JavaScript in the victim's browser.",https://www.npmjs.com/advisories/993,
serve,10.0.1,"Versions of serve prior to 10.0.2 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize filenames, allowing attackers to execute arbitrary JavaScript in the victim's browser through files with names containing malicious code.",https://www.npmjs.com/advisories/992,
swagger-ui,3.0.12,Versions of swagger-ui prior to 3.0.13 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize YAML files imported from URLs or copied-pasted. This may allow attackers to execute arbitrary JavaScript.,https://www.npmjs.com/advisories/985,
swagger-ui,2.2.0,"Description_2:Versions of swagger-ui prior to 2.2.1 are vulnerable to Cross-Site Scripting (XSS). The package allows HTML code in the swagger.apiInfo.description value without proper sanitization, which may allow attackers to execute arbitrary JavaScript.
Description_1:Versions of swagger-ui prior to 2.2.1 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize JSON schemas, allowing attackers to execute arbitrary JavaScript using <script> tags in the method descriptions.
Description_3:Versions of swagger-ui prior to 2.2.1 are vulnerable to Cross-Site Scripting (XSS). The package fails to encode output in GET requests. The request is meant to respond with Content-Type application/json which does not trigger the vulnerability but if the web server changes the header to text/html it may allow attackers to execute arbitrary JavaScript.","https://www.npmjs.com/advisories/988
https://www.npmjs.com/advisories/986
https://www.npmjs.com/advisories/987",
diagram-js,3.3.0,"Versions of diagram-js prior to 3.3.1 (for 3.x) and 2.6.2 (for 2.x) are vulnerable to Cross-Site Scripting. The package fails to escape output of user-controlled input in search-pad, allowing attackers to execute arbitrary JavaScript.",https://www.npmjs.com/advisories/982,
diagram-js-direct-editing,1.4.2,"Versions of diagram-js-direct-editing prior to 1.4.3 are vulnerable to Cross-Site Scripting. The package fails to sanitize input from the clipboard, allowing attackers to execute arbitrary JavaScript in the victim's browser.",https://www.npmjs.com/advisories/983,
ids-enterprise,4.18.1,"Description_1:Versions of ids-enterprise prior to 4.18.2 are vulnerable to Cross-Site Scripting (XSS). The modal component fails to sanitize input to the title attribute, which may allow attackers to execute arbitrary JavaScript.
Description_2:Versions of ids-enterprise prior to 4.18.2 are vulnerable to Cross-Site Scripting (XSS). The soho-dropdown component does not properly encode its output and may allow attackers to execute arbitrary JavaScript.
Description_3:Versions of ids-enterprise prior to 4.18.2 are vulnerable to Cross-Site Scripting (XSS). Script tags in the soho-autocomplete component are not properly encoded and may allow attackers to execute arbitrary JavaScript.","https://www.npmjs.com/advisories/957
https://www.npmjs.com/advisories/956
https://www.npmjs.com/advisories/955",
bootstrap,4.3.0,Versions of bootstrap prior to 3.4.1 for 3.x and 4.3.1 for 4.x are vulnerable to Cross-Site Scripting (XSS). The data-template attribute of the tooltip and popover plugins lacks input sanitization and may allow attacker to execute arbitrary JavaScript.,https://www.npmjs.com/advisories/891,
fomantic-ui,2.6.4,Versions of fomantic-ui are vulnerable to Cross-Site Scripting. Lack of output encoding on the selection dropdowns can lead to user input being executed instead of printed as text.,https://www.npmjs.com/advisories/885,
simditor,2.3.21,"Versions of simditor prior to 2.3.22 are vulnerable to Cross-Site Scripting. The package does not sanitize user input that is rendered with innerHTML, allowing attackers to execute arbitrary JavaScript.",https://www.npmjs.com/advisories/884,
jquery-mobile,1.4.1,"All version of jquery-mobile are vulnerable to Cross-Site Scripting. The package checks for content in location.hash and if a URL is found it does an XmlHttpRequest (XHR) to the URL and renders the response with innerHTML. It fails to validate the Content-Type of the response, allowing attackers to include malicious payloads as part of query parameters that are reflected back to the user. A response such as {""q"":""<iframe/src='javascript:alert(1)'></iframe>"",""results"":[]} would be parsed as HTML and the JavaScript payload executed.",https://www.npmjs.com/advisories/883,
bootbox,5.3.2,"All version of bootbox are vulnerable to Cross-Site Scripting. The package does not sanitize user input in the provided dialog boxes, allowing attackers to inject HTML code and execute arbitrary JavaScript.",https://www.npmjs.com/advisories/882,
google-closure-library,20190215.0.0,"Versions of google-closure-library prior to 20190301.0.0 are vulnerable to Cross-Site Scripting. The safedomtreeprocessor.processToString() function improperly processed empty elements, which could allow attackers to execute arbitrary JavaScript through Mutation Cross-Site Scripting.",https://www.npmjs.com/advisories/878,
wangeditor,3.1.3,"All versions of wangeditor are vulnerable to Cross-Site Scripting. The package fails to properly encode output, allowing arbitrary JavaScript to be inserted in links and executed by browsers.",https://www.npmjs.com/advisories/876,
verdaccio,3.11.7,"Description_1:Versions of verdaccio prior to 3.12.0 are vulnerable to Cross-Site Scripting. Links for the packages homepage are not properly restricted to http/https and can contain JavaScript which may lead to arbitrary code execution.
Description_2:Versions of verdaccio prior to 3.12.0 are vulnerable to Cross-Site Scripting. Contents of READMEs are not properly sanitized before rendering, which may allow attackers to execute arbitrary JavaScript code.","https://www.npmjs.com/advisories/833
https://www.npmjs.com/advisories/832",
shave,2.5.2,Versions of shave prior to 2.5.3 are vulnerable to Cross-Site Scripting. The shave package overwrites HTML elements and in doing so fails to properly encode the output. If encoded HTML input is passed into shave the output will be decoded which may lead to Cross-Site Scripting.,https://www.npmjs.com/advisories/822,
webpack-bundle-analyzer,3.3.1,Versions of webpack-bundle-analyzer prior to 3.3.2 are vulnerable to Cross-Site Scripting. The package uses JSON.stringify() without properly escaping input which may lead to Cross-Site Scripting.,https://www.npmjs.com/advisories/826,
materialize-css,1.0.0,"Description_1: The tooltip component does not sufficiently sanitize user input, allowing an attacker to execute arbitrary JavaScript code if the malicious input is rendered by a user.
Description_2:The autocomplete component does not sufficiently sanitize user input, allowing an attacker to execute arbitrary JavaScript code if the malicious input is rendered by a user.","https://www.npmjs.com/advisories/818
https://www.npmjs.com/advisories/817",
simple-markdown,0.4.3,Versions of simple-markdown prior to 0.4.4 are vulnerable to Cross-Site Scripting. Due to insufficient input sanitization the package may render output containing malicious JavaScript. This vulnerability can be exploited through input of links containing data or VBScript URIs and a base64-encoded payload.,https://www.npmjs.com/advisories/815,
@nuxt/devalue,1.2.2,Versions of @nuxt/devalue prior to 1.2.3 are vulnerable to Cross-Site Scripting. Due to insufficient input sanitization attacker may inject arbitrary JavaScript code through object keys.,https://www.npmjs.com/advisories/814,
buttle,0.3.1,"All versions of buttle are vulnerable to Cross-Site Scripting. Due to misconfiguration of its rendering engine, buttle does not sanitize the HTML output allowing attackers to run arbitrary JavaScript when processing malicious markdown files.",https://versiowww.npmjs.com/advisories/810,
express-cart,1.1.12,"In the admin page it is possible to inject arbitrary JavaScript as a new product option, allowing attackers to execute arbitrary code. This is limited to the admin page and does not affect other pages.",https://www.npmjs.com/advisories/808,
harp,0.30.1,"Due to misconfiguration of its rendering engine, harp does not sanitize the HTML output allowing attackers to run arbitrary JavaScript when processing malicious files.",https://www.npmjs.com/advisories/806,
editor.md,1.5.0,"All versions of editor.md are vulnerable to Cross-Site Scripting. User input is insufficiently sanitized, allowing attackers to inject malicious code in payloads containing base64-encoded content.",https://www.npmjs.com/advisories/794,
bootstrap-vue,2.0.0-rc.11,"Versions of bootstrap-vue prior to 2.0.0-rc.12 are vulnerable to Cross-Site Scripting. Due to insufficient input sanitization, components may be vulnerable to Cross-Site Scripting through the options variable. This may lead to the execution of malicious JavaScript on the user's browser.",https://www.npmjs.com/advisories/770,
semantic-ui-search,2.3.3,All versions of semantic-ui-search are vulnerable to Cross-Site Scripting. Lack of output encoding on the selection dropdowns can lead to user input being executed instead of printed as text.,https://www.npmjs.com/advisories/760,
mermaid,8.2.2,"Versions of mermaid prior to 8.2.3 are vulnerable to Cross-Site Scripting. If malicious input such as A[""<img src=invalid onerror=alert('XSS')></img>""] is provided to the application, it will execute the code instead of rendering it as text due to improper output encoding.",https://www.npmjs.com/advisories/751,
jingo,1.9.1,"Versions of jingo prior to 1.9.2 are vulnerable to Cross-Site Scripting (XSS). If malicious input such as <script>alert(1)</script> is placed in the content of a wiki page, Jingo does not properly encode the input and it is executed instead of rendered as text.",https://www.npmjs.com/advisories/750,
md-data-table,2.2.0,All versions of md-data-table are vulnerable to cross-site scripting (XSS). This vulnerability is exploitable if an attacker has control over data that is rendered by mdt-row,https://www.npmjs.com/advisories/748,
buefy,0.7.1,"Versions of buefy prior to 0.7.2 are vulnerable to Cross-Site Scripting, allowing attackers to manipulate the DOM and execute remote code. The autocomplete list renders user input as HTML without encoding.",https://www.npmjs.com/advisories/747,
exceljs,1.5.1,"Versions of exceljs before 1.6.0 are vulnerable to cross-site scripting. This vulnerability is due to exceljs does not validate data from parsed XLSX file and allows to embed HTML tags, like",https://www.npmjs.com/advisories/733,
m-server,1.4.1,Versions of m-server before 1.4.2 are vulnerable to stored cross-site scripting. This vulnerability is exploitable if an attacker is able to control the name of a file that m-server is serving.,https://www.npmjs.com/advisories/729,
sexstatic,0.6.2,All versions of sexstatic are vulnerable to stored cross-site scripting (xss). This is exploitable if an attacker can control a filename that is served by sexstatic.,https://www.npmjs.com/advisories/671,
react-marked-markdown,1.4.6,All versions of react-marked-markdown are vulnerable to cross-site scripting (XSS) via href attributes. This is exploitable if user is provided to react-marked-markdown,https://www.npmjs.com/advisories/668,
react-svg,2.2.17,Versions of react-svg before 2.2.18 are vulnerable to cross-site scripting (xss). This is due to the fact that scripts found in SVG files are run by default.,https://www.npmjs.com/advisories/648,
cloudcmd,9.1.5,Versions of cloudcmd before 9.1.6 are vulnerable to cross-site scripting (XSS) when listing files in a directory. The attacker must control the name of a file for this vulnerability to be exploitable.,https://www.npmjs.com/advisories/642,
glance,3.0.7,All versions of glance are vulnerable to Stored Cross-Site Scripting (XSS). This is only exploitable if the attacker is able to control the name of a file that is served by the glance package.,https://www.npmjs.com/advisories/610,
public,3.0.7,All versions of public are vulnerable to stored cross-site scripting (XSS).,https://www.npmjs.com/advisories/609,
bracket-template,1.1.5,All versions of bracket-template are vulnerable to stored cross-site scripting (XSS). This is exploitable when a variable passed in via a GET parameter is used in a template.,https://www.npmjs.com/advisories/608,
metascraper,5.2.4,Versions of metascraper prior to 5.3.0 are vulnerable to stored cross-site scripting (XSS).,https://www.npmjs.com/advisories/603,
simple-server,<1.0.1,Versions of simple-server before 1.1.0 are vulnerable to stored cross-site scripting (XSS). This is exploitable if an attacker can control a filename on the server.,https://www.npmjs.com/advisories/595,
mrk.js,2.0.0,Versions of mrk.js before 2.0.1 are vulnerable to cross-site scripting (XSS) when markdown is converted to HTML.,https://www.npmjs.com/advisories/587,
anywhere,1.4.0,Versions of anywhere before 1.5.0 are vulnerable to cross-site scripting (XSS).,https://www.npmjs.com/advisories/584,
html-janitor,2.0.4,This is exploitable if user-controlled data is passed into the modules clean() function.,https://www.npmjs.com/advisories/576,
crud-file-server,0.7.0,Versions of crud-file-server before 0.8.0 are vulnerable to stored cross-site scripting (XSS). This is due to insufficient santiziation of filenames when directory index is served by crud-file-server.,https://www.npmjs.com/advisories/570,
redis-commander,0.6.6,"Affected versions of redis-commander contain a cross-site scripting vulnerability in the highlighterId paramter of the clipboard.swf component on hosts serving Redis Commander.
Mitigating factors: Flash must be installed / enabled for this to work. The below proof of concept was verified to work using Firefox 57.0 on Windows 10 by manually installing the Flash NPAPI Windows plugin",https://www.npmjs.com/advisories/562,
yui,3.18.1,"Affected versions of yui are vulnerable to cross-site scripting in the uploader.swf and io.swf utilities, via script injection in the url.",https://www.npmjs.com/advisories/332,
jquery,1.8.3,"Affected versions of jquery are vulnerable to cross-site scripting. This occurs because the main jquery function uses a regular expression to differentiate between HTML and selectors, but does not properly anchor the regular expression. The result is that jquery may interpret HTML as selectors when given certain inputs, allowing for client side code execution.",https://www.npmjs.com/advisories/329,
ag-grid,18.1.2,"Affected versions of ag-grid are vulnerable to Cross-site Scripting (XSS) via Angular Expressions, if used in combination with AngularJS.",https://www.npmjs.com/advisories/327,
i18next,3.4.3,"Descrition_1:Affected versions of i18next may fail to sanitize user input when certain configuration options are used. When using the .init method, passing interpolation options without passing an escapeValue will default to undefined rather than the assumed true.
Description_2:Affected versions of i18next allow untrusted user input to be injected into dictionary key names, resulting in a cross-site scripting vulnerability.","https://www.npmjs.com/advisories/326
https://www.npmjs.com/advisories/325",
remarkable,1.6.2,"Affected versions of remarkable are vulnerable to cross-site scripting. Vulnerable versions of the package allow the use of data: URIs in links, and can therefore execute javascript.",https://www.npmjs.com/advisories/319,
restify,4.0.4,Affected versions of restify are susceptible to a cross-site scripting vulnerability when using URL encoded script tags in a non-existent URL.,https://www.npmjs.com/advisories/314,
morris.js,0.5.0,"Affected versions of morris.js are vulnerable to cross-site scripting attacks in labels that appear when hovering over a particular point on a generated graph. The text content of these labels is not escaped, so if control over the labels is obtained, script can be injected. The script will run on the client side whenever that specific graph is loaded.",https://www.npmjs.com/advisories/307,
forms,1.2.0,"Affected versions of forms do not properly escape HTML in generated forms, which may result in cross-site scripting.",https://www.npmjs.com/advisories/158,
sanitize-html,1.2.2,Affected versions of sanitize-html are vulnerable to cross-site scripting.,https://www.npmjs.com/advisories/155,
nunjucks,2.4.2,"Affected versions of nunjucks do not properly escape specially structured user input in template vars when in auto-escape mode, resulting in a cross-site scripting vulnerability.",https://www.npmjs.com/advisories/147,
plotly.js,1.15.0,Affected versions of plotly.js are vulnerable to cross-site scripting if an attacker can convince a user to visit a malicious plot on a site using this package.,https://www.npmjs.com/advisories/145,
pivottable,1.6.3,"Affected versions of pivottable are vulnerable to cross-site scripting, due to a new mechanism used to render JSON elements.",https://www.npmjs.com/advisories/139/,
c3,0.4.10,Affected versions of c3 are vulnerable to cross-site scripting via improper sanitization of HTML in rendered tooltips.,https://www.npmjs.com/advisories/138,
fuelux,3.17.2,"Affected versions of fuelux contain a cross-site scripting vulnerability in the Pillbox feature. By supplying a script as a value for a new pillbox, it is possible to cause arbitrary script execution.",https://www.npmjs.com/advisories/133,
jqtree,1.3.3,"Affected versions of jqtree are vulnerable to cross-site scripting in the drag and drop functionality for modifying tree data.
When a user attempts to drag a node to a different position in the hierarchy, script content existing within the node will be executed.",https://www.npmjs.com/advisories/132,
emojione,1.3.0,"Affected versions of emojione are vulnerable to cross-site scripting when user input is passed into the toShort(), shortnameToImage(), unicodeToImage(), and toImage() functions.",https://www.npmjs.com/advisories/129,
rendr,1.1.3,"Affected versions of rendr are vulnerable to cross-site scripting when client side rendering is done inside a _block.
Server side rendering is not affected and is properly escaped.",https://www.npmjs.com/advisories/128,
jquery-ui,1.10.5,"Affected versions of jquery-ui are vulnerable to a cross-site scripting vulnerability when arbitrary user input is supplied as the value of the closeText parameter in the dialog function.

jQuery-UI is a library for manipulating UI elements via jQuery.

Version 1.11.4 has a cross site scripting (XSS) vulnerability in the closeText parameter of the dialog function. If your application passes user input to this parameter, it may be vulnerable to XSS via this attack vector.",https://www.npmjs.com/advisories/127,
gmail-js,0.6.4,"Affected versions of gmail-js are vulnerable to cross-site scripting in the tools.parse_response, helper.get.visible_emails_post, and helper.get.email_data_post functions, which pass user input directly into the Function constructor.",https://www.npmjs.com/advisories/125,
bootstrap-tagsinput,0.7.1,"All versions of bootstrap-tagsinput are vulnerable to cross-site scripting when user input is passed into the itemTitle parameter unmodified, as the package fails to properly sanitize or encode user input for that parameter.",https://www.npmjs.com/advisories/124,
backbone,0.3.0,"Affected versions of backbone are vulnerable to cross-site scripting when users are allowed to supply input to the Model#Escape function, and the output is then written to the DOM.
The vulnerability occurs as a result of the regular expression used to encode metacharacters failing to take HTML Entities such as &#60; into account.",https://www.npmjs.com/advisories/108,
datatables,1.10.8,Cross-site scripting (XSS) vulnerability in the DataTables plugin 1.10.8 and earlier for jQuery allows remote attackers to inject arbitrary web script or HTML via the scripts parameter to media/unit_testing/templates/6776.php.,https://www.npmjs.com/advisories/5,
