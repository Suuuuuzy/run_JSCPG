INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./tests/vul_demo.js BEGINS
INFO:root:name node for ./tests/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
INFO:root:RUN :
INFO:root:REGISTER 61 to 1
INFO:root:REGISTER 359 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 7): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./tests/growl.js BEGINS
INFO:root:name node for ./tests/growl.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for exec does not exist
INFO:root:name node for fs does not exist
INFO:root:name node for path does not exist
INFO:root:name node for exists does not exist
INFO:root:name node for os does not exist
INFO:root:name node for quote does not exist
INFO:root:name node for cmd does not exist
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:name node for which does not exist
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:name node for growl does not exist
INFO:root:Declared function obj nodes: ['1587']
INFO:root:FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 7): [97m[100mAST_ASSIGN[0m exec, exec = require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 7): [97m[100mAST_PROP[0m exec, require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 7): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 10 (Line 7): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module child_process at built-in not found!
INFO:root:9: function returned_objs=[], used_objs=[]
INFO:root:PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
INFO:root:name node for require('child_process') does not exist
INFO:root:Add prop name node require('child_process').exec (1596->1597)
INFO:root:8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 7): [97m[100mAST_VAR[0m exec, 
INFO:root:6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 15 (Line 8): [97m[100mAST_ASSIGN[0m fs, fs = require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 18 (Line 8): [97m[100mAST_CALL[0m require, require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 19 (Line 8): [97m[100mAST_NAME[0m require, 
INFO:root:19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module fs at built-in not found!
INFO:root:18: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 8): [97m[100mAST_VAR[0m fs, 
INFO:root:16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
ERROR:root:Right side handling error at statement 15, child 18
INFO:root:[1m[36mHANDLE NODE[0m 23 (Line 9): [97m[100mAST_ASSIGN[0m path, path = require('path')
INFO:root:[1m[36mHANDLE NODE[0m 26 (Line 9): [97m[100mAST_CALL[0m require, require('path')
INFO:root:[1m[36mHANDLE NODE[0m 27 (Line 9): [97m[100mAST_NAME[0m require, 
INFO:root:27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module path at built-in not found!
INFO:root:26: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 24 (Line 9): [97m[100mAST_VAR[0m path, 
INFO:root:24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
ERROR:root:Right side handling error at statement 23, child 26
INFO:root:[1m[36mHANDLE NODE[0m 31 (Line 10): [97m[100mAST_ASSIGN[0m exists, exists = fs.existsSync || path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 10): [97m[100mAST_BINARY_OP[0m existsSync, ||
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 10): [97m[100mAST_PROP[0m existsSync, fs.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 10): [97m[100mAST_VAR[0m fs, 
INFO:root:36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
INFO:root:Add prop name node fs.existsSync (1545->1598)
INFO:root:35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 10): [97m[100mAST_PROP[0m existsSync, path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 40 (Line 10): [97m[100mAST_VAR[0m path, 
INFO:root:40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
INFO:root:39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 32 (Line 10): [97m[100mAST_VAR[0m exists, 
INFO:root:32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
ERROR:root:Right side handling error at statement 31, child 34
INFO:root:[1m[36mHANDLE NODE[0m 43 (Line 11): [97m[100mAST_ASSIGN[0m os, os = require('os')
INFO:root:[1m[36mHANDLE NODE[0m 46 (Line 11): [97m[100mAST_CALL[0m require, require('os')
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 11): [97m[100mAST_NAME[0m require, 
INFO:root:47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module os at built-in not found!
INFO:root:46: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 44 (Line 11): [97m[100mAST_VAR[0m os, 
INFO:root:44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
ERROR:root:Right side handling error at statement 43, child 46
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 12): [97m[100mAST_ASSIGN[0m quote, quote = JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 12): [97m[100mAST_PROP[0m stringify, JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 55 (Line 12): [97m[100mAST_VAR[0m JSON, 
INFO:root:Name node JSON not found,  name node
INFO:root:55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
INFO:root:PARENT OBJ JSON NOT DEFINED, creating object nodes
INFO:root:Add prop name node JSON.stringify (1600->1601)
INFO:root:54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 12): [97m[100mAST_VAR[0m quote, 
INFO:root:52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 13): [97m[100mAST_ASSIGN[0m cmd, cmd
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 13): [97m[100mAST_VAR[0m cmd, 
INFO:root:59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 140 (Line 25): [97m[100mAST_SWITCH[0m type, 
INFO:root:[1m[36mHANDLE NODE[0m 141 (Line 25): [97m[100mAST_METHOD_CALL[0m type, os.type()
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:Add prop name node os.type (1545->1602)
INFO:root:141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: os.type
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:141: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 146 (Line 25): [97m[100mAST_SWITCH_LIST[0m 'Darwin', 
INFO:root:[1m[36mHANDLE NODE[0m 148 (Line 26): [97m[100mstring[0m 'Darwin', 'Darwin'
INFO:root:148 handle result: obj_nodes=['1620'], value='Darwin'
INFO:root:BLOCK 149 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 150 (Line 27): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 151 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 152 (Line 27): [97m[100mAST_CALL[0m which, which('terminal-notifier')
INFO:root:[1m[36mHANDLE NODE[0m 153 (Line 27): [97m[100mAST_NAME[0m which, 
INFO:root:153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
INFO:root:[1m[36mHANDLE NODE[0m 156 (Line 27): [97m[100mstring[0m 'terminal-notifier', 'terminal-notifier'
INFO:root:156 handle result: obj_nodes=['1621'], value='terminal-notifier'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
INFO:root:name node for name does not exist
INFO:root:name node for paths does not exist
INFO:root:name node for loc does not exist
INFO:root:FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
INFO:root:BLOCK 71 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 16): [97m[100mAST_ASSIGN[0m paths, paths = process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 75 (Line 16): [97m[100mAST_METHOD_CALL[0m split, process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:Name node process not found,  name node
INFO:root:78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
INFO:root:PARENT OBJ process NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env (1632->1633)
INFO:root:77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
INFO:root:PARENT OBJ process.env NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH (1634->1635)
INFO:root:76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
INFO:root:PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH.split (1636->1637)
INFO:root:75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: process.env.PATH.split
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
INFO:root:77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
INFO:root:76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 16): [97m[100mstring[0m ':', ':'
INFO:root:84 handle result: obj_nodes=['1649'], value=':'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:75: function returned_objs=[], used_objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 16): [97m[100mAST_VAR[0m paths, 
INFO:root:73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 17): [97m[100mAST_ASSIGN[0m loc, loc
INFO:root:[1m[36mHANDLE NODE[0m 86 (Line 17): [97m[100mAST_VAR[0m loc, 
INFO:root:86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
INFO:root:[1m[36mHANDLE NODE[0m 88 (Line 19): [97m[100mAST_FOR[0m, 
INFO:root:152: function returned_objs=[], used_objs=[]
INFO:root:BLOCK 157 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 158 (Line 28): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 161 (Line 28): [97m[100mAST_ARRAY[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 162 (Line 29): [97m[100mAST_ARRAY_ELEM[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 163 (Line 29): [97m[100mstring[0m "Darwin-NotificationCenter", "Darwin-NotificationCenter"
INFO:root:163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
INFO:root:[1m[36mHANDLE NODE[0m 165 (Line 30): [97m[100mAST_ARRAY_ELEM[0m "terminal-notifier", 
INFO:root:[1m[36mHANDLE NODE[0m 166 (Line 30): [97m[100mstring[0m "terminal-notifier", "terminal-notifier"
INFO:root:166 handle result: obj_nodes=['1661'], value="terminal-notifier"
INFO:root:[1m[36mHANDLE NODE[0m 168 (Line 31): [97m[100mAST_ARRAY_ELEM[0m '-message', 
INFO:root:[1m[36mHANDLE NODE[0m 169 (Line 31): [97m[100mstring[0m '-message', '-message'
INFO:root:169 handle result: obj_nodes=['1663'], value='-message'
INFO:root:[1m[36mHANDLE NODE[0m 171 (Line 32): [97m[100mAST_ARRAY_ELEM[0m '-title', 
INFO:root:[1m[36mHANDLE NODE[0m 172 (Line 32): [97m[100mstring[0m '-title', '-title'
INFO:root:172 handle result: obj_nodes=['1665'], value='-title'
INFO:root:[1m[36mHANDLE NODE[0m 174 (Line 33): [97m[100mAST_ARRAY_ELEM[0m '-subtitle', 
INFO:root:[1m[36mHANDLE NODE[0m 175 (Line 33): [97m[100mstring[0m '-subtitle', '-subtitle'
INFO:root:175 handle result: obj_nodes=['1667'], value='-subtitle'
INFO:root:[1m[36mHANDLE NODE[0m 177 (Line 34): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 178 (Line 34): [97m[100mAST_ARRAY[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 179 (Line 35): [97m[100mAST_ARRAY_ELEM[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 180 (Line 35): [97m[100mstring[0m '-execute', '-execute'
INFO:root:180 handle result: obj_nodes=['1671'], value='-execute'
INFO:root:[1m[36mHANDLE NODE[0m 182 (Line 36): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 183 (Line 36): [97m[100mAST_ARRAY[0m, []
INFO:root:[1m[36mHANDLE NODE[0m 159 (Line 28): [97m[100mAST_VAR[0m cmd, 
INFO:root:159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 186 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 187 (Line 27): [97m[100mNULL[0m, 
INFO:root:BLOCK 188 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 189 (Line 40): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 192 (Line 40): [97m[100mAST_ARRAY[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 193 (Line 41): [97m[100mAST_ARRAY_ELEM[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 194 (Line 41): [97m[100mstring[0m "Darwin-Growl", "Darwin-Growl"
INFO:root:194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
INFO:root:[1m[36mHANDLE NODE[0m 196 (Line 42): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 197 (Line 42): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:197 handle result: obj_nodes=['1682'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 199 (Line 43): [97m[100mAST_ARRAY_ELEM[0m '-m', 
INFO:root:[1m[36mHANDLE NODE[0m 200 (Line 43): [97m[100mstring[0m '-m', '-m'
INFO:root:200 handle result: obj_nodes=['1684'], value='-m'
INFO:root:[1m[36mHANDLE NODE[0m 202 (Line 44): [97m[100mAST_ARRAY_ELEM[0m '--sticky', 
INFO:root:[1m[36mHANDLE NODE[0m 203 (Line 44): [97m[100mstring[0m '--sticky', '--sticky'
INFO:root:203 handle result: obj_nodes=['1686'], value='--sticky'
INFO:root:[1m[36mHANDLE NODE[0m 205 (Line 45): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 206 (Line 45): [97m[100mAST_ARRAY[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 207 (Line 46): [97m[100mAST_ARRAY_ELEM[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 208 (Line 46): [97m[100mstring[0m '--priority', '--priority'
INFO:root:208 handle result: obj_nodes=['1690'], value='--priority'
INFO:root:[1m[36mHANDLE NODE[0m 210 (Line 47): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 211 (Line 47): [97m[100mAST_ARRAY[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 212 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 213 (Line 48): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 216 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 217 (Line 49): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 220 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 221 (Line 50): [97m[100minteger[0m 0, 0
INFO:root:221 handle result: obj_nodes=['1694'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 223 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 224 (Line 51): [97m[100minteger[0m 1, 1
INFO:root:224 handle result: obj_nodes=['1696'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 226 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 227 (Line 52): [97m[100minteger[0m 2, 2
INFO:root:227 handle result: obj_nodes=['1698'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 229 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Very Low", 
INFO:root:[1m[36mHANDLE NODE[0m 230 (Line 53): [97m[100mstring[0m "Very Low", "Very Low"
INFO:root:230 handle result: obj_nodes=['1700'], value="Very Low"
INFO:root:[1m[36mHANDLE NODE[0m 232 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Moderate", 
INFO:root:[1m[36mHANDLE NODE[0m 233 (Line 54): [97m[100mstring[0m "Moderate", "Moderate"
INFO:root:233 handle result: obj_nodes=['1702'], value="Moderate"
INFO:root:[1m[36mHANDLE NODE[0m 235 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Normal", 
INFO:root:[1m[36mHANDLE NODE[0m 236 (Line 55): [97m[100mstring[0m "Normal", "Normal"
INFO:root:236 handle result: obj_nodes=['1704'], value="Normal"
INFO:root:[1m[36mHANDLE NODE[0m 238 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "High", 
INFO:root:[1m[36mHANDLE NODE[0m 239 (Line 56): [97m[100mstring[0m "High", "High"
INFO:root:239 handle result: obj_nodes=['1706'], value="High"
INFO:root:[1m[36mHANDLE NODE[0m 241 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Emergency", 
INFO:root:[1m[36mHANDLE NODE[0m 242 (Line 57): [97m[100mstring[0m "Emergency", "Emergency"
INFO:root:242 handle result: obj_nodes=['1708'], value="Emergency"
INFO:root:[1m[36mHANDLE NODE[0m 190 (Line 40): [97m[100mAST_VAR[0m cmd, 
INFO:root:190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 246 (Line 62): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 249 (Line 63): [97m[100mstring[0m 'Linux', 'Linux'
INFO:root:249 handle result: obj_nodes=['1712'], value='Linux'
INFO:root:BLOCK 250 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 251 (Line 64): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 254 (Line 64): [97m[100mAST_ARRAY[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 255 (Line 65): [97m[100mAST_ARRAY_ELEM[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 256 (Line 65): [97m[100mstring[0m "Linux", "Linux"
INFO:root:256 handle result: obj_nodes=['1715'], value="Linux"
INFO:root:[1m[36mHANDLE NODE[0m 258 (Line 66): [97m[100mAST_ARRAY_ELEM[0m "notify-send", 
INFO:root:[1m[36mHANDLE NODE[0m 259 (Line 66): [97m[100mstring[0m "notify-send", "notify-send"
INFO:root:259 handle result: obj_nodes=['1717'], value="notify-send"
INFO:root:[1m[36mHANDLE NODE[0m 261 (Line 67): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 262 (Line 67): [97m[100mstring[0m '', ''
INFO:root:262 handle result: obj_nodes=['1719'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 264 (Line 68): [97m[100mAST_ARRAY_ELEM[0m '-t 0', 
INFO:root:[1m[36mHANDLE NODE[0m 265 (Line 68): [97m[100mstring[0m '-t 0', '-t 0'
INFO:root:265 handle result: obj_nodes=['1721'], value='-t 0'
INFO:root:[1m[36mHANDLE NODE[0m 267 (Line 69): [97m[100mAST_ARRAY_ELEM[0m '-i', 
INFO:root:[1m[36mHANDLE NODE[0m 268 (Line 69): [97m[100mstring[0m '-i', '-i'
INFO:root:268 handle result: obj_nodes=['1723'], value='-i'
INFO:root:[1m[36mHANDLE NODE[0m 270 (Line 70): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 271 (Line 70): [97m[100mAST_ARRAY[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 272 (Line 71): [97m[100mAST_ARRAY_ELEM[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 273 (Line 71): [97m[100mstring[0m '-u', '-u'
INFO:root:273 handle result: obj_nodes=['1727'], value='-u'
INFO:root:[1m[36mHANDLE NODE[0m 275 (Line 72): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 276 (Line 72): [97m[100mAST_ARRAY[0m "low", [            "low"          , "normal"          , "critical"        ]
INFO:root:[1m[36mHANDLE NODE[0m 277 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "low", 
INFO:root:[1m[36mHANDLE NODE[0m 278 (Line 73): [97m[100mstring[0m "low", "low"
INFO:root:278 handle result: obj_nodes=['1731'], value="low"
INFO:root:[1m[36mHANDLE NODE[0m 280 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "normal", 
INFO:root:[1m[36mHANDLE NODE[0m 281 (Line 74): [97m[100mstring[0m "normal", "normal"
INFO:root:281 handle result: obj_nodes=['1733'], value="normal"
INFO:root:[1m[36mHANDLE NODE[0m 283 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "critical", 
INFO:root:[1m[36mHANDLE NODE[0m 284 (Line 75): [97m[100mstring[0m "critical", "critical"
INFO:root:284 handle result: obj_nodes=['1735'], value="critical"
INFO:root:[1m[36mHANDLE NODE[0m 252 (Line 64): [97m[100mAST_VAR[0m cmd, 
INFO:root:252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 288 (Line 79): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 291 (Line 80): [97m[100mstring[0m 'Windows_NT', 'Windows_NT'
INFO:root:291 handle result: obj_nodes=['1739'], value='Windows_NT'
INFO:root:BLOCK 292 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 293 (Line 81): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 296 (Line 81): [97m[100mAST_ARRAY[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 297 (Line 82): [97m[100mAST_ARRAY_ELEM[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 298 (Line 82): [97m[100mstring[0m "Windows", "Windows"
INFO:root:298 handle result: obj_nodes=['1742'], value="Windows"
INFO:root:[1m[36mHANDLE NODE[0m 300 (Line 83): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 301 (Line 83): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:301 handle result: obj_nodes=['1744'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 303 (Line 84): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 304 (Line 84): [97m[100mstring[0m '', ''
INFO:root:304 handle result: obj_nodes=['1746'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 306 (Line 85): [97m[100mAST_ARRAY_ELEM[0m '/s:true', 
INFO:root:[1m[36mHANDLE NODE[0m 307 (Line 85): [97m[100mstring[0m '/s:true', '/s:true'
INFO:root:307 handle result: obj_nodes=['1748'], value='/s:true'
INFO:root:[1m[36mHANDLE NODE[0m 309 (Line 86): [97m[100mAST_ARRAY_ELEM[0m '/t:', 
INFO:root:[1m[36mHANDLE NODE[0m 310 (Line 86): [97m[100mstring[0m '/t:', '/t:'
INFO:root:310 handle result: obj_nodes=['1750'], value='/t:'
INFO:root:[1m[36mHANDLE NODE[0m 312 (Line 87): [97m[100mAST_ARRAY_ELEM[0m '/i:', 
INFO:root:[1m[36mHANDLE NODE[0m 313 (Line 87): [97m[100mstring[0m '/i:', '/i:'
INFO:root:313 handle result: obj_nodes=['1752'], value='/i:'
INFO:root:[1m[36mHANDLE NODE[0m 315 (Line 88): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 316 (Line 88): [97m[100mAST_ARRAY[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 317 (Line 89): [97m[100mAST_ARRAY_ELEM[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 318 (Line 89): [97m[100mstring[0m '/p:', '/p:'
INFO:root:318 handle result: obj_nodes=['1756'], value='/p:'
INFO:root:[1m[36mHANDLE NODE[0m 320 (Line 90): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 321 (Line 90): [97m[100mAST_ARRAY[0m 0, [              -2            , -1            , 0            , 1            , 2          ]
INFO:root:[1m[36mHANDLE NODE[0m 322 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 323 (Line 91): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 326 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 327 (Line 92): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 330 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 331 (Line 93): [97m[100minteger[0m 0, 0
INFO:root:331 handle result: obj_nodes=['1760'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 333 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 334 (Line 94): [97m[100minteger[0m 1, 1
INFO:root:334 handle result: obj_nodes=['1762'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 336 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 337 (Line 95): [97m[100minteger[0m 2, 2
INFO:root:337 handle result: obj_nodes=['1764'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 294 (Line 81): [97m[100mAST_VAR[0m cmd, 
INFO:root:294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 341 (Line 99): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 343 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 346 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 351 (Line 106): [97m[100mAST_VAR[0m growl, 
INFO:root:351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 347 (Line 106): [97m[100mAST_PROP[0m exports, module.exports
INFO:root:[1m[36mHANDLE NODE[0m 348 (Line 106): [97m[100mAST_VAR[0m module, 
INFO:root:348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
INFO:root:347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
INFO:root:Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 344 (Line 106): [97m[100mAST_VAR[0m exports, 
INFO:root:344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
INFO:root:Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 353 (Line 112): [97m[100mAST_ASSIGN[0m '1.4.1', =
INFO:root:[1m[36mHANDLE NODE[0m 358 (Line 112): [97m[100mstring[0m '1.4.1', '1.4.1'
INFO:root:358 handle result: obj_nodes=['1768'], value='1.4.1'
INFO:root:[1m[36mHANDLE NODE[0m 354 (Line 112): [97m[100mAST_PROP[0m version, exports.version
INFO:root:[1m[36mHANDLE NODE[0m 355 (Line 112): [97m[100mAST_VAR[0m exports, 
INFO:root:355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
INFO:root:Cannot find "direct" property, going into __proto__ ['1024']...
INFO:root:  exports.__proto__.version
INFO:root:Add prop name node exports.version (1587->1769)
INFO:root:354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
INFO:root:Assigning ['1768'] to 1769, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:Declared function obj nodes: ['1587']
INFO:root:[1m[36mHANDLE NODE[0m 994 (Line 234): [97m[100mNULL[0m, ;
INFO:root:[1m[36mHANDLE NODE[0m 995 (Line 236): [97m[100mAST_CALL[0m growl, growl("test", "", "")
INFO:root:[1m[36mHANDLE NODE[0m 996 (Line 236): [97m[100mAST_NAME[0m growl, 
INFO:root:996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 999 (Line 236): [97m[100mstring[0m "test", "test"
INFO:root:999 handle result: obj_nodes=['1770'], value="test"
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1000 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1000 handle result: obj_nodes=['1771'], value=""
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1001 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1001 handle result: obj_nodes=['1772'], value=""
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
INFO:root:name node for msg does not exist
INFO:root:add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
INFO:root:name node for options does not exist
INFO:root:add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
INFO:root:name node for fn does not exist
INFO:root:name node for image does not exist
INFO:root:name node for args does not exist
INFO:root:FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
INFO:root:BLOCK 377 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 378 (Line 145): [97m[100mAST_ASSIGN[0m image, image
INFO:root:[1m[36mHANDLE NODE[0m 379 (Line 145): [97m[100mAST_VAR[0m image, 
INFO:root:379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
INFO:root:[1m[36mHANDLE NODE[0m 381 (Line 146): [97m[100mAST_ASSIGN[0m args, args
INFO:root:[1m[36mHANDLE NODE[0m 382 (Line 146): [97m[100mAST_VAR[0m args, 
INFO:root:382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
INFO:root:[1m[36mHANDLE NODE[0m 384 (Line 147): [97m[100mAST_ASSIGN[0m options, options = options || {}
INFO:root:[1m[36mHANDLE NODE[0m 387 (Line 147): [97m[100mAST_BINARY_OP[0m options, ||
INFO:root:[1m[36mHANDLE NODE[0m 388 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:[1m[36mHANDLE NODE[0m 390 (Line 147): [97m[100mAST_ARRAY[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 385 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:Assigning ['1786', '1771'] to 1779, pre_objs=['1771'], branches=[]
INFO:root:  Remove 1771
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 391 (Line 148): [97m[100mAST_ASSIGN[0m fn, fn = fn || function(){}
INFO:root:[1m[36mHANDLE NODE[0m 394 (Line 148): [97m[100mAST_BINARY_OP[0m fn, ||
INFO:root:[1m[36mHANDLE NODE[0m 395 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 397 (Line 148): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['1789']
INFO:root:[1m[36mHANDLE NODE[0m 392 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:Assigning ['1789', '1772'] to 1781, pre_objs=['1772'], branches=[]
INFO:root:  Remove 1772
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 407 (Line 151): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 408 (Line 151): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 409 (Line 151): [97m[100mAST_UNARY_OP[0m cmd, !cmd
INFO:root:BLOCK 412 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 413 (Line 151): [97m[100mAST_RETURN[0m, return fn(new Error('growl not supported on this platform'));
INFO:root:[1m[36mHANDLE NODE[0m 414 (Line 151): [97m[100mAST_CALL[0m fn, fn(new Error('growl not supported on this platform'))
INFO:root:[1m[36mHANDLE NODE[0m 415 (Line 151): [97m[100mAST_NAME[0m fn, 
INFO:root:415 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 418 (Line 151): [97m[100mAST_NEW[0m Error, new Error('growl not supported on this platform')
INFO:root:[1m[36mHANDLE NODE[0m 419 (Line 151): [97m[100mAST_NAME[0m Error, 
INFO:root:419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
INFO:root:[1m[36mHANDLE NODE[0m 422 (Line 151): [97m[100mstring[0m 'growl not supported on this platform', 'growl not supported on this platform'
INFO:root:422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
INFO:root:prototype obj node is ['1305']
INFO:root:callback functions =
INFO:root:[31mEdge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:418: function returned_objs=['1800'], used_objs=['1795']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#0")]
INFO:root:BLOCK 404 STARTS
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
INFO:root:RUN :
INFO:root:REGISTER 61 to 1
INFO:root:REGISTER 359 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 7): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./tests/growl.js BEGINS
INFO:root:name node for ./tests/growl.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for exec does not exist
INFO:root:name node for fs does not exist
INFO:root:name node for path does not exist
INFO:root:name node for exists does not exist
INFO:root:name node for os does not exist
INFO:root:name node for quote does not exist
INFO:root:name node for cmd does not exist
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:name node for which does not exist
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:name node for growl does not exist
INFO:root:Declared function obj nodes: ['1587']
INFO:root:FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 7): [97m[100mAST_ASSIGN[0m exec, exec = require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 7): [97m[100mAST_PROP[0m exec, require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 7): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 10 (Line 7): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module child_process at built-in not found!
INFO:root:9: function returned_objs=[], used_objs=[]
INFO:root:PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
INFO:root:name node for require('child_process') does not exist
INFO:root:Add prop name node require('child_process').exec (1596->1597)
INFO:root:8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 7): [97m[100mAST_VAR[0m exec, 
INFO:root:6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 15 (Line 8): [97m[100mAST_ASSIGN[0m fs, fs = require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 18 (Line 8): [97m[100mAST_CALL[0m require, require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 19 (Line 8): [97m[100mAST_NAME[0m require, 
INFO:root:19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module fs at built-in not found!
INFO:root:18: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 8): [97m[100mAST_VAR[0m fs, 
INFO:root:16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
ERROR:root:Right side handling error at statement 15, child 18
INFO:root:[1m[36mHANDLE NODE[0m 23 (Line 9): [97m[100mAST_ASSIGN[0m path, path = require('path')
INFO:root:[1m[36mHANDLE NODE[0m 26 (Line 9): [97m[100mAST_CALL[0m require, require('path')
INFO:root:[1m[36mHANDLE NODE[0m 27 (Line 9): [97m[100mAST_NAME[0m require, 
INFO:root:27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module path at built-in not found!
INFO:root:26: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 24 (Line 9): [97m[100mAST_VAR[0m path, 
INFO:root:24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
ERROR:root:Right side handling error at statement 23, child 26
INFO:root:[1m[36mHANDLE NODE[0m 31 (Line 10): [97m[100mAST_ASSIGN[0m exists, exists = fs.existsSync || path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 10): [97m[100mAST_BINARY_OP[0m existsSync, ||
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 10): [97m[100mAST_PROP[0m existsSync, fs.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 10): [97m[100mAST_VAR[0m fs, 
INFO:root:36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
INFO:root:Add prop name node fs.existsSync (1545->1598)
INFO:root:35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 10): [97m[100mAST_PROP[0m existsSync, path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 40 (Line 10): [97m[100mAST_VAR[0m path, 
INFO:root:40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
INFO:root:39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 32 (Line 10): [97m[100mAST_VAR[0m exists, 
INFO:root:32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
ERROR:root:Right side handling error at statement 31, child 34
INFO:root:[1m[36mHANDLE NODE[0m 43 (Line 11): [97m[100mAST_ASSIGN[0m os, os = require('os')
INFO:root:[1m[36mHANDLE NODE[0m 46 (Line 11): [97m[100mAST_CALL[0m require, require('os')
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 11): [97m[100mAST_NAME[0m require, 
INFO:root:47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module os at built-in not found!
INFO:root:46: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 44 (Line 11): [97m[100mAST_VAR[0m os, 
INFO:root:44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
ERROR:root:Right side handling error at statement 43, child 46
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 12): [97m[100mAST_ASSIGN[0m quote, quote = JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 12): [97m[100mAST_PROP[0m stringify, JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 55 (Line 12): [97m[100mAST_VAR[0m JSON, 
INFO:root:Name node JSON not found,  name node
INFO:root:55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
INFO:root:PARENT OBJ JSON NOT DEFINED, creating object nodes
INFO:root:Add prop name node JSON.stringify (1600->1601)
INFO:root:54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 12): [97m[100mAST_VAR[0m quote, 
INFO:root:52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 13): [97m[100mAST_ASSIGN[0m cmd, cmd
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 13): [97m[100mAST_VAR[0m cmd, 
INFO:root:59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 140 (Line 25): [97m[100mAST_SWITCH[0m type, 
INFO:root:[1m[36mHANDLE NODE[0m 141 (Line 25): [97m[100mAST_METHOD_CALL[0m type, os.type()
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:Add prop name node os.type (1545->1602)
INFO:root:141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: os.type
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:141: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 146 (Line 25): [97m[100mAST_SWITCH_LIST[0m 'Darwin', 
INFO:root:[1m[36mHANDLE NODE[0m 148 (Line 26): [97m[100mstring[0m 'Darwin', 'Darwin'
INFO:root:148 handle result: obj_nodes=['1620'], value='Darwin'
INFO:root:BLOCK 149 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 150 (Line 27): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 151 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 152 (Line 27): [97m[100mAST_CALL[0m which, which('terminal-notifier')
INFO:root:[1m[36mHANDLE NODE[0m 153 (Line 27): [97m[100mAST_NAME[0m which, 
INFO:root:153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
INFO:root:[1m[36mHANDLE NODE[0m 156 (Line 27): [97m[100mstring[0m 'terminal-notifier', 'terminal-notifier'
INFO:root:156 handle result: obj_nodes=['1621'], value='terminal-notifier'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
INFO:root:name node for name does not exist
INFO:root:name node for paths does not exist
INFO:root:name node for loc does not exist
INFO:root:FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
INFO:root:BLOCK 71 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 16): [97m[100mAST_ASSIGN[0m paths, paths = process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 75 (Line 16): [97m[100mAST_METHOD_CALL[0m split, process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:Name node process not found,  name node
INFO:root:78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
INFO:root:PARENT OBJ process NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env (1632->1633)
INFO:root:77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
INFO:root:PARENT OBJ process.env NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH (1634->1635)
INFO:root:76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
INFO:root:PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH.split (1636->1637)
INFO:root:75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: process.env.PATH.split
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
INFO:root:77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
INFO:root:76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 16): [97m[100mstring[0m ':', ':'
INFO:root:84 handle result: obj_nodes=['1649'], value=':'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:75: function returned_objs=[], used_objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 16): [97m[100mAST_VAR[0m paths, 
INFO:root:73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 17): [97m[100mAST_ASSIGN[0m loc, loc
INFO:root:[1m[36mHANDLE NODE[0m 86 (Line 17): [97m[100mAST_VAR[0m loc, 
INFO:root:86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
INFO:root:[1m[36mHANDLE NODE[0m 88 (Line 19): [97m[100mAST_FOR[0m, 
INFO:root:152: function returned_objs=[], used_objs=[]
INFO:root:BLOCK 157 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 158 (Line 28): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 161 (Line 28): [97m[100mAST_ARRAY[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 162 (Line 29): [97m[100mAST_ARRAY_ELEM[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 163 (Line 29): [97m[100mstring[0m "Darwin-NotificationCenter", "Darwin-NotificationCenter"
INFO:root:163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
INFO:root:[1m[36mHANDLE NODE[0m 165 (Line 30): [97m[100mAST_ARRAY_ELEM[0m "terminal-notifier", 
INFO:root:[1m[36mHANDLE NODE[0m 166 (Line 30): [97m[100mstring[0m "terminal-notifier", "terminal-notifier"
INFO:root:166 handle result: obj_nodes=['1661'], value="terminal-notifier"
INFO:root:[1m[36mHANDLE NODE[0m 168 (Line 31): [97m[100mAST_ARRAY_ELEM[0m '-message', 
INFO:root:[1m[36mHANDLE NODE[0m 169 (Line 31): [97m[100mstring[0m '-message', '-message'
INFO:root:169 handle result: obj_nodes=['1663'], value='-message'
INFO:root:[1m[36mHANDLE NODE[0m 171 (Line 32): [97m[100mAST_ARRAY_ELEM[0m '-title', 
INFO:root:[1m[36mHANDLE NODE[0m 172 (Line 32): [97m[100mstring[0m '-title', '-title'
INFO:root:172 handle result: obj_nodes=['1665'], value='-title'
INFO:root:[1m[36mHANDLE NODE[0m 174 (Line 33): [97m[100mAST_ARRAY_ELEM[0m '-subtitle', 
INFO:root:[1m[36mHANDLE NODE[0m 175 (Line 33): [97m[100mstring[0m '-subtitle', '-subtitle'
INFO:root:175 handle result: obj_nodes=['1667'], value='-subtitle'
INFO:root:[1m[36mHANDLE NODE[0m 177 (Line 34): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 178 (Line 34): [97m[100mAST_ARRAY[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 179 (Line 35): [97m[100mAST_ARRAY_ELEM[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 180 (Line 35): [97m[100mstring[0m '-execute', '-execute'
INFO:root:180 handle result: obj_nodes=['1671'], value='-execute'
INFO:root:[1m[36mHANDLE NODE[0m 182 (Line 36): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 183 (Line 36): [97m[100mAST_ARRAY[0m, []
INFO:root:[1m[36mHANDLE NODE[0m 159 (Line 28): [97m[100mAST_VAR[0m cmd, 
INFO:root:159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 186 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 187 (Line 27): [97m[100mNULL[0m, 
INFO:root:BLOCK 188 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 189 (Line 40): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 192 (Line 40): [97m[100mAST_ARRAY[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 193 (Line 41): [97m[100mAST_ARRAY_ELEM[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 194 (Line 41): [97m[100mstring[0m "Darwin-Growl", "Darwin-Growl"
INFO:root:194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
INFO:root:[1m[36mHANDLE NODE[0m 196 (Line 42): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 197 (Line 42): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:197 handle result: obj_nodes=['1682'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 199 (Line 43): [97m[100mAST_ARRAY_ELEM[0m '-m', 
INFO:root:[1m[36mHANDLE NODE[0m 200 (Line 43): [97m[100mstring[0m '-m', '-m'
INFO:root:200 handle result: obj_nodes=['1684'], value='-m'
INFO:root:[1m[36mHANDLE NODE[0m 202 (Line 44): [97m[100mAST_ARRAY_ELEM[0m '--sticky', 
INFO:root:[1m[36mHANDLE NODE[0m 203 (Line 44): [97m[100mstring[0m '--sticky', '--sticky'
INFO:root:203 handle result: obj_nodes=['1686'], value='--sticky'
INFO:root:[1m[36mHANDLE NODE[0m 205 (Line 45): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 206 (Line 45): [97m[100mAST_ARRAY[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 207 (Line 46): [97m[100mAST_ARRAY_ELEM[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 208 (Line 46): [97m[100mstring[0m '--priority', '--priority'
INFO:root:208 handle result: obj_nodes=['1690'], value='--priority'
INFO:root:[1m[36mHANDLE NODE[0m 210 (Line 47): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 211 (Line 47): [97m[100mAST_ARRAY[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 212 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 213 (Line 48): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 216 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 217 (Line 49): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 220 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 221 (Line 50): [97m[100minteger[0m 0, 0
INFO:root:221 handle result: obj_nodes=['1694'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 223 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 224 (Line 51): [97m[100minteger[0m 1, 1
INFO:root:224 handle result: obj_nodes=['1696'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 226 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 227 (Line 52): [97m[100minteger[0m 2, 2
INFO:root:227 handle result: obj_nodes=['1698'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 229 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Very Low", 
INFO:root:[1m[36mHANDLE NODE[0m 230 (Line 53): [97m[100mstring[0m "Very Low", "Very Low"
INFO:root:230 handle result: obj_nodes=['1700'], value="Very Low"
INFO:root:[1m[36mHANDLE NODE[0m 232 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Moderate", 
INFO:root:[1m[36mHANDLE NODE[0m 233 (Line 54): [97m[100mstring[0m "Moderate", "Moderate"
INFO:root:233 handle result: obj_nodes=['1702'], value="Moderate"
INFO:root:[1m[36mHANDLE NODE[0m 235 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Normal", 
INFO:root:[1m[36mHANDLE NODE[0m 236 (Line 55): [97m[100mstring[0m "Normal", "Normal"
INFO:root:236 handle result: obj_nodes=['1704'], value="Normal"
INFO:root:[1m[36mHANDLE NODE[0m 238 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "High", 
INFO:root:[1m[36mHANDLE NODE[0m 239 (Line 56): [97m[100mstring[0m "High", "High"
INFO:root:239 handle result: obj_nodes=['1706'], value="High"
INFO:root:[1m[36mHANDLE NODE[0m 241 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Emergency", 
INFO:root:[1m[36mHANDLE NODE[0m 242 (Line 57): [97m[100mstring[0m "Emergency", "Emergency"
INFO:root:242 handle result: obj_nodes=['1708'], value="Emergency"
INFO:root:[1m[36mHANDLE NODE[0m 190 (Line 40): [97m[100mAST_VAR[0m cmd, 
INFO:root:190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 246 (Line 62): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 249 (Line 63): [97m[100mstring[0m 'Linux', 'Linux'
INFO:root:249 handle result: obj_nodes=['1712'], value='Linux'
INFO:root:BLOCK 250 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 251 (Line 64): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 254 (Line 64): [97m[100mAST_ARRAY[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 255 (Line 65): [97m[100mAST_ARRAY_ELEM[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 256 (Line 65): [97m[100mstring[0m "Linux", "Linux"
INFO:root:256 handle result: obj_nodes=['1715'], value="Linux"
INFO:root:[1m[36mHANDLE NODE[0m 258 (Line 66): [97m[100mAST_ARRAY_ELEM[0m "notify-send", 
INFO:root:[1m[36mHANDLE NODE[0m 259 (Line 66): [97m[100mstring[0m "notify-send", "notify-send"
INFO:root:259 handle result: obj_nodes=['1717'], value="notify-send"
INFO:root:[1m[36mHANDLE NODE[0m 261 (Line 67): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 262 (Line 67): [97m[100mstring[0m '', ''
INFO:root:262 handle result: obj_nodes=['1719'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 264 (Line 68): [97m[100mAST_ARRAY_ELEM[0m '-t 0', 
INFO:root:[1m[36mHANDLE NODE[0m 265 (Line 68): [97m[100mstring[0m '-t 0', '-t 0'
INFO:root:265 handle result: obj_nodes=['1721'], value='-t 0'
INFO:root:[1m[36mHANDLE NODE[0m 267 (Line 69): [97m[100mAST_ARRAY_ELEM[0m '-i', 
INFO:root:[1m[36mHANDLE NODE[0m 268 (Line 69): [97m[100mstring[0m '-i', '-i'
INFO:root:268 handle result: obj_nodes=['1723'], value='-i'
INFO:root:[1m[36mHANDLE NODE[0m 270 (Line 70): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 271 (Line 70): [97m[100mAST_ARRAY[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 272 (Line 71): [97m[100mAST_ARRAY_ELEM[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 273 (Line 71): [97m[100mstring[0m '-u', '-u'
INFO:root:273 handle result: obj_nodes=['1727'], value='-u'
INFO:root:[1m[36mHANDLE NODE[0m 275 (Line 72): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 276 (Line 72): [97m[100mAST_ARRAY[0m "low", [            "low"          , "normal"          , "critical"        ]
INFO:root:[1m[36mHANDLE NODE[0m 277 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "low", 
INFO:root:[1m[36mHANDLE NODE[0m 278 (Line 73): [97m[100mstring[0m "low", "low"
INFO:root:278 handle result: obj_nodes=['1731'], value="low"
INFO:root:[1m[36mHANDLE NODE[0m 280 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "normal", 
INFO:root:[1m[36mHANDLE NODE[0m 281 (Line 74): [97m[100mstring[0m "normal", "normal"
INFO:root:281 handle result: obj_nodes=['1733'], value="normal"
INFO:root:[1m[36mHANDLE NODE[0m 283 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "critical", 
INFO:root:[1m[36mHANDLE NODE[0m 284 (Line 75): [97m[100mstring[0m "critical", "critical"
INFO:root:284 handle result: obj_nodes=['1735'], value="critical"
INFO:root:[1m[36mHANDLE NODE[0m 252 (Line 64): [97m[100mAST_VAR[0m cmd, 
INFO:root:252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 288 (Line 79): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 291 (Line 80): [97m[100mstring[0m 'Windows_NT', 'Windows_NT'
INFO:root:291 handle result: obj_nodes=['1739'], value='Windows_NT'
INFO:root:BLOCK 292 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 293 (Line 81): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 296 (Line 81): [97m[100mAST_ARRAY[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 297 (Line 82): [97m[100mAST_ARRAY_ELEM[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 298 (Line 82): [97m[100mstring[0m "Windows", "Windows"
INFO:root:298 handle result: obj_nodes=['1742'], value="Windows"
INFO:root:[1m[36mHANDLE NODE[0m 300 (Line 83): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 301 (Line 83): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:301 handle result: obj_nodes=['1744'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 303 (Line 84): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 304 (Line 84): [97m[100mstring[0m '', ''
INFO:root:304 handle result: obj_nodes=['1746'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 306 (Line 85): [97m[100mAST_ARRAY_ELEM[0m '/s:true', 
INFO:root:[1m[36mHANDLE NODE[0m 307 (Line 85): [97m[100mstring[0m '/s:true', '/s:true'
INFO:root:307 handle result: obj_nodes=['1748'], value='/s:true'
INFO:root:[1m[36mHANDLE NODE[0m 309 (Line 86): [97m[100mAST_ARRAY_ELEM[0m '/t:', 
INFO:root:[1m[36mHANDLE NODE[0m 310 (Line 86): [97m[100mstring[0m '/t:', '/t:'
INFO:root:310 handle result: obj_nodes=['1750'], value='/t:'
INFO:root:[1m[36mHANDLE NODE[0m 312 (Line 87): [97m[100mAST_ARRAY_ELEM[0m '/i:', 
INFO:root:[1m[36mHANDLE NODE[0m 313 (Line 87): [97m[100mstring[0m '/i:', '/i:'
INFO:root:313 handle result: obj_nodes=['1752'], value='/i:'
INFO:root:[1m[36mHANDLE NODE[0m 315 (Line 88): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 316 (Line 88): [97m[100mAST_ARRAY[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 317 (Line 89): [97m[100mAST_ARRAY_ELEM[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 318 (Line 89): [97m[100mstring[0m '/p:', '/p:'
INFO:root:318 handle result: obj_nodes=['1756'], value='/p:'
INFO:root:[1m[36mHANDLE NODE[0m 320 (Line 90): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 321 (Line 90): [97m[100mAST_ARRAY[0m 0, [              -2            , -1            , 0            , 1            , 2          ]
INFO:root:[1m[36mHANDLE NODE[0m 322 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 323 (Line 91): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 326 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 327 (Line 92): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 330 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 331 (Line 93): [97m[100minteger[0m 0, 0
INFO:root:331 handle result: obj_nodes=['1760'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 333 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 334 (Line 94): [97m[100minteger[0m 1, 1
INFO:root:334 handle result: obj_nodes=['1762'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 336 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 337 (Line 95): [97m[100minteger[0m 2, 2
INFO:root:337 handle result: obj_nodes=['1764'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 294 (Line 81): [97m[100mAST_VAR[0m cmd, 
INFO:root:294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 341 (Line 99): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 343 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 346 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 351 (Line 106): [97m[100mAST_VAR[0m growl, 
INFO:root:351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 347 (Line 106): [97m[100mAST_PROP[0m exports, module.exports
INFO:root:[1m[36mHANDLE NODE[0m 348 (Line 106): [97m[100mAST_VAR[0m module, 
INFO:root:348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
INFO:root:347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
INFO:root:Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 344 (Line 106): [97m[100mAST_VAR[0m exports, 
INFO:root:344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
INFO:root:Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 353 (Line 112): [97m[100mAST_ASSIGN[0m '1.4.1', =
INFO:root:[1m[36mHANDLE NODE[0m 358 (Line 112): [97m[100mstring[0m '1.4.1', '1.4.1'
INFO:root:358 handle result: obj_nodes=['1768'], value='1.4.1'
INFO:root:[1m[36mHANDLE NODE[0m 354 (Line 112): [97m[100mAST_PROP[0m version, exports.version
INFO:root:[1m[36mHANDLE NODE[0m 355 (Line 112): [97m[100mAST_VAR[0m exports, 
INFO:root:355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
INFO:root:Cannot find "direct" property, going into __proto__ ['1024']...
INFO:root:  exports.__proto__.version
INFO:root:Add prop name node exports.version (1587->1769)
INFO:root:354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
INFO:root:Assigning ['1768'] to 1769, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:Declared function obj nodes: ['1587']
INFO:root:[1m[36mHANDLE NODE[0m 994 (Line 234): [97m[100mNULL[0m, ;
INFO:root:[1m[36mHANDLE NODE[0m 995 (Line 236): [97m[100mAST_CALL[0m growl, growl("test", "", "")
INFO:root:[1m[36mHANDLE NODE[0m 996 (Line 236): [97m[100mAST_NAME[0m growl, 
INFO:root:996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 999 (Line 236): [97m[100mstring[0m "test", "test"
INFO:root:999 handle result: obj_nodes=['1770'], value="test"
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1000 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1000 handle result: obj_nodes=['1771'], value=""
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1001 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1001 handle result: obj_nodes=['1772'], value=""
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
INFO:root:name node for msg does not exist
INFO:root:add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
INFO:root:name node for options does not exist
INFO:root:add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
INFO:root:name node for fn does not exist
INFO:root:name node for image does not exist
INFO:root:name node for args does not exist
INFO:root:FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
INFO:root:BLOCK 377 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 378 (Line 145): [97m[100mAST_ASSIGN[0m image, image
INFO:root:[1m[36mHANDLE NODE[0m 379 (Line 145): [97m[100mAST_VAR[0m image, 
INFO:root:379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
INFO:root:[1m[36mHANDLE NODE[0m 381 (Line 146): [97m[100mAST_ASSIGN[0m args, args
INFO:root:[1m[36mHANDLE NODE[0m 382 (Line 146): [97m[100mAST_VAR[0m args, 
INFO:root:382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
INFO:root:[1m[36mHANDLE NODE[0m 384 (Line 147): [97m[100mAST_ASSIGN[0m options, options = options || {}
INFO:root:[1m[36mHANDLE NODE[0m 387 (Line 147): [97m[100mAST_BINARY_OP[0m options, ||
INFO:root:[1m[36mHANDLE NODE[0m 388 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:[1m[36mHANDLE NODE[0m 390 (Line 147): [97m[100mAST_ARRAY[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 385 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:Assigning ['1771', '1786'] to 1779, pre_objs=['1771'], branches=[]
INFO:root:  Remove 1771
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 391 (Line 148): [97m[100mAST_ASSIGN[0m fn, fn = fn || function(){}
INFO:root:[1m[36mHANDLE NODE[0m 394 (Line 148): [97m[100mAST_BINARY_OP[0m fn, ||
INFO:root:[1m[36mHANDLE NODE[0m 395 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 397 (Line 148): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['1789']
INFO:root:[1m[36mHANDLE NODE[0m 392 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:Assigning ['1772', '1789'] to 1781, pre_objs=['1772'], branches=[]
INFO:root:  Remove 1772
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 407 (Line 151): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 408 (Line 151): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 409 (Line 151): [97m[100mAST_UNARY_OP[0m cmd, !cmd
INFO:root:BLOCK 412 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 413 (Line 151): [97m[100mAST_RETURN[0m, return fn(new Error('growl not supported on this platform'));
INFO:root:[1m[36mHANDLE NODE[0m 414 (Line 151): [97m[100mAST_CALL[0m fn, fn(new Error('growl not supported on this platform'))
INFO:root:[1m[36mHANDLE NODE[0m 415 (Line 151): [97m[100mAST_NAME[0m fn, 
INFO:root:415 handle result: obj_nodes=['1772', '1789'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 418 (Line 151): [97m[100mAST_NEW[0m Error, new Error('growl not supported on this platform')
INFO:root:[1m[36mHANDLE NODE[0m 419 (Line 151): [97m[100mAST_NAME[0m Error, 
INFO:root:419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
INFO:root:[1m[36mHANDLE NODE[0m 422 (Line 151): [97m[100mstring[0m 'growl not supported on this platform', 'growl not supported on this platform'
INFO:root:422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
INFO:root:prototype obj node is ['1305']
INFO:root:callback functions =
INFO:root:[31mEdge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:418: function returned_objs=['1800'], used_objs=['1795']
INFO:root:2nd
