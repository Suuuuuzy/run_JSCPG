INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN :
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./tests/vul_demo.js BEGINS
INFO:root:name node for ./tests/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.username (693->696)
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:Add prop name node this.greet (693->703)
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:Add prop name node process.argv (649->705)
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:PARENT OBJ process.argv NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.argv.2 (706->707)
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
INFO:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:Add prop name node this.username (672->716)
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:Add prop name node child_process.execSync (649->722)
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
INFO:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
INFO:root:Add CFG edge 58 -> 725
INFO:root:Add CFG edge 69 -> 22
INFO:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
INFO:root:RUN :
INFO:root:REGISTER 61 to 1
INFO:root:REGISTER 359 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 7): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./tests/growl.js BEGINS
INFO:root:name node for ./tests/growl.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for exec does not exist
INFO:root:name node for fs does not exist
INFO:root:name node for path does not exist
INFO:root:name node for exists does not exist
INFO:root:name node for os does not exist
INFO:root:name node for quote does not exist
INFO:root:name node for cmd does not exist
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:name node for which does not exist
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:name node for growl does not exist
INFO:root:Declared function obj nodes: ['1587']
INFO:root:FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 7): [97m[100mAST_ASSIGN[0m exec, exec = require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 7): [97m[100mAST_PROP[0m exec, require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 7): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 10 (Line 7): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module child_process at built-in not found!
INFO:root:9: function returned_objs=[], used_objs=[]
INFO:root:PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
INFO:root:name node for require('child_process') does not exist
INFO:root:Add prop name node require('child_process').exec (1596->1597)
INFO:root:8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 7): [97m[100mAST_VAR[0m exec, 
INFO:root:6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 15 (Line 8): [97m[100mAST_ASSIGN[0m fs, fs = require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 18 (Line 8): [97m[100mAST_CALL[0m require, require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 19 (Line 8): [97m[100mAST_NAME[0m require, 
INFO:root:19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module fs at built-in not found!
INFO:root:18: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 8): [97m[100mAST_VAR[0m fs, 
INFO:root:16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
ERROR:root:Right side handling error at statement 15, child 18
INFO:root:[1m[36mHANDLE NODE[0m 23 (Line 9): [97m[100mAST_ASSIGN[0m path, path = require('path')
INFO:root:[1m[36mHANDLE NODE[0m 26 (Line 9): [97m[100mAST_CALL[0m require, require('path')
INFO:root:[1m[36mHANDLE NODE[0m 27 (Line 9): [97m[100mAST_NAME[0m require, 
INFO:root:27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module path at built-in not found!
INFO:root:26: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 24 (Line 9): [97m[100mAST_VAR[0m path, 
INFO:root:24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
ERROR:root:Right side handling error at statement 23, child 26
INFO:root:[1m[36mHANDLE NODE[0m 31 (Line 10): [97m[100mAST_ASSIGN[0m exists, exists = fs.existsSync || path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 10): [97m[100mAST_BINARY_OP[0m existsSync, ||
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 10): [97m[100mAST_PROP[0m existsSync, fs.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 10): [97m[100mAST_VAR[0m fs, 
INFO:root:36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
INFO:root:Add prop name node fs.existsSync (1545->1598)
INFO:root:35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 10): [97m[100mAST_PROP[0m existsSync, path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 40 (Line 10): [97m[100mAST_VAR[0m path, 
INFO:root:40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
INFO:root:39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 32 (Line 10): [97m[100mAST_VAR[0m exists, 
INFO:root:32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
ERROR:root:Right side handling error at statement 31, child 34
INFO:root:[1m[36mHANDLE NODE[0m 43 (Line 11): [97m[100mAST_ASSIGN[0m os, os = require('os')
INFO:root:[1m[36mHANDLE NODE[0m 46 (Line 11): [97m[100mAST_CALL[0m require, require('os')
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 11): [97m[100mAST_NAME[0m require, 
INFO:root:47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module os at built-in not found!
INFO:root:46: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 44 (Line 11): [97m[100mAST_VAR[0m os, 
INFO:root:44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
ERROR:root:Right side handling error at statement 43, child 46
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 12): [97m[100mAST_ASSIGN[0m quote, quote = JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 12): [97m[100mAST_PROP[0m stringify, JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 55 (Line 12): [97m[100mAST_VAR[0m JSON, 
INFO:root:Name node JSON not found,  name node
INFO:root:55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
INFO:root:PARENT OBJ JSON NOT DEFINED, creating object nodes
INFO:root:Add prop name node JSON.stringify (1600->1601)
INFO:root:54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 12): [97m[100mAST_VAR[0m quote, 
INFO:root:52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 13): [97m[100mAST_ASSIGN[0m cmd, cmd
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 13): [97m[100mAST_VAR[0m cmd, 
INFO:root:59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 140 (Line 25): [97m[100mAST_SWITCH[0m type, 
INFO:root:[1m[36mHANDLE NODE[0m 141 (Line 25): [97m[100mAST_METHOD_CALL[0m type, os.type()
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:Add prop name node os.type (1545->1602)
INFO:root:141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: os.type
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:141: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 146 (Line 25): [97m[100mAST_SWITCH_LIST[0m 'Darwin', 
INFO:root:[1m[36mHANDLE NODE[0m 148 (Line 26): [97m[100mstring[0m 'Darwin', 'Darwin'
INFO:root:148 handle result: obj_nodes=['1620'], value='Darwin'
INFO:root:BLOCK 149 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 150 (Line 27): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 151 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 152 (Line 27): [97m[100mAST_CALL[0m which, which('terminal-notifier')
INFO:root:[1m[36mHANDLE NODE[0m 153 (Line 27): [97m[100mAST_NAME[0m which, 
INFO:root:153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
INFO:root:[1m[36mHANDLE NODE[0m 156 (Line 27): [97m[100mstring[0m 'terminal-notifier', 'terminal-notifier'
INFO:root:156 handle result: obj_nodes=['1621'], value='terminal-notifier'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
INFO:root:name node for name does not exist
INFO:root:name node for paths does not exist
INFO:root:name node for loc does not exist
INFO:root:FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
INFO:root:BLOCK 71 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 16): [97m[100mAST_ASSIGN[0m paths, paths = process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 75 (Line 16): [97m[100mAST_METHOD_CALL[0m split, process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:Name node process not found,  name node
INFO:root:78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
INFO:root:PARENT OBJ process NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env (1632->1633)
INFO:root:77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
INFO:root:PARENT OBJ process.env NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH (1634->1635)
INFO:root:76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
INFO:root:PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH.split (1636->1637)
INFO:root:75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: process.env.PATH.split
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
INFO:root:77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
INFO:root:76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 16): [97m[100mstring[0m ':', ':'
INFO:root:84 handle result: obj_nodes=['1649'], value=':'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:75: function returned_objs=[], used_objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 16): [97m[100mAST_VAR[0m paths, 
INFO:root:73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 17): [97m[100mAST_ASSIGN[0m loc, loc
INFO:root:[1m[36mHANDLE NODE[0m 86 (Line 17): [97m[100mAST_VAR[0m loc, 
INFO:root:86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
INFO:root:[1m[36mHANDLE NODE[0m 88 (Line 19): [97m[100mAST_FOR[0m, 
INFO:root:152: function returned_objs=[], used_objs=[]
INFO:root:BLOCK 157 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 158 (Line 28): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 161 (Line 28): [97m[100mAST_ARRAY[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 162 (Line 29): [97m[100mAST_ARRAY_ELEM[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 163 (Line 29): [97m[100mstring[0m "Darwin-NotificationCenter", "Darwin-NotificationCenter"
INFO:root:163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
INFO:root:[1m[36mHANDLE NODE[0m 165 (Line 30): [97m[100mAST_ARRAY_ELEM[0m "terminal-notifier", 
INFO:root:[1m[36mHANDLE NODE[0m 166 (Line 30): [97m[100mstring[0m "terminal-notifier", "terminal-notifier"
INFO:root:166 handle result: obj_nodes=['1661'], value="terminal-notifier"
INFO:root:[1m[36mHANDLE NODE[0m 168 (Line 31): [97m[100mAST_ARRAY_ELEM[0m '-message', 
INFO:root:[1m[36mHANDLE NODE[0m 169 (Line 31): [97m[100mstring[0m '-message', '-message'
INFO:root:169 handle result: obj_nodes=['1663'], value='-message'
INFO:root:[1m[36mHANDLE NODE[0m 171 (Line 32): [97m[100mAST_ARRAY_ELEM[0m '-title', 
INFO:root:[1m[36mHANDLE NODE[0m 172 (Line 32): [97m[100mstring[0m '-title', '-title'
INFO:root:172 handle result: obj_nodes=['1665'], value='-title'
INFO:root:[1m[36mHANDLE NODE[0m 174 (Line 33): [97m[100mAST_ARRAY_ELEM[0m '-subtitle', 
INFO:root:[1m[36mHANDLE NODE[0m 175 (Line 33): [97m[100mstring[0m '-subtitle', '-subtitle'
INFO:root:175 handle result: obj_nodes=['1667'], value='-subtitle'
INFO:root:[1m[36mHANDLE NODE[0m 177 (Line 34): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 178 (Line 34): [97m[100mAST_ARRAY[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 179 (Line 35): [97m[100mAST_ARRAY_ELEM[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 180 (Line 35): [97m[100mstring[0m '-execute', '-execute'
INFO:root:180 handle result: obj_nodes=['1671'], value='-execute'
INFO:root:[1m[36mHANDLE NODE[0m 182 (Line 36): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 183 (Line 36): [97m[100mAST_ARRAY[0m, []
INFO:root:[1m[36mHANDLE NODE[0m 159 (Line 28): [97m[100mAST_VAR[0m cmd, 
INFO:root:159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 186 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 187 (Line 27): [97m[100mNULL[0m, 
INFO:root:BLOCK 188 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 189 (Line 40): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 192 (Line 40): [97m[100mAST_ARRAY[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 193 (Line 41): [97m[100mAST_ARRAY_ELEM[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 194 (Line 41): [97m[100mstring[0m "Darwin-Growl", "Darwin-Growl"
INFO:root:194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
INFO:root:[1m[36mHANDLE NODE[0m 196 (Line 42): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 197 (Line 42): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:197 handle result: obj_nodes=['1682'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 199 (Line 43): [97m[100mAST_ARRAY_ELEM[0m '-m', 
INFO:root:[1m[36mHANDLE NODE[0m 200 (Line 43): [97m[100mstring[0m '-m', '-m'
INFO:root:200 handle result: obj_nodes=['1684'], value='-m'
INFO:root:[1m[36mHANDLE NODE[0m 202 (Line 44): [97m[100mAST_ARRAY_ELEM[0m '--sticky', 
INFO:root:[1m[36mHANDLE NODE[0m 203 (Line 44): [97m[100mstring[0m '--sticky', '--sticky'
INFO:root:203 handle result: obj_nodes=['1686'], value='--sticky'
INFO:root:[1m[36mHANDLE NODE[0m 205 (Line 45): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 206 (Line 45): [97m[100mAST_ARRAY[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 207 (Line 46): [97m[100mAST_ARRAY_ELEM[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 208 (Line 46): [97m[100mstring[0m '--priority', '--priority'
INFO:root:208 handle result: obj_nodes=['1690'], value='--priority'
INFO:root:[1m[36mHANDLE NODE[0m 210 (Line 47): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 211 (Line 47): [97m[100mAST_ARRAY[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 212 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 213 (Line 48): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 216 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 217 (Line 49): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 220 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 221 (Line 50): [97m[100minteger[0m 0, 0
INFO:root:221 handle result: obj_nodes=['1694'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 223 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 224 (Line 51): [97m[100minteger[0m 1, 1
INFO:root:224 handle result: obj_nodes=['1696'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 226 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 227 (Line 52): [97m[100minteger[0m 2, 2
INFO:root:227 handle result: obj_nodes=['1698'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 229 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Very Low", 
INFO:root:[1m[36mHANDLE NODE[0m 230 (Line 53): [97m[100mstring[0m "Very Low", "Very Low"
INFO:root:230 handle result: obj_nodes=['1700'], value="Very Low"
INFO:root:[1m[36mHANDLE NODE[0m 232 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Moderate", 
INFO:root:[1m[36mHANDLE NODE[0m 233 (Line 54): [97m[100mstring[0m "Moderate", "Moderate"
INFO:root:233 handle result: obj_nodes=['1702'], value="Moderate"
INFO:root:[1m[36mHANDLE NODE[0m 235 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Normal", 
INFO:root:[1m[36mHANDLE NODE[0m 236 (Line 55): [97m[100mstring[0m "Normal", "Normal"
INFO:root:236 handle result: obj_nodes=['1704'], value="Normal"
INFO:root:[1m[36mHANDLE NODE[0m 238 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "High", 
INFO:root:[1m[36mHANDLE NODE[0m 239 (Line 56): [97m[100mstring[0m "High", "High"
INFO:root:239 handle result: obj_nodes=['1706'], value="High"
INFO:root:[1m[36mHANDLE NODE[0m 241 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Emergency", 
INFO:root:[1m[36mHANDLE NODE[0m 242 (Line 57): [97m[100mstring[0m "Emergency", "Emergency"
INFO:root:242 handle result: obj_nodes=['1708'], value="Emergency"
INFO:root:[1m[36mHANDLE NODE[0m 190 (Line 40): [97m[100mAST_VAR[0m cmd, 
INFO:root:190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 246 (Line 62): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 249 (Line 63): [97m[100mstring[0m 'Linux', 'Linux'
INFO:root:249 handle result: obj_nodes=['1712'], value='Linux'
INFO:root:BLOCK 250 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 251 (Line 64): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 254 (Line 64): [97m[100mAST_ARRAY[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 255 (Line 65): [97m[100mAST_ARRAY_ELEM[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 256 (Line 65): [97m[100mstring[0m "Linux", "Linux"
INFO:root:256 handle result: obj_nodes=['1715'], value="Linux"
INFO:root:[1m[36mHANDLE NODE[0m 258 (Line 66): [97m[100mAST_ARRAY_ELEM[0m "notify-send", 
INFO:root:[1m[36mHANDLE NODE[0m 259 (Line 66): [97m[100mstring[0m "notify-send", "notify-send"
INFO:root:259 handle result: obj_nodes=['1717'], value="notify-send"
INFO:root:[1m[36mHANDLE NODE[0m 261 (Line 67): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 262 (Line 67): [97m[100mstring[0m '', ''
INFO:root:262 handle result: obj_nodes=['1719'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 264 (Line 68): [97m[100mAST_ARRAY_ELEM[0m '-t 0', 
INFO:root:[1m[36mHANDLE NODE[0m 265 (Line 68): [97m[100mstring[0m '-t 0', '-t 0'
INFO:root:265 handle result: obj_nodes=['1721'], value='-t 0'
INFO:root:[1m[36mHANDLE NODE[0m 267 (Line 69): [97m[100mAST_ARRAY_ELEM[0m '-i', 
INFO:root:[1m[36mHANDLE NODE[0m 268 (Line 69): [97m[100mstring[0m '-i', '-i'
INFO:root:268 handle result: obj_nodes=['1723'], value='-i'
INFO:root:[1m[36mHANDLE NODE[0m 270 (Line 70): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 271 (Line 70): [97m[100mAST_ARRAY[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 272 (Line 71): [97m[100mAST_ARRAY_ELEM[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 273 (Line 71): [97m[100mstring[0m '-u', '-u'
INFO:root:273 handle result: obj_nodes=['1727'], value='-u'
INFO:root:[1m[36mHANDLE NODE[0m 275 (Line 72): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 276 (Line 72): [97m[100mAST_ARRAY[0m "low", [            "low"          , "normal"          , "critical"        ]
INFO:root:[1m[36mHANDLE NODE[0m 277 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "low", 
INFO:root:[1m[36mHANDLE NODE[0m 278 (Line 73): [97m[100mstring[0m "low", "low"
INFO:root:278 handle result: obj_nodes=['1731'], value="low"
INFO:root:[1m[36mHANDLE NODE[0m 280 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "normal", 
INFO:root:[1m[36mHANDLE NODE[0m 281 (Line 74): [97m[100mstring[0m "normal", "normal"
INFO:root:281 handle result: obj_nodes=['1733'], value="normal"
INFO:root:[1m[36mHANDLE NODE[0m 283 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "critical", 
INFO:root:[1m[36mHANDLE NODE[0m 284 (Line 75): [97m[100mstring[0m "critical", "critical"
INFO:root:284 handle result: obj_nodes=['1735'], value="critical"
INFO:root:[1m[36mHANDLE NODE[0m 252 (Line 64): [97m[100mAST_VAR[0m cmd, 
INFO:root:252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 288 (Line 79): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 291 (Line 80): [97m[100mstring[0m 'Windows_NT', 'Windows_NT'
INFO:root:291 handle result: obj_nodes=['1739'], value='Windows_NT'
INFO:root:BLOCK 292 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 293 (Line 81): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 296 (Line 81): [97m[100mAST_ARRAY[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 297 (Line 82): [97m[100mAST_ARRAY_ELEM[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 298 (Line 82): [97m[100mstring[0m "Windows", "Windows"
INFO:root:298 handle result: obj_nodes=['1742'], value="Windows"
INFO:root:[1m[36mHANDLE NODE[0m 300 (Line 83): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 301 (Line 83): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:301 handle result: obj_nodes=['1744'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 303 (Line 84): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 304 (Line 84): [97m[100mstring[0m '', ''
INFO:root:304 handle result: obj_nodes=['1746'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 306 (Line 85): [97m[100mAST_ARRAY_ELEM[0m '/s:true', 
INFO:root:[1m[36mHANDLE NODE[0m 307 (Line 85): [97m[100mstring[0m '/s:true', '/s:true'
INFO:root:307 handle result: obj_nodes=['1748'], value='/s:true'
INFO:root:[1m[36mHANDLE NODE[0m 309 (Line 86): [97m[100mAST_ARRAY_ELEM[0m '/t:', 
INFO:root:[1m[36mHANDLE NODE[0m 310 (Line 86): [97m[100mstring[0m '/t:', '/t:'
INFO:root:310 handle result: obj_nodes=['1750'], value='/t:'
INFO:root:[1m[36mHANDLE NODE[0m 312 (Line 87): [97m[100mAST_ARRAY_ELEM[0m '/i:', 
INFO:root:[1m[36mHANDLE NODE[0m 313 (Line 87): [97m[100mstring[0m '/i:', '/i:'
INFO:root:313 handle result: obj_nodes=['1752'], value='/i:'
INFO:root:[1m[36mHANDLE NODE[0m 315 (Line 88): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 316 (Line 88): [97m[100mAST_ARRAY[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 317 (Line 89): [97m[100mAST_ARRAY_ELEM[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 318 (Line 89): [97m[100mstring[0m '/p:', '/p:'
INFO:root:318 handle result: obj_nodes=['1756'], value='/p:'
INFO:root:[1m[36mHANDLE NODE[0m 320 (Line 90): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 321 (Line 90): [97m[100mAST_ARRAY[0m 0, [              -2            , -1            , 0            , 1            , 2          ]
INFO:root:[1m[36mHANDLE NODE[0m 322 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 323 (Line 91): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 326 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 327 (Line 92): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 330 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 331 (Line 93): [97m[100minteger[0m 0, 0
INFO:root:331 handle result: obj_nodes=['1760'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 333 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 334 (Line 94): [97m[100minteger[0m 1, 1
INFO:root:334 handle result: obj_nodes=['1762'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 336 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 337 (Line 95): [97m[100minteger[0m 2, 2
INFO:root:337 handle result: obj_nodes=['1764'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 294 (Line 81): [97m[100mAST_VAR[0m cmd, 
INFO:root:294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 341 (Line 99): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 343 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 346 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 351 (Line 106): [97m[100mAST_VAR[0m growl, 
INFO:root:351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 347 (Line 106): [97m[100mAST_PROP[0m exports, module.exports
INFO:root:[1m[36mHANDLE NODE[0m 348 (Line 106): [97m[100mAST_VAR[0m module, 
INFO:root:348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
INFO:root:347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
INFO:root:Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 344 (Line 106): [97m[100mAST_VAR[0m exports, 
INFO:root:344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
INFO:root:Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 353 (Line 112): [97m[100mAST_ASSIGN[0m '1.4.1', =
INFO:root:[1m[36mHANDLE NODE[0m 358 (Line 112): [97m[100mstring[0m '1.4.1', '1.4.1'
INFO:root:358 handle result: obj_nodes=['1768'], value='1.4.1'
INFO:root:[1m[36mHANDLE NODE[0m 354 (Line 112): [97m[100mAST_PROP[0m version, exports.version
INFO:root:[1m[36mHANDLE NODE[0m 355 (Line 112): [97m[100mAST_VAR[0m exports, 
INFO:root:355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
INFO:root:Cannot find "direct" property, going into __proto__ ['1024']...
INFO:root:  exports.__proto__.version
INFO:root:Add prop name node exports.version (1587->1769)
INFO:root:354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
INFO:root:Assigning ['1768'] to 1769, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:Declared function obj nodes: ['1587']
INFO:root:[1m[36mHANDLE NODE[0m 994 (Line 234): [97m[100mNULL[0m, ;
INFO:root:[1m[36mHANDLE NODE[0m 995 (Line 236): [97m[100mAST_CALL[0m growl, growl("test", "", "")
INFO:root:[1m[36mHANDLE NODE[0m 996 (Line 236): [97m[100mAST_NAME[0m growl, 
INFO:root:996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 999 (Line 236): [97m[100mstring[0m "test", "test"
INFO:root:999 handle result: obj_nodes=['1770'], value="test"
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1000 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1000 handle result: obj_nodes=['1771'], value=""
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1001 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1001 handle result: obj_nodes=['1772'], value=""
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
INFO:root:name node for msg does not exist
INFO:root:add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
INFO:root:name node for options does not exist
INFO:root:add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
INFO:root:name node for fn does not exist
INFO:root:name node for image does not exist
INFO:root:name node for args does not exist
INFO:root:FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
INFO:root:BLOCK 377 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 378 (Line 145): [97m[100mAST_ASSIGN[0m image, image
INFO:root:[1m[36mHANDLE NODE[0m 379 (Line 145): [97m[100mAST_VAR[0m image, 
INFO:root:379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
INFO:root:[1m[36mHANDLE NODE[0m 381 (Line 146): [97m[100mAST_ASSIGN[0m args, args
INFO:root:[1m[36mHANDLE NODE[0m 382 (Line 146): [97m[100mAST_VAR[0m args, 
INFO:root:382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
INFO:root:[1m[36mHANDLE NODE[0m 384 (Line 147): [97m[100mAST_ASSIGN[0m options, options = options || {}
INFO:root:[1m[36mHANDLE NODE[0m 387 (Line 147): [97m[100mAST_BINARY_OP[0m options, ||
INFO:root:[1m[36mHANDLE NODE[0m 388 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:[1m[36mHANDLE NODE[0m 390 (Line 147): [97m[100mAST_ARRAY[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 385 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:Assigning ['1786', '1771'] to 1779, pre_objs=['1771'], branches=[]
INFO:root:  Remove 1771
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 391 (Line 148): [97m[100mAST_ASSIGN[0m fn, fn = fn || function(){}
INFO:root:[1m[36mHANDLE NODE[0m 394 (Line 148): [97m[100mAST_BINARY_OP[0m fn, ||
INFO:root:[1m[36mHANDLE NODE[0m 395 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 397 (Line 148): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['1789']
INFO:root:[1m[36mHANDLE NODE[0m 392 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:Assigning ['1789', '1772'] to 1781, pre_objs=['1772'], branches=[]
INFO:root:  Remove 1772
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 407 (Line 151): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 408 (Line 151): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 409 (Line 151): [97m[100mAST_UNARY_OP[0m cmd, !cmd
INFO:root:BLOCK 412 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 413 (Line 151): [97m[100mAST_RETURN[0m, return fn(new Error('growl not supported on this platform'));
INFO:root:[1m[36mHANDLE NODE[0m 414 (Line 151): [97m[100mAST_CALL[0m fn, fn(new Error('growl not supported on this platform'))
INFO:root:[1m[36mHANDLE NODE[0m 415 (Line 151): [97m[100mAST_NAME[0m fn, 
INFO:root:415 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 418 (Line 151): [97m[100mAST_NEW[0m Error, new Error('growl not supported on this platform')
INFO:root:[1m[36mHANDLE NODE[0m 419 (Line 151): [97m[100mAST_NAME[0m Error, 
INFO:root:419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
INFO:root:[1m[36mHANDLE NODE[0m 422 (Line 151): [97m[100mstring[0m 'growl not supported on this platform', 'growl not supported on this platform'
INFO:root:422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
INFO:root:prototype obj node is ['1305']
INFO:root:callback functions =
INFO:root:[31mEdge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:418: function returned_objs=['1800'], used_objs=['1795']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#0")]
INFO:root:BLOCK 404 STARTS
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
INFO:root:RUN :
INFO:root:REGISTER 61 to 1
INFO:root:REGISTER 359 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 7): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./tests/growl.js BEGINS
INFO:root:name node for ./tests/growl.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for exec does not exist
INFO:root:name node for fs does not exist
INFO:root:name node for path does not exist
INFO:root:name node for exists does not exist
INFO:root:name node for os does not exist
INFO:root:name node for quote does not exist
INFO:root:name node for cmd does not exist
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:name node for which does not exist
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:name node for growl does not exist
INFO:root:Declared function obj nodes: ['1587']
INFO:root:FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 7): [97m[100mAST_ASSIGN[0m exec, exec = require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 7): [97m[100mAST_PROP[0m exec, require('child_process').exec
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 7): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 10 (Line 7): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module child_process at built-in not found!
INFO:root:9: function returned_objs=[], used_objs=[]
INFO:root:PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
INFO:root:name node for require('child_process') does not exist
INFO:root:Add prop name node require('child_process').exec (1596->1597)
INFO:root:8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 7): [97m[100mAST_VAR[0m exec, 
INFO:root:6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 15 (Line 8): [97m[100mAST_ASSIGN[0m fs, fs = require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 18 (Line 8): [97m[100mAST_CALL[0m require, require('fs')
INFO:root:[1m[36mHANDLE NODE[0m 19 (Line 8): [97m[100mAST_NAME[0m require, 
INFO:root:19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module fs at built-in not found!
INFO:root:18: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 8): [97m[100mAST_VAR[0m fs, 
INFO:root:16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
ERROR:root:Right side handling error at statement 15, child 18
INFO:root:[1m[36mHANDLE NODE[0m 23 (Line 9): [97m[100mAST_ASSIGN[0m path, path = require('path')
INFO:root:[1m[36mHANDLE NODE[0m 26 (Line 9): [97m[100mAST_CALL[0m require, require('path')
INFO:root:[1m[36mHANDLE NODE[0m 27 (Line 9): [97m[100mAST_NAME[0m require, 
INFO:root:27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module path at built-in not found!
INFO:root:26: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 24 (Line 9): [97m[100mAST_VAR[0m path, 
INFO:root:24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
ERROR:root:Right side handling error at statement 23, child 26
INFO:root:[1m[36mHANDLE NODE[0m 31 (Line 10): [97m[100mAST_ASSIGN[0m exists, exists = fs.existsSync || path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 10): [97m[100mAST_BINARY_OP[0m existsSync, ||
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 10): [97m[100mAST_PROP[0m existsSync, fs.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 10): [97m[100mAST_VAR[0m fs, 
INFO:root:36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
INFO:root:Add prop name node fs.existsSync (1545->1598)
INFO:root:35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 10): [97m[100mAST_PROP[0m existsSync, path.existsSync
INFO:root:[1m[36mHANDLE NODE[0m 40 (Line 10): [97m[100mAST_VAR[0m path, 
INFO:root:40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
INFO:root:39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
INFO:root:[1m[36mHANDLE NODE[0m 32 (Line 10): [97m[100mAST_VAR[0m exists, 
INFO:root:32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
ERROR:root:Right side handling error at statement 31, child 34
INFO:root:[1m[36mHANDLE NODE[0m 43 (Line 11): [97m[100mAST_ASSIGN[0m os, os = require('os')
INFO:root:[1m[36mHANDLE NODE[0m 46 (Line 11): [97m[100mAST_CALL[0m require, require('os')
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 11): [97m[100mAST_NAME[0m require, 
INFO:root:47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
ERROR:root:Required module os at built-in not found!
INFO:root:46: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 44 (Line 11): [97m[100mAST_VAR[0m os, 
INFO:root:44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
ERROR:root:Right side handling error at statement 43, child 46
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 12): [97m[100mAST_ASSIGN[0m quote, quote = JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 12): [97m[100mAST_PROP[0m stringify, JSON.stringify
INFO:root:[1m[36mHANDLE NODE[0m 55 (Line 12): [97m[100mAST_VAR[0m JSON, 
INFO:root:Name node JSON not found,  name node
INFO:root:55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
INFO:root:PARENT OBJ JSON NOT DEFINED, creating object nodes
INFO:root:Add prop name node JSON.stringify (1600->1601)
INFO:root:54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 12): [97m[100mAST_VAR[0m quote, 
INFO:root:52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 13): [97m[100mAST_ASSIGN[0m cmd, cmd
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 13): [97m[100mAST_VAR[0m cmd, 
INFO:root:59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:[1m[36mHANDLE NODE[0m 61 (Line 15): [97m[100mAST_FUNC_DECL[0m which, which
INFO:root:Declared function obj nodes: ['1580']
INFO:root:[1m[36mHANDLE NODE[0m 140 (Line 25): [97m[100mAST_SWITCH[0m type, 
INFO:root:[1m[36mHANDLE NODE[0m 141 (Line 25): [97m[100mAST_METHOD_CALL[0m type, os.type()
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:Add prop name node os.type (1545->1602)
INFO:root:141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: os.type
INFO:root:[1m[36mHANDLE NODE[0m 142 (Line 25): [97m[100mAST_VAR[0m os, 
INFO:root:142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:141: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 146 (Line 25): [97m[100mAST_SWITCH_LIST[0m 'Darwin', 
INFO:root:[1m[36mHANDLE NODE[0m 148 (Line 26): [97m[100mstring[0m 'Darwin', 'Darwin'
INFO:root:148 handle result: obj_nodes=['1620'], value='Darwin'
INFO:root:BLOCK 149 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 150 (Line 27): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 151 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 152 (Line 27): [97m[100mAST_CALL[0m which, which('terminal-notifier')
INFO:root:[1m[36mHANDLE NODE[0m 153 (Line 27): [97m[100mAST_NAME[0m which, 
INFO:root:153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
INFO:root:[1m[36mHANDLE NODE[0m 156 (Line 27): [97m[100mstring[0m 'terminal-notifier', 'terminal-notifier'
INFO:root:156 handle result: obj_nodes=['1621'], value='terminal-notifier'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
INFO:root:name node for name does not exist
INFO:root:name node for paths does not exist
INFO:root:name node for loc does not exist
INFO:root:FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
INFO:root:BLOCK 71 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 16): [97m[100mAST_ASSIGN[0m paths, paths = process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 75 (Line 16): [97m[100mAST_METHOD_CALL[0m split, process.env.PATH.split(':')
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:Name node process not found,  name node
INFO:root:78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
INFO:root:PARENT OBJ process NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env (1632->1633)
INFO:root:77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
INFO:root:PARENT OBJ process.env NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH (1634->1635)
INFO:root:76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
INFO:root:PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
INFO:root:Add prop name node process.env.PATH.split (1636->1637)
INFO:root:75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: process.env.PATH.split
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 16): [97m[100mAST_PROP[0m PATH, process.env.PATH
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 16): [97m[100mAST_PROP[0m env, process.env
INFO:root:[1m[36mHANDLE NODE[0m 78 (Line 16): [97m[100mAST_VAR[0m process, 
INFO:root:78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
INFO:root:77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
INFO:root:76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 16): [97m[100mstring[0m ':', ':'
INFO:root:84 handle result: obj_nodes=['1649'], value=':'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
INFO:root:callback functions =
INFO:root:75: function returned_objs=[], used_objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 16): [97m[100mAST_VAR[0m paths, 
INFO:root:73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
INFO:root:Right OBJ not found
INFO:root:Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
INFO:root:  Remove 1545
INFO:root:  assign used objs=['1649']
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 17): [97m[100mAST_ASSIGN[0m loc, loc
INFO:root:[1m[36mHANDLE NODE[0m 86 (Line 17): [97m[100mAST_VAR[0m loc, 
INFO:root:86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
INFO:root:[1m[36mHANDLE NODE[0m 88 (Line 19): [97m[100mAST_FOR[0m, 
INFO:root:152: function returned_objs=[], used_objs=[]
INFO:root:BLOCK 157 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 158 (Line 28): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 161 (Line 28): [97m[100mAST_ARRAY[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 162 (Line 29): [97m[100mAST_ARRAY_ELEM[0m "Darwin-NotificationCenter", 
INFO:root:[1m[36mHANDLE NODE[0m 163 (Line 29): [97m[100mstring[0m "Darwin-NotificationCenter", "Darwin-NotificationCenter"
INFO:root:163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
INFO:root:[1m[36mHANDLE NODE[0m 165 (Line 30): [97m[100mAST_ARRAY_ELEM[0m "terminal-notifier", 
INFO:root:[1m[36mHANDLE NODE[0m 166 (Line 30): [97m[100mstring[0m "terminal-notifier", "terminal-notifier"
INFO:root:166 handle result: obj_nodes=['1661'], value="terminal-notifier"
INFO:root:[1m[36mHANDLE NODE[0m 168 (Line 31): [97m[100mAST_ARRAY_ELEM[0m '-message', 
INFO:root:[1m[36mHANDLE NODE[0m 169 (Line 31): [97m[100mstring[0m '-message', '-message'
INFO:root:169 handle result: obj_nodes=['1663'], value='-message'
INFO:root:[1m[36mHANDLE NODE[0m 171 (Line 32): [97m[100mAST_ARRAY_ELEM[0m '-title', 
INFO:root:[1m[36mHANDLE NODE[0m 172 (Line 32): [97m[100mstring[0m '-title', '-title'
INFO:root:172 handle result: obj_nodes=['1665'], value='-title'
INFO:root:[1m[36mHANDLE NODE[0m 174 (Line 33): [97m[100mAST_ARRAY_ELEM[0m '-subtitle', 
INFO:root:[1m[36mHANDLE NODE[0m 175 (Line 33): [97m[100mstring[0m '-subtitle', '-subtitle'
INFO:root:175 handle result: obj_nodes=['1667'], value='-subtitle'
INFO:root:[1m[36mHANDLE NODE[0m 177 (Line 34): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 178 (Line 34): [97m[100mAST_ARRAY[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 179 (Line 35): [97m[100mAST_ARRAY_ELEM[0m '-execute', 
INFO:root:[1m[36mHANDLE NODE[0m 180 (Line 35): [97m[100mstring[0m '-execute', '-execute'
INFO:root:180 handle result: obj_nodes=['1671'], value='-execute'
INFO:root:[1m[36mHANDLE NODE[0m 182 (Line 36): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 183 (Line 36): [97m[100mAST_ARRAY[0m, []
INFO:root:[1m[36mHANDLE NODE[0m 159 (Line 28): [97m[100mAST_VAR[0m cmd, 
INFO:root:159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 186 (Line 27): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 187 (Line 27): [97m[100mNULL[0m, 
INFO:root:BLOCK 188 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 189 (Line 40): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 192 (Line 40): [97m[100mAST_ARRAY[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 193 (Line 41): [97m[100mAST_ARRAY_ELEM[0m "Darwin-Growl", 
INFO:root:[1m[36mHANDLE NODE[0m 194 (Line 41): [97m[100mstring[0m "Darwin-Growl", "Darwin-Growl"
INFO:root:194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
INFO:root:[1m[36mHANDLE NODE[0m 196 (Line 42): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 197 (Line 42): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:197 handle result: obj_nodes=['1682'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 199 (Line 43): [97m[100mAST_ARRAY_ELEM[0m '-m', 
INFO:root:[1m[36mHANDLE NODE[0m 200 (Line 43): [97m[100mstring[0m '-m', '-m'
INFO:root:200 handle result: obj_nodes=['1684'], value='-m'
INFO:root:[1m[36mHANDLE NODE[0m 202 (Line 44): [97m[100mAST_ARRAY_ELEM[0m '--sticky', 
INFO:root:[1m[36mHANDLE NODE[0m 203 (Line 44): [97m[100mstring[0m '--sticky', '--sticky'
INFO:root:203 handle result: obj_nodes=['1686'], value='--sticky'
INFO:root:[1m[36mHANDLE NODE[0m 205 (Line 45): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 206 (Line 45): [97m[100mAST_ARRAY[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 207 (Line 46): [97m[100mAST_ARRAY_ELEM[0m '--priority', 
INFO:root:[1m[36mHANDLE NODE[0m 208 (Line 46): [97m[100mstring[0m '--priority', '--priority'
INFO:root:208 handle result: obj_nodes=['1690'], value='--priority'
INFO:root:[1m[36mHANDLE NODE[0m 210 (Line 47): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 211 (Line 47): [97m[100mAST_ARRAY[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 212 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 213 (Line 48): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 216 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 217 (Line 49): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 220 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 221 (Line 50): [97m[100minteger[0m 0, 0
INFO:root:221 handle result: obj_nodes=['1694'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 223 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 224 (Line 51): [97m[100minteger[0m 1, 1
INFO:root:224 handle result: obj_nodes=['1696'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 226 (Line 47): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 227 (Line 52): [97m[100minteger[0m 2, 2
INFO:root:227 handle result: obj_nodes=['1698'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 229 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Very Low", 
INFO:root:[1m[36mHANDLE NODE[0m 230 (Line 53): [97m[100mstring[0m "Very Low", "Very Low"
INFO:root:230 handle result: obj_nodes=['1700'], value="Very Low"
INFO:root:[1m[36mHANDLE NODE[0m 232 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Moderate", 
INFO:root:[1m[36mHANDLE NODE[0m 233 (Line 54): [97m[100mstring[0m "Moderate", "Moderate"
INFO:root:233 handle result: obj_nodes=['1702'], value="Moderate"
INFO:root:[1m[36mHANDLE NODE[0m 235 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Normal", 
INFO:root:[1m[36mHANDLE NODE[0m 236 (Line 55): [97m[100mstring[0m "Normal", "Normal"
INFO:root:236 handle result: obj_nodes=['1704'], value="Normal"
INFO:root:[1m[36mHANDLE NODE[0m 238 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "High", 
INFO:root:[1m[36mHANDLE NODE[0m 239 (Line 56): [97m[100mstring[0m "High", "High"
INFO:root:239 handle result: obj_nodes=['1706'], value="High"
INFO:root:[1m[36mHANDLE NODE[0m 241 (Line 47): [97m[100mAST_ARRAY_ELEM[0m "Emergency", 
INFO:root:[1m[36mHANDLE NODE[0m 242 (Line 57): [97m[100mstring[0m "Emergency", "Emergency"
INFO:root:242 handle result: obj_nodes=['1708'], value="Emergency"
INFO:root:[1m[36mHANDLE NODE[0m 190 (Line 40): [97m[100mAST_VAR[0m cmd, 
INFO:root:190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 246 (Line 62): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 249 (Line 63): [97m[100mstring[0m 'Linux', 'Linux'
INFO:root:249 handle result: obj_nodes=['1712'], value='Linux'
INFO:root:BLOCK 250 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 251 (Line 64): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 254 (Line 64): [97m[100mAST_ARRAY[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 255 (Line 65): [97m[100mAST_ARRAY_ELEM[0m "Linux", 
INFO:root:[1m[36mHANDLE NODE[0m 256 (Line 65): [97m[100mstring[0m "Linux", "Linux"
INFO:root:256 handle result: obj_nodes=['1715'], value="Linux"
INFO:root:[1m[36mHANDLE NODE[0m 258 (Line 66): [97m[100mAST_ARRAY_ELEM[0m "notify-send", 
INFO:root:[1m[36mHANDLE NODE[0m 259 (Line 66): [97m[100mstring[0m "notify-send", "notify-send"
INFO:root:259 handle result: obj_nodes=['1717'], value="notify-send"
INFO:root:[1m[36mHANDLE NODE[0m 261 (Line 67): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 262 (Line 67): [97m[100mstring[0m '', ''
INFO:root:262 handle result: obj_nodes=['1719'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 264 (Line 68): [97m[100mAST_ARRAY_ELEM[0m '-t 0', 
INFO:root:[1m[36mHANDLE NODE[0m 265 (Line 68): [97m[100mstring[0m '-t 0', '-t 0'
INFO:root:265 handle result: obj_nodes=['1721'], value='-t 0'
INFO:root:[1m[36mHANDLE NODE[0m 267 (Line 69): [97m[100mAST_ARRAY_ELEM[0m '-i', 
INFO:root:[1m[36mHANDLE NODE[0m 268 (Line 69): [97m[100mstring[0m '-i', '-i'
INFO:root:268 handle result: obj_nodes=['1723'], value='-i'
INFO:root:[1m[36mHANDLE NODE[0m 270 (Line 70): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 271 (Line 70): [97m[100mAST_ARRAY[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 272 (Line 71): [97m[100mAST_ARRAY_ELEM[0m '-u', 
INFO:root:[1m[36mHANDLE NODE[0m 273 (Line 71): [97m[100mstring[0m '-u', '-u'
INFO:root:273 handle result: obj_nodes=['1727'], value='-u'
INFO:root:[1m[36mHANDLE NODE[0m 275 (Line 72): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 276 (Line 72): [97m[100mAST_ARRAY[0m "low", [            "low"          , "normal"          , "critical"        ]
INFO:root:[1m[36mHANDLE NODE[0m 277 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "low", 
INFO:root:[1m[36mHANDLE NODE[0m 278 (Line 73): [97m[100mstring[0m "low", "low"
INFO:root:278 handle result: obj_nodes=['1731'], value="low"
INFO:root:[1m[36mHANDLE NODE[0m 280 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "normal", 
INFO:root:[1m[36mHANDLE NODE[0m 281 (Line 74): [97m[100mstring[0m "normal", "normal"
INFO:root:281 handle result: obj_nodes=['1733'], value="normal"
INFO:root:[1m[36mHANDLE NODE[0m 283 (Line 72): [97m[100mAST_ARRAY_ELEM[0m "critical", 
INFO:root:[1m[36mHANDLE NODE[0m 284 (Line 75): [97m[100mstring[0m "critical", "critical"
INFO:root:284 handle result: obj_nodes=['1735'], value="critical"
INFO:root:[1m[36mHANDLE NODE[0m 252 (Line 64): [97m[100mAST_VAR[0m cmd, 
INFO:root:252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 288 (Line 79): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 291 (Line 80): [97m[100mstring[0m 'Windows_NT', 'Windows_NT'
INFO:root:291 handle result: obj_nodes=['1739'], value='Windows_NT'
INFO:root:BLOCK 292 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 293 (Line 81): [97m[100mAST_ASSIGN[0m cmd, =
INFO:root:[1m[36mHANDLE NODE[0m 296 (Line 81): [97m[100mAST_ARRAY[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 297 (Line 82): [97m[100mAST_ARRAY_ELEM[0m "Windows", 
INFO:root:[1m[36mHANDLE NODE[0m 298 (Line 82): [97m[100mstring[0m "Windows", "Windows"
INFO:root:298 handle result: obj_nodes=['1742'], value="Windows"
INFO:root:[1m[36mHANDLE NODE[0m 300 (Line 83): [97m[100mAST_ARRAY_ELEM[0m "growlnotify", 
INFO:root:[1m[36mHANDLE NODE[0m 301 (Line 83): [97m[100mstring[0m "growlnotify", "growlnotify"
INFO:root:301 handle result: obj_nodes=['1744'], value="growlnotify"
INFO:root:[1m[36mHANDLE NODE[0m 303 (Line 84): [97m[100mAST_ARRAY_ELEM[0m '', 
INFO:root:[1m[36mHANDLE NODE[0m 304 (Line 84): [97m[100mstring[0m '', ''
INFO:root:304 handle result: obj_nodes=['1746'], value=''
INFO:root:[1m[36mHANDLE NODE[0m 306 (Line 85): [97m[100mAST_ARRAY_ELEM[0m '/s:true', 
INFO:root:[1m[36mHANDLE NODE[0m 307 (Line 85): [97m[100mstring[0m '/s:true', '/s:true'
INFO:root:307 handle result: obj_nodes=['1748'], value='/s:true'
INFO:root:[1m[36mHANDLE NODE[0m 309 (Line 86): [97m[100mAST_ARRAY_ELEM[0m '/t:', 
INFO:root:[1m[36mHANDLE NODE[0m 310 (Line 86): [97m[100mstring[0m '/t:', '/t:'
INFO:root:310 handle result: obj_nodes=['1750'], value='/t:'
INFO:root:[1m[36mHANDLE NODE[0m 312 (Line 87): [97m[100mAST_ARRAY_ELEM[0m '/i:', 
INFO:root:[1m[36mHANDLE NODE[0m 313 (Line 87): [97m[100mstring[0m '/i:', '/i:'
INFO:root:313 handle result: obj_nodes=['1752'], value='/i:'
INFO:root:[1m[36mHANDLE NODE[0m 315 (Line 88): [97m[100mAST_ARRAY_ELEM[0m priority, 
INFO:root:[1m[36mHANDLE NODE[0m 316 (Line 88): [97m[100mAST_ARRAY[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 317 (Line 89): [97m[100mAST_ARRAY_ELEM[0m '/p:', 
INFO:root:[1m[36mHANDLE NODE[0m 318 (Line 89): [97m[100mstring[0m '/p:', '/p:'
INFO:root:318 handle result: obj_nodes=['1756'], value='/p:'
INFO:root:[1m[36mHANDLE NODE[0m 320 (Line 90): [97m[100mAST_ARRAY_ELEM[0m range, 
INFO:root:[1m[36mHANDLE NODE[0m 321 (Line 90): [97m[100mAST_ARRAY[0m 0, [              -2            , -1            , 0            , 1            , 2          ]
INFO:root:[1m[36mHANDLE NODE[0m 322 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 323 (Line 91): [97m[100mAST_UNARY_OP[0m 2, -2
INFO:root:[1m[36mHANDLE NODE[0m 326 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 327 (Line 92): [97m[100mAST_UNARY_OP[0m 1, -1
INFO:root:[1m[36mHANDLE NODE[0m 330 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 0, 
INFO:root:[1m[36mHANDLE NODE[0m 331 (Line 93): [97m[100minteger[0m 0, 0
INFO:root:331 handle result: obj_nodes=['1760'], value=0
INFO:root:[1m[36mHANDLE NODE[0m 333 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 1, 
INFO:root:[1m[36mHANDLE NODE[0m 334 (Line 94): [97m[100minteger[0m 1, 1
INFO:root:334 handle result: obj_nodes=['1762'], value=1
INFO:root:[1m[36mHANDLE NODE[0m 336 (Line 90): [97m[100mAST_ARRAY_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 337 (Line 95): [97m[100minteger[0m 2, 2
INFO:root:337 handle result: obj_nodes=['1764'], value=2
INFO:root:[1m[36mHANDLE NODE[0m 294 (Line 81): [97m[100mAST_VAR[0m cmd, 
INFO:root:294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
INFO:root:Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 341 (Line 99): [97m[100mAST_BREAK[0m, break;
INFO:root:[1m[36mHANDLE NODE[0m 343 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 346 (Line 106): [97m[100mAST_ASSIGN[0m exports, =
INFO:root:[1m[36mHANDLE NODE[0m 351 (Line 106): [97m[100mAST_VAR[0m growl, 
INFO:root:351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 347 (Line 106): [97m[100mAST_PROP[0m exports, module.exports
INFO:root:[1m[36mHANDLE NODE[0m 348 (Line 106): [97m[100mAST_VAR[0m module, 
INFO:root:348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
INFO:root:347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
INFO:root:Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 344 (Line 106): [97m[100mAST_VAR[0m exports, 
INFO:root:344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
INFO:root:Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
INFO:root:  Remove 1568
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 353 (Line 112): [97m[100mAST_ASSIGN[0m '1.4.1', =
INFO:root:[1m[36mHANDLE NODE[0m 358 (Line 112): [97m[100mstring[0m '1.4.1', '1.4.1'
INFO:root:358 handle result: obj_nodes=['1768'], value='1.4.1'
INFO:root:[1m[36mHANDLE NODE[0m 354 (Line 112): [97m[100mAST_PROP[0m version, exports.version
INFO:root:[1m[36mHANDLE NODE[0m 355 (Line 112): [97m[100mAST_VAR[0m exports, 
INFO:root:355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
INFO:root:Cannot find "direct" property, going into __proto__ ['1024']...
INFO:root:  exports.__proto__.version
INFO:root:Add prop name node exports.version (1587->1769)
INFO:root:354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
INFO:root:Assigning ['1768'] to 1769, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 359 (Line 144): [97m[100mAST_FUNC_DECL[0m growl, growl
INFO:root:Declared function obj nodes: ['1587']
INFO:root:[1m[36mHANDLE NODE[0m 994 (Line 234): [97m[100mNULL[0m, ;
INFO:root:[1m[36mHANDLE NODE[0m 995 (Line 236): [97m[100mAST_CALL[0m growl, growl("test", "", "")
INFO:root:[1m[36mHANDLE NODE[0m 996 (Line 236): [97m[100mAST_NAME[0m growl, 
INFO:root:996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
INFO:root:[1m[36mHANDLE NODE[0m 999 (Line 236): [97m[100mstring[0m "test", "test"
INFO:root:999 handle result: obj_nodes=['1770'], value="test"
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1000 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1000 handle result: obj_nodes=['1771'], value=""
INFO:root:2nd
INFO:root:[1m[36mHANDLE NODE[0m 1001 (Line 236): [97m[100mstring[0m "", ""
INFO:root:1001 handle result: obj_nodes=['1772'], value=""
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
INFO:root:name node for msg does not exist
INFO:root:add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
INFO:root:name node for options does not exist
INFO:root:add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
INFO:root:name node for fn does not exist
INFO:root:name node for image does not exist
INFO:root:name node for args does not exist
INFO:root:FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
INFO:root:BLOCK 377 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 378 (Line 145): [97m[100mAST_ASSIGN[0m image, image
INFO:root:[1m[36mHANDLE NODE[0m 379 (Line 145): [97m[100mAST_VAR[0m image, 
INFO:root:379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
INFO:root:[1m[36mHANDLE NODE[0m 381 (Line 146): [97m[100mAST_ASSIGN[0m args, args
INFO:root:[1m[36mHANDLE NODE[0m 382 (Line 146): [97m[100mAST_VAR[0m args, 
INFO:root:382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
INFO:root:[1m[36mHANDLE NODE[0m 384 (Line 147): [97m[100mAST_ASSIGN[0m options, options = options || {}
INFO:root:[1m[36mHANDLE NODE[0m 387 (Line 147): [97m[100mAST_BINARY_OP[0m options, ||
INFO:root:[1m[36mHANDLE NODE[0m 388 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:[1m[36mHANDLE NODE[0m 390 (Line 147): [97m[100mAST_ARRAY[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 385 (Line 147): [97m[100mAST_VAR[0m options, 
INFO:root:385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
INFO:root:Assigning ['1771', '1786'] to 1779, pre_objs=['1771'], branches=[]
INFO:root:  Remove 1771
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 391 (Line 148): [97m[100mAST_ASSIGN[0m fn, fn = fn || function(){}
INFO:root:[1m[36mHANDLE NODE[0m 394 (Line 148): [97m[100mAST_BINARY_OP[0m fn, ||
INFO:root:[1m[36mHANDLE NODE[0m 395 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 397 (Line 148): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['1789']
INFO:root:[1m[36mHANDLE NODE[0m 392 (Line 148): [97m[100mAST_VAR[0m fn, 
INFO:root:392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
INFO:root:Assigning ['1772', '1789'] to 1781, pre_objs=['1772'], branches=[]
INFO:root:  Remove 1772
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 407 (Line 151): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 408 (Line 151): [97m[100mAST_IF_ELEM[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 409 (Line 151): [97m[100mAST_UNARY_OP[0m cmd, !cmd
INFO:root:BLOCK 412 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 413 (Line 151): [97m[100mAST_RETURN[0m, return fn(new Error('growl not supported on this platform'));
INFO:root:[1m[36mHANDLE NODE[0m 414 (Line 151): [97m[100mAST_CALL[0m fn, fn(new Error('growl not supported on this platform'))
INFO:root:[1m[36mHANDLE NODE[0m 415 (Line 151): [97m[100mAST_NAME[0m fn, 
INFO:root:415 handle result: obj_nodes=['1772', '1789'], name=fn, name_nodes=['1781']
INFO:root:[1m[36mHANDLE NODE[0m 418 (Line 151): [97m[100mAST_NEW[0m Error, new Error('growl not supported on this platform')
INFO:root:[1m[36mHANDLE NODE[0m 419 (Line 151): [97m[100mAST_NAME[0m Error, 
INFO:root:419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
INFO:root:[1m[36mHANDLE NODE[0m 422 (Line 151): [97m[100mstring[0m 'growl not supported on this platform', 'growl not supported on this platform'
INFO:root:422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
INFO:root:prototype obj node is ['1305']
INFO:root:callback functions =
INFO:root:[31mEdge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:418: function returned_objs=['1800'], used_objs=['1795']
INFO:root:2nd
Finished Importing
add_blank_func func_name: Object
name node for Object does not exist
add_blank_func func_name: Function
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: String
name node for String does not exist
add_blank_func func_name: Number
name node for Number does not exist
add_blank_func func_name: Array
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: Boolean
name node for Boolean does not exist
add_blank_func func_name: Symbol
name node for Symbol does not exist
add_blank_func func_name: Error
name node for Error does not exist
add_blank_func func_name: EvalError
name node for EvalError does not exist
add_blank_func func_name: InternalError
name node for InternalError does not exist
add_blank_func func_name: RangeError
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
name node for TypeError does not exist
add_blank_func func_name: URIError
name node for URIError does not exist
add_blank_func func_name: parseInt
name node for parseInt does not exist
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
name node for escape does not exist
add_blank_func func_name: unescape
name node for unescape does not exist
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
name node for setInterval does not exist
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for true does not exist
name node for false does not exist
Internal objects
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
name node for ./tests/vul_demo.js does not exist
name node for module does not exist
name node for exports does not exist
name node for this does not exist
name node for child_process does not exist
name node for process does not exist
name node for SayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper2 does not exist
name node for arguments does not exist
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
prototype obj node is ['681']
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
  Remove 649
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
  Remove 649
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
name node for arguments does not exist
name node for commandline does not exist
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
  Remove 649
add_blank_func func_name: child_process.execSync
name node for arguments does not exist
Finished Importing
add_blank_func func_name: Object
name node for Object does not exist
add_blank_func func_name: Function
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: String
name node for String does not exist
add_blank_func func_name: Number
name node for Number does not exist
add_blank_func func_name: Array
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: Boolean
name node for Boolean does not exist
add_blank_func func_name: Symbol
name node for Symbol does not exist
add_blank_func func_name: Error
name node for Error does not exist
add_blank_func func_name: EvalError
name node for EvalError does not exist
add_blank_func func_name: InternalError
name node for InternalError does not exist
add_blank_func func_name: RangeError
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
name node for TypeError does not exist
add_blank_func func_name: URIError
name node for URIError does not exist
add_blank_func func_name: parseInt
name node for parseInt does not exist
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
name node for escape does not exist
add_blank_func func_name: unescape
name node for unescape does not exist
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
name node for setInterval does not exist
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for true does not exist
name node for false does not exist
Internal objects
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
name node for ./tests/vul_demo.js does not exist
name node for module does not exist
name node for exports does not exist
name node for this does not exist
name node for child_process does not exist
name node for process does not exist
name node for SayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper2 does not exist
name node for arguments does not exist
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
prototype obj node is ['681']
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
  Remove 649
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
  Remove 649
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
name node for arguments does not exist
name node for commandline does not exist
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
  Remove 649
add_blank_func func_name: child_process.execSync
name node for arguments does not exist
Finished Importing
add_blank_func func_name: Object
name node for Object does not exist
add_blank_func func_name: Function
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: String
name node for String does not exist
add_blank_func func_name: Number
name node for Number does not exist
add_blank_func func_name: Array
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: Boolean
name node for Boolean does not exist
add_blank_func func_name: Symbol
name node for Symbol does not exist
add_blank_func func_name: Error
name node for Error does not exist
add_blank_func func_name: EvalError
name node for EvalError does not exist
add_blank_func func_name: InternalError
name node for InternalError does not exist
add_blank_func func_name: RangeError
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
name node for TypeError does not exist
add_blank_func func_name: URIError
name node for URIError does not exist
add_blank_func func_name: parseInt
name node for parseInt does not exist
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
name node for escape does not exist
add_blank_func func_name: unescape
name node for unescape does not exist
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
name node for setInterval does not exist
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for true does not exist
name node for false does not exist
Internal objects
undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
name node for ./tests/growl.js does not exist
name node for module does not exist
name node for exports does not exist
name node for this does not exist
name node for exec does not exist
name node for fs does not exist
name node for path does not exist
name node for exists does not exist
name node for os does not exist
name node for quote does not exist
name node for cmd does not exist
name node for which does not exist
name node for growl does not exist
name node for require('child_process') does not exist
Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
  Remove 1545
Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
  Remove 1545
add_blank_func func_name: os.type
name node for arguments does not exist
name node for arguments does not exist
name node for name does not exist
name node for paths does not exist
name node for loc does not exist
add_blank_func func_name: process.env.PATH.split
name node for arguments does not exist
Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
  Remove 1545
Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
  Remove 1568
Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
  Remove 1568
Assigning ['1768'] to 1769, pre_objs=[], branches=[]
name node for arguments does not exist
name node for msg does not exist
name node for options does not exist
name node for fn does not exist
name node for image does not exist
name node for args does not exist
Assigning ['1771', '1786'] to 1779, pre_objs=['1771'], branches=[]
  Remove 1771
Assigning ['1789', '1772'] to 1781, pre_objs=['1772'], branches=[]
  Remove 1772
name node for arguments does not exist
prototype obj node is ['1305']
Edge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
name node for arguments does not exist
add_blank_func func_name: fn
name node for arguments does not exist
Assigning ['1825'] to 1784, pre_objs=['1545'], branches=[]
  Remove 1545
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[]
  Remove 1545
add_blank_func func_name: path.extname
name node for arguments does not exist
name node for path.extname(image) does not exist
add_blank_func func_name: path.extname(image).substr
Edge 459->1834 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
name node for arguments does not exist
Assigning ['1545'] to 1877, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
Assigning ['1882'] to 1832, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
name node for /^[A-Z]/ does not exist
add_blank_func func_name: /^[A-Z]/.test
name node for arguments does not exist
Assigning ['1882', '1905'] to 1832, pre_objs=['1882'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
name node for /^png|gif|jpe?g$/ does not exist
add_blank_func func_name: /^png|gif|jpe?g$/.test
name node for arguments does not exist
Assigning ['1882', '1905', '1928'] to 1832, pre_objs=['1882', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
Assigning ['1882', '1905', '1933', '1928'] to 1832, pre_objs=['1882', '1905', '1928'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
Assigning ['1882', '1935', '1928', '1933', '1905'] to 1832, pre_objs=['1882', '1905', '1933', '1928'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
add_blank_func func_name: quote
name node for arguments does not exist
Assigning ['1977'] to 1979, pre_objs=[], branches=[BranchTag("If619#0")]
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
name node for arguments does not exist
name node for arguments does not exist
name node for arguments does not exist
name node for arguments does not exist
Assigning ['1545'] to 2052, pre_objs=[], branches=[BranchTag("If619#0")]
add_blank_func func_name: exec
name node for arguments does not exist
Edge 980->1809 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Finished Importing
Finished Importing
add_blank_func func_name: Object
add_blank_func func_name: Object
name node for Object does not exist
name node for Object does not exist
add_blank_func func_name: Function
add_blank_func func_name: Function
name node for Function does not exist
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: valueOf
add_blank_func func_name: String
add_blank_func func_name: String
name node for String does not exist
name node for String does not exist
add_blank_func func_name: Number
add_blank_func func_name: Number
name node for Number does not exist
name node for Number does not exist
add_blank_func func_name: Array
add_blank_func func_name: Array
name node for Array does not exist
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: filter
add_blank_func func_name: Boolean
add_blank_func func_name: Boolean
name node for Boolean does not exist
name node for Boolean does not exist
add_blank_func func_name: Symbol
add_blank_func func_name: Symbol
name node for Symbol does not exist
name node for Symbol does not exist
add_blank_func func_name: Error
add_blank_func func_name: Error
name node for Error does not exist
name node for Error does not exist
add_blank_func func_name: EvalError
add_blank_func func_name: EvalError
name node for EvalError does not exist
name node for EvalError does not exist
add_blank_func func_name: InternalError
add_blank_func func_name: InternalError
name node for InternalError does not exist
name node for InternalError does not exist
add_blank_func func_name: RangeError
add_blank_func func_name: RangeError
name node for RangeError does not exist
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
add_blank_func func_name: TypeError
name node for TypeError does not exist
name node for TypeError does not exist
add_blank_func func_name: URIError
add_blank_func func_name: URIError
name node for URIError does not exist
name node for URIError does not exist
add_blank_func func_name: parseInt
add_blank_func func_name: parseInt
name node for parseInt does not exist
name node for parseInt does not exist
add_blank_func func_name: parseFloat
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
add_blank_func func_name: escape
name node for escape does not exist
name node for escape does not exist
add_blank_func func_name: unescape
add_blank_func func_name: unescape
name node for unescape does not exist
name node for unescape does not exist
add_blank_func func_name: setTimeout
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
add_blank_func func_name: setInterval
name node for setInterval does not exist
name node for setInterval does not exist
add_blank_func func_name: clearInterval
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for clearInterval does not exist
name node for undefined does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for NaN does not exist
name node for true does not exist
name node for true does not exist
name node for false does not exist
name node for false does not exist
Internal objects
Internal objects
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
name node for ./tests/vul_demo.js does not exist
name node for ./tests/vul_demo.js does not exist
name node for module does not exist
name node for module does not exist
name node for exports does not exist
name node for exports does not exist
name node for this does not exist
name node for this does not exist
name node for child_process does not exist
name node for child_process does not exist
name node for process does not exist
name node for process does not exist
name node for SayHelper does not exist
name node for SayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper2 does not exist
name node for mySayHelper2 does not exist
name node for arguments does not exist
name node for arguments does not exist
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
prototype obj node is ['681']
prototype obj node is ['681']
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
name node for arguments does not exist
name node for arguments does not exist
name node for commandline does not exist
name node for commandline does not exist
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
add_blank_func func_name: child_process.execSync
add_blank_func func_name: child_process.execSync
name node for arguments does not exist
name node for arguments does not exist
Finished Importing
add_blank_func func_name: Object
name node for Object does not exist
add_blank_func func_name: Function
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: String
name node for String does not exist
add_blank_func func_name: Number
name node for Number does not exist
add_blank_func func_name: Array
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: Boolean
name node for Boolean does not exist
add_blank_func func_name: Symbol
name node for Symbol does not exist
add_blank_func func_name: Error
name node for Error does not exist
add_blank_func func_name: EvalError
name node for EvalError does not exist
add_blank_func func_name: InternalError
name node for InternalError does not exist
add_blank_func func_name: RangeError
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
name node for TypeError does not exist
add_blank_func func_name: URIError
name node for URIError does not exist
add_blank_func func_name: parseInt
name node for parseInt does not exist
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
name node for escape does not exist
add_blank_func func_name: unescape
name node for unescape does not exist
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
name node for setInterval does not exist
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for true does not exist
name node for false does not exist
Internal objects
undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
GENERATE OBJECT GRAPH: 1
REGISTER 61 to 1
REGISTER 359 to 1
HANDLE NODE 1 (Line 7): AST_TOPLEVEL, 
FILE ./tests/growl.js BEGINS
name node for ./tests/growl.js does not exist
name node for module does not exist
name node for exports does not exist
name node for this does not exist
name node for exec does not exist
name node for fs does not exist
name node for path does not exist
name node for exists does not exist
name node for os does not exist
name node for quote does not exist
name node for cmd does not exist
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
name node for which does not exist
Declared function obj nodes: ['1580']
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
name node for growl does not exist
Declared function obj nodes: ['1587']
FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 7): AST_ASSIGN exec, exec = require('child_process').exec
HANDLE NODE 8 (Line 7): AST_PROP exec, require('child_process').exec
HANDLE NODE 9 (Line 7): AST_CALL require, require('child_process')
HANDLE NODE 10 (Line 7): AST_NAME require, 
Name node require not found, create name node
10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module child_process at built-in not found!
9: function returned_objs=[], used_objs=[]
PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
name node for require('child_process') does not exist
Add prop name node require('child_process').exec (1596->1597)
8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
HANDLE NODE 6 (Line 7): AST_VAR exec, 
6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
Right OBJ not found
Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 15 (Line 8): AST_ASSIGN fs, fs = require('fs')
HANDLE NODE 18 (Line 8): AST_CALL require, require('fs')
HANDLE NODE 19 (Line 8): AST_NAME require, 
19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module fs at built-in not found!
18: function returned_objs=[], used_objs=[]
HANDLE NODE 16 (Line 8): AST_VAR fs, 
16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Right side handling error at statement 15, child 18
HANDLE NODE 23 (Line 9): AST_ASSIGN path, path = require('path')
HANDLE NODE 26 (Line 9): AST_CALL require, require('path')
HANDLE NODE 27 (Line 9): AST_NAME require, 
27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module path at built-in not found!
26: function returned_objs=[], used_objs=[]
HANDLE NODE 24 (Line 9): AST_VAR path, 
24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Right side handling error at statement 23, child 26
HANDLE NODE 31 (Line 10): AST_ASSIGN exists, exists = fs.existsSync || path.existsSync
HANDLE NODE 34 (Line 10): AST_BINARY_OP existsSync, ||
HANDLE NODE 35 (Line 10): AST_PROP existsSync, fs.existsSync
HANDLE NODE 36 (Line 10): AST_VAR fs, 
36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Add prop name node fs.existsSync (1545->1598)
35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
HANDLE NODE 39 (Line 10): AST_PROP existsSync, path.existsSync
HANDLE NODE 40 (Line 10): AST_VAR path, 
40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
HANDLE NODE 32 (Line 10): AST_VAR exists, 
32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
Right side handling error at statement 31, child 34
HANDLE NODE 43 (Line 11): AST_ASSIGN os, os = require('os')
HANDLE NODE 46 (Line 11): AST_CALL require, require('os')
HANDLE NODE 47 (Line 11): AST_NAME require, 
47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module os at built-in not found!
46: function returned_objs=[], used_objs=[]
HANDLE NODE 44 (Line 11): AST_VAR os, 
44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Right side handling error at statement 43, child 46
HANDLE NODE 51 (Line 12): AST_ASSIGN quote, quote = JSON.stringify
HANDLE NODE 54 (Line 12): AST_PROP stringify, JSON.stringify
HANDLE NODE 55 (Line 12): AST_VAR JSON, 
Name node JSON not found, create name node
55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
PARENT OBJ JSON NOT DEFINED, creating object nodes
Add prop name node JSON.stringify (1600->1601)
54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
HANDLE NODE 52 (Line 12): AST_VAR quote, 
52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
Right OBJ not found
Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 58 (Line 13): AST_ASSIGN cmd, cmd
HANDLE NODE 59 (Line 13): AST_VAR cmd, 
59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
Declared function obj nodes: ['1580']
HANDLE NODE 140 (Line 25): AST_SWITCH type, 
HANDLE NODE 141 (Line 25): AST_METHOD_CALL type, os.type()
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Add prop name node os.type (1545->1602)
141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
add_blank_func func_name: os.type
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
name node for arguments does not exist
FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
callback functions = set()
141: function returned_objs=[], used_objs=[]
HANDLE NODE 146 (Line 25): AST_SWITCH_LIST 'Darwin', 
HANDLE NODE 148 (Line 26): string 'Darwin', 'Darwin'
148 handle result: obj_nodes=['1620'], value='Darwin'
BLOCK 149 STARTS
HANDLE NODE 150 (Line 27): AST_IF, 
HANDLE NODE 151 (Line 27): AST_IF_ELEM, 
HANDLE NODE 152 (Line 27): AST_CALL which, which('terminal-notifier')
HANDLE NODE 153 (Line 27): AST_NAME which, 
153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
HANDLE NODE 156 (Line 27): string 'terminal-notifier', 'terminal-notifier'
156 handle result: obj_nodes=['1621'], value='terminal-notifier'
name node for arguments does not exist
add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
name node for name does not exist
name node for paths does not exist
name node for loc does not exist
FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
BLOCK 71 STARTS
HANDLE NODE 72 (Line 16): AST_ASSIGN paths, paths = process.env.PATH.split(':')
HANDLE NODE 75 (Line 16): AST_METHOD_CALL split, process.env.PATH.split(':')
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
Name node process not found, create name node
78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
PARENT OBJ process NOT DEFINED, creating object nodes
Add prop name node process.env (1632->1633)
77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
PARENT OBJ process.env NOT DEFINED, creating object nodes
Add prop name node process.env.PATH (1634->1635)
76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
Add prop name node process.env.PATH.split (1636->1637)
75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
add_blank_func func_name: process.env.PATH.split
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
HANDLE NODE 84 (Line 16): string ':', ':'
84 handle result: obj_nodes=['1649'], value=':'
name node for arguments does not exist
FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
callback functions = set()
75: function returned_objs=[], used_objs=['1649']
HANDLE NODE 73 (Line 16): AST_VAR paths, 
73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
Right OBJ not found
Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=['1649']
HANDLE NODE 85 (Line 17): AST_ASSIGN loc, loc
HANDLE NODE 86 (Line 17): AST_VAR loc, 
86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
HANDLE NODE 88 (Line 19): AST_FOR, 
152: function returned_objs=[], used_objs=[]
BLOCK 157 STARTS
HANDLE NODE 158 (Line 28): AST_ASSIGN cmd, =
HANDLE NODE 161 (Line 28): AST_ARRAY "Darwin-NotificationCenter", 
HANDLE NODE 162 (Line 29): AST_ARRAY_ELEM "Darwin-NotificationCenter", 
HANDLE NODE 163 (Line 29): string "Darwin-NotificationCenter", "Darwin-NotificationCenter"
163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
HANDLE NODE 165 (Line 30): AST_ARRAY_ELEM "terminal-notifier", 
HANDLE NODE 166 (Line 30): string "terminal-notifier", "terminal-notifier"
166 handle result: obj_nodes=['1661'], value="terminal-notifier"
HANDLE NODE 168 (Line 31): AST_ARRAY_ELEM '-message', 
HANDLE NODE 169 (Line 31): string '-message', '-message'
169 handle result: obj_nodes=['1663'], value='-message'
HANDLE NODE 171 (Line 32): AST_ARRAY_ELEM '-title', 
HANDLE NODE 172 (Line 32): string '-title', '-title'
172 handle result: obj_nodes=['1665'], value='-title'
HANDLE NODE 174 (Line 33): AST_ARRAY_ELEM '-subtitle', 
HANDLE NODE 175 (Line 33): string '-subtitle', '-subtitle'
175 handle result: obj_nodes=['1667'], value='-subtitle'
HANDLE NODE 177 (Line 34): AST_ARRAY_ELEM priority, 
HANDLE NODE 178 (Line 34): AST_ARRAY '-execute', 
HANDLE NODE 179 (Line 35): AST_ARRAY_ELEM '-execute', 
HANDLE NODE 180 (Line 35): string '-execute', '-execute'
180 handle result: obj_nodes=['1671'], value='-execute'
HANDLE NODE 182 (Line 36): AST_ARRAY_ELEM range, 
HANDLE NODE 183 (Line 36): AST_ARRAY, []
HANDLE NODE 159 (Line 28): AST_VAR cmd, 
159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
  assign used objs=[]
HANDLE NODE 186 (Line 27): AST_IF_ELEM, 
HANDLE NODE 187 (Line 27): NULL, 
BLOCK 188 STARTS
HANDLE NODE 189 (Line 40): AST_ASSIGN cmd, =
HANDLE NODE 192 (Line 40): AST_ARRAY "Darwin-Growl", 
HANDLE NODE 193 (Line 41): AST_ARRAY_ELEM "Darwin-Growl", 
HANDLE NODE 194 (Line 41): string "Darwin-Growl", "Darwin-Growl"
194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
HANDLE NODE 196 (Line 42): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 197 (Line 42): string "growlnotify", "growlnotify"
197 handle result: obj_nodes=['1682'], value="growlnotify"
HANDLE NODE 199 (Line 43): AST_ARRAY_ELEM '-m', 
HANDLE NODE 200 (Line 43): string '-m', '-m'
200 handle result: obj_nodes=['1684'], value='-m'
HANDLE NODE 202 (Line 44): AST_ARRAY_ELEM '--sticky', 
HANDLE NODE 203 (Line 44): string '--sticky', '--sticky'
203 handle result: obj_nodes=['1686'], value='--sticky'
HANDLE NODE 205 (Line 45): AST_ARRAY_ELEM priority, 
HANDLE NODE 206 (Line 45): AST_ARRAY '--priority', 
HANDLE NODE 207 (Line 46): AST_ARRAY_ELEM '--priority', 
HANDLE NODE 208 (Line 46): string '--priority', '--priority'
208 handle result: obj_nodes=['1690'], value='--priority'
HANDLE NODE 210 (Line 47): AST_ARRAY_ELEM range, 
HANDLE NODE 211 (Line 47): AST_ARRAY 0, 
HANDLE NODE 212 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 213 (Line 48): AST_UNARY_OP 2, -2
HANDLE NODE 216 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 217 (Line 49): AST_UNARY_OP 1, -1
HANDLE NODE 220 (Line 47): AST_ARRAY_ELEM 0, 
HANDLE NODE 221 (Line 50): integer 0, 0
221 handle result: obj_nodes=['1694'], value=0
HANDLE NODE 223 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 224 (Line 51): integer 1, 1
224 handle result: obj_nodes=['1696'], value=1
HANDLE NODE 226 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 227 (Line 52): integer 2, 2
227 handle result: obj_nodes=['1698'], value=2
HANDLE NODE 229 (Line 47): AST_ARRAY_ELEM "Very Low", 
HANDLE NODE 230 (Line 53): string "Very Low", "Very Low"
230 handle result: obj_nodes=['1700'], value="Very Low"
HANDLE NODE 232 (Line 47): AST_ARRAY_ELEM "Moderate", 
HANDLE NODE 233 (Line 54): string "Moderate", "Moderate"
233 handle result: obj_nodes=['1702'], value="Moderate"
HANDLE NODE 235 (Line 47): AST_ARRAY_ELEM "Normal", 
HANDLE NODE 236 (Line 55): string "Normal", "Normal"
236 handle result: obj_nodes=['1704'], value="Normal"
HANDLE NODE 238 (Line 47): AST_ARRAY_ELEM "High", 
HANDLE NODE 239 (Line 56): string "High", "High"
239 handle result: obj_nodes=['1706'], value="High"
HANDLE NODE 241 (Line 47): AST_ARRAY_ELEM "Emergency", 
HANDLE NODE 242 (Line 57): string "Emergency", "Emergency"
242 handle result: obj_nodes=['1708'], value="Emergency"
HANDLE NODE 190 (Line 40): AST_VAR cmd, 
190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
  assign used objs=[]
HANDLE NODE 246 (Line 62): AST_BREAK, break;
HANDLE NODE 249 (Line 63): string 'Linux', 'Linux'
249 handle result: obj_nodes=['1712'], value='Linux'
BLOCK 250 STARTS
HANDLE NODE 251 (Line 64): AST_ASSIGN cmd, =
HANDLE NODE 254 (Line 64): AST_ARRAY "Linux", 
HANDLE NODE 255 (Line 65): AST_ARRAY_ELEM "Linux", 
HANDLE NODE 256 (Line 65): string "Linux", "Linux"
256 handle result: obj_nodes=['1715'], value="Linux"
HANDLE NODE 258 (Line 66): AST_ARRAY_ELEM "notify-send", 
HANDLE NODE 259 (Line 66): string "notify-send", "notify-send"
259 handle result: obj_nodes=['1717'], value="notify-send"
HANDLE NODE 261 (Line 67): AST_ARRAY_ELEM '', 
HANDLE NODE 262 (Line 67): string '', ''
262 handle result: obj_nodes=['1719'], value=''
HANDLE NODE 264 (Line 68): AST_ARRAY_ELEM '-t 0', 
HANDLE NODE 265 (Line 68): string '-t 0', '-t 0'
265 handle result: obj_nodes=['1721'], value='-t 0'
HANDLE NODE 267 (Line 69): AST_ARRAY_ELEM '-i', 
HANDLE NODE 268 (Line 69): string '-i', '-i'
268 handle result: obj_nodes=['1723'], value='-i'
HANDLE NODE 270 (Line 70): AST_ARRAY_ELEM priority, 
HANDLE NODE 271 (Line 70): AST_ARRAY '-u', 
HANDLE NODE 272 (Line 71): AST_ARRAY_ELEM '-u', 
HANDLE NODE 273 (Line 71): string '-u', '-u'
273 handle result: obj_nodes=['1727'], value='-u'
HANDLE NODE 275 (Line 72): AST_ARRAY_ELEM range, 
HANDLE NODE 276 (Line 72): AST_ARRAY "low", [            "low"          , "normal"          , "critical"        ]
HANDLE NODE 277 (Line 72): AST_ARRAY_ELEM "low", 
HANDLE NODE 278 (Line 73): string "low", "low"
278 handle result: obj_nodes=['1731'], value="low"
HANDLE NODE 280 (Line 72): AST_ARRAY_ELEM "normal", 
HANDLE NODE 281 (Line 74): string "normal", "normal"
281 handle result: obj_nodes=['1733'], value="normal"
HANDLE NODE 283 (Line 72): AST_ARRAY_ELEM "critical", 
HANDLE NODE 284 (Line 75): string "critical", "critical"
284 handle result: obj_nodes=['1735'], value="critical"
HANDLE NODE 252 (Line 64): AST_VAR cmd, 
252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
  assign used objs=[]
HANDLE NODE 288 (Line 79): AST_BREAK, break;
HANDLE NODE 291 (Line 80): string 'Windows_NT', 'Windows_NT'
291 handle result: obj_nodes=['1739'], value='Windows_NT'
BLOCK 292 STARTS
HANDLE NODE 293 (Line 81): AST_ASSIGN cmd, =
HANDLE NODE 296 (Line 81): AST_ARRAY "Windows", 
HANDLE NODE 297 (Line 82): AST_ARRAY_ELEM "Windows", 
HANDLE NODE 298 (Line 82): string "Windows", "Windows"
298 handle result: obj_nodes=['1742'], value="Windows"
HANDLE NODE 300 (Line 83): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 301 (Line 83): string "growlnotify", "growlnotify"
301 handle result: obj_nodes=['1744'], value="growlnotify"
HANDLE NODE 303 (Line 84): AST_ARRAY_ELEM '', 
HANDLE NODE 304 (Line 84): string '', ''
304 handle result: obj_nodes=['1746'], value=''
HANDLE NODE 306 (Line 85): AST_ARRAY_ELEM '/s:true', 
HANDLE NODE 307 (Line 85): string '/s:true', '/s:true'
307 handle result: obj_nodes=['1748'], value='/s:true'
HANDLE NODE 309 (Line 86): AST_ARRAY_ELEM '/t:', 
HANDLE NODE 310 (Line 86): string '/t:', '/t:'
310 handle result: obj_nodes=['1750'], value='/t:'
HANDLE NODE 312 (Line 87): AST_ARRAY_ELEM '/i:', 
HANDLE NODE 313 (Line 87): string '/i:', '/i:'
313 handle result: obj_nodes=['1752'], value='/i:'
HANDLE NODE 315 (Line 88): AST_ARRAY_ELEM priority, 
HANDLE NODE 316 (Line 88): AST_ARRAY '/p:', 
HANDLE NODE 317 (Line 89): AST_ARRAY_ELEM '/p:', 
HANDLE NODE 318 (Line 89): string '/p:', '/p:'
318 handle result: obj_nodes=['1756'], value='/p:'
HANDLE NODE 320 (Line 90): AST_ARRAY_ELEM range, 
HANDLE NODE 321 (Line 90): AST_ARRAY 0, [              -2            , -1            , 0            , 1            , 2          ]
HANDLE NODE 322 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 323 (Line 91): AST_UNARY_OP 2, -2
HANDLE NODE 326 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 327 (Line 92): AST_UNARY_OP 1, -1
HANDLE NODE 330 (Line 90): AST_ARRAY_ELEM 0, 
HANDLE NODE 331 (Line 93): integer 0, 0
331 handle result: obj_nodes=['1760'], value=0
HANDLE NODE 333 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 334 (Line 94): integer 1, 1
334 handle result: obj_nodes=['1762'], value=1
HANDLE NODE 336 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 337 (Line 95): integer 2, 2
337 handle result: obj_nodes=['1764'], value=2
HANDLE NODE 294 (Line 81): AST_VAR cmd, 
294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
  assign used objs=[]
HANDLE NODE 341 (Line 99): AST_BREAK, break;
HANDLE NODE 343 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 346 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 351 (Line 106): AST_VAR growl, 
351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 347 (Line 106): AST_PROP exports, module.exports
HANDLE NODE 348 (Line 106): AST_VAR module, 
348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 344 (Line 106): AST_VAR exports, 
344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 353 (Line 112): AST_ASSIGN '1.4.1', =
HANDLE NODE 358 (Line 112): string '1.4.1', '1.4.1'
358 handle result: obj_nodes=['1768'], value='1.4.1'
HANDLE NODE 354 (Line 112): AST_PROP version, exports.version
HANDLE NODE 355 (Line 112): AST_VAR exports, 
355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
Cannot find "direct" property, going into __proto__ ['1024']...
  exports.__proto__.version
Add prop name node exports.version (1587->1769)
354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
Assigning ['1768'] to 1769, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
Declared function obj nodes: ['1587']
HANDLE NODE 994 (Line 234): NULL, ;
HANDLE NODE 995 (Line 236): AST_CALL growl, growl("test", "", "")
HANDLE NODE 996 (Line 236): AST_NAME growl, 
996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 999 (Line 236): string "test", "test"
999 handle result: obj_nodes=['1770'], value="test"
HANDLE NODE 1000 (Line 236): string "", ""
1000 handle result: obj_nodes=['1771'], value=""
HANDLE NODE 1001 (Line 236): string "", ""
1001 handle result: obj_nodes=['1772'], value=""
name node for arguments does not exist
add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
name node for msg does not exist
add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
name node for options does not exist
add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
name node for fn does not exist
name node for image does not exist
name node for args does not exist
FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
BLOCK 377 STARTS
HANDLE NODE 378 (Line 145): AST_ASSIGN image, image
HANDLE NODE 379 (Line 145): AST_VAR image, 
379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
HANDLE NODE 381 (Line 146): AST_ASSIGN args, args
HANDLE NODE 382 (Line 146): AST_VAR args, 
382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
HANDLE NODE 384 (Line 147): AST_ASSIGN options, options = options || {}
HANDLE NODE 387 (Line 147): AST_BINARY_OP options, ||
HANDLE NODE 388 (Line 147): AST_VAR options, 
388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
HANDLE NODE 390 (Line 147): AST_ARRAY, 
HANDLE NODE 385 (Line 147): AST_VAR options, 
385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
Assigning ['1771', '1786'] to 1779, pre_objs=['1771'], branches=[]
  Remove 1771
  assign used objs=[]
HANDLE NODE 391 (Line 148): AST_ASSIGN fn, fn = fn || function(){}
HANDLE NODE 394 (Line 148): AST_BINARY_OP fn, ||
HANDLE NODE 395 (Line 148): AST_VAR fn, 
395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
HANDLE NODE 397 (Line 148): AST_CLOSURE {closure}, 
Declared function obj nodes: ['1789']
HANDLE NODE 392 (Line 148): AST_VAR fn, 
392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
Assigning ['1789', '1772'] to 1781, pre_objs=['1772'], branches=[]
  Remove 1772
  assign used objs=[]
HANDLE NODE 407 (Line 151): AST_IF, 
HANDLE NODE 408 (Line 151): AST_IF_ELEM, 
HANDLE NODE 409 (Line 151): AST_UNARY_OP cmd, !cmd
BLOCK 412 STARTS
HANDLE NODE 413 (Line 151): AST_RETURN, return fn(new Error('growl not supported on this platform'));
HANDLE NODE 414 (Line 151): AST_CALL fn, fn(new Error('growl not supported on this platform'))
HANDLE NODE 415 (Line 151): AST_NAME fn, 
415 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
HANDLE NODE 418 (Line 151): AST_NEW Error, new Error('growl not supported on this platform')
HANDLE NODE 419 (Line 151): AST_NAME Error, 
419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
HANDLE NODE 422 (Line 151): string 'growl not supported on this platform', 'growl not supported on this platform'
422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
name node for arguments does not exist
FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
prototype obj node is ['1305']
callback functions = set()
Edge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
418: function returned_objs=['1800'], used_objs=['1795']
name node for arguments does not exist
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#0")]
BLOCK 404 STARTS
add_blank_func func_name: fn
name node for arguments does not exist
FUNCTION 1809 fn STARTS, SCOPE 1814, DECL OBJ 1772, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#1")]
callback functions = set()
414: function returned_objs=[], used_objs=['1795', '1800']
HANDLE NODE 423 (Line 152): AST_ASSIGN args, =
HANDLE NODE 426 (Line 152): AST_ARRAY, [cmd.pkg]
HANDLE NODE 427 (Line 152): AST_ARRAY_ELEM pkg, 
HANDLE NODE 428 (Line 152): AST_PROP pkg, cmd.pkg
HANDLE NODE 429 (Line 152): AST_VAR cmd, 
429 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
428 handle result: obj_nodes=['1682', '1744', '1717', '1661'], name=cmd.pkg, name_nodes=['1683', '1745', '1718', '1662']
HANDLE NODE 424 (Line 152): AST_VAR args, 
424 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
Assigning ['1825'] to 1784, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 433 (Line 155): AST_IF, 
HANDLE NODE 434 (Line 155): AST_IF_ELEM, 
HANDLE NODE 435 (Line 155): AST_ASSIGN image, =
HANDLE NODE 438 (Line 155): AST_PROP image, options.image
HANDLE NODE 439 (Line 155): AST_VAR options, 
439 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
Add prop name node options.image (1771->1828)
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.image
Add prop name node options.image (1786->1829)
438 handle result: obj_nodes=[], name=options.image, name_nodes=['1828', '1829']
HANDLE NODE 436 (Line 155): AST_VAR image, 
436 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Right OBJ not found
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
BLOCK 442 STARTS
HANDLE NODE 443 (Line 156): AST_SWITCH type, 
HANDLE NODE 444 (Line 156): AST_PROP type, cmd.type
HANDLE NODE 445 (Line 156): AST_VAR cmd, 
445 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
444 handle result: obj_nodes=['1715', '1742', '1680', '1659'], name=cmd.type, name_nodes=['1681', '1743', '1716', '1660']
HANDLE NODE 448 (Line 156): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 450 (Line 157): string 'Darwin-Growl', 'Darwin-Growl'
450 handle result: obj_nodes=['1831'], value='Darwin-Growl'
BLOCK 451 STARTS
HANDLE NODE 452 (Line 158): AST_ASSIGN flag, flag
HANDLE NODE 453 (Line 158): AST_VAR flag, 
Name node flag not found, create name node
453 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 455 (Line 158): AST_ASSIGN ext, ext = path.extname(image).substr(1)
HANDLE NODE 458 (Line 158): AST_METHOD_CALL substr, path.extname(image).substr(1)
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Add prop name node path.extname (1545->1833)
459 handle result: obj_nodes=[], name=path.extname, name_nodes=['1833']
add_blank_func func_name: path.extname
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
459: function returned_objs=[], used_objs=['1545']
PARENT OBJ path.extname(image) NOT DEFINED, creating object nodes
name node for path.extname(image) does not exist
Add prop name node path.extname(image).substr (1852->1853)
458 handle result: obj_nodes=[], name=path.extname(image).substr, name_nodes=['1853']
add_blank_func func_name: path.extname(image).substr
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
459 handle result: obj_nodes=['1840'], name=path.extname, name_nodes=['1833']
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
Edge 459->1834 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
459: function returned_objs=[], used_objs=['1545']
HANDLE NODE 468 (Line 158): integer 1, 1
468 handle result: obj_nodes=['1870'], value=1
name node for arguments does not exist
FUNCTION 1854 path.extname(image).substr STARTS, SCOPE 1859, DECL OBJ 1860, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
458: function returned_objs=[], used_objs=['1870']
HANDLE NODE 456 (Line 158): AST_VAR ext, 
Name node ext not found, create name node
456 handle result: obj_nodes=[], name=ext, name_nodes=['1877']
Right OBJ not found
Assigning ['1545'] to 1877, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=['1870']
HANDLE NODE 469 (Line 159): AST_ASSIGN flag, =
HANDLE NODE 472 (Line 159): AST_BINARY_OP flag, ||
HANDLE NODE 473 (Line 159): AST_VAR flag, 
473 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 475 (Line 159): AST_BINARY_OP 'iconpath', &&
HANDLE NODE 476 (Line 159): AST_BINARY_OP 'icns', ==
HANDLE NODE 477 (Line 159): AST_VAR ext, 
477 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 479 (Line 159): string 'icns', 'icns'
479 handle result: obj_nodes=['1878'], value='icns'
HANDLE NODE 480 (Line 159): string 'iconpath', 'iconpath'
480 handle result: obj_nodes=['1881'], value='iconpath'
HANDLE NODE 470 (Line 159): AST_VAR flag, 
470 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
Assigning ['1882'] to 1832, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 481 (Line 160): AST_ASSIGN flag, =
HANDLE NODE 484 (Line 160): AST_BINARY_OP flag, ||
HANDLE NODE 485 (Line 160): AST_VAR flag, 
485 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
HANDLE NODE 487 (Line 160): AST_BINARY_OP 'appIcon', &&
HANDLE NODE 488 (Line 160): AST_METHOD_CALL test, /^[A-Z]/.test(image)
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
PARENT OBJ /^[A-Z]/ NOT DEFINED, creating object nodes
name node for /^[A-Z]/ does not exist
Add prop name node /^[A-Z]/.test (1885->1886)
488 handle result: obj_nodes=[], name=/^[A-Z]/.test, name_nodes=['1886']
add_blank_func func_name: /^[A-Z]/.test
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
HANDLE NODE 494 (Line 160): AST_VAR image, 
494 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1887 /^[A-Z]/.test STARTS, SCOPE 1892, DECL OBJ 1893, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
488: function returned_objs=[], used_objs=['1545']
HANDLE NODE 496 (Line 160): string 'appIcon', 'appIcon'
496 handle result: obj_nodes=['1904'], value='appIcon'
HANDLE NODE 482 (Line 160): AST_VAR flag, 
482 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
Assigning ['1905', '1882'] to 1832, pre_objs=['1882'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 497 (Line 161): AST_ASSIGN flag, =
HANDLE NODE 500 (Line 161): AST_BINARY_OP flag, ||
HANDLE NODE 501 (Line 161): AST_VAR flag, 
501 handle result: obj_nodes=['1905', '1882'], name=flag, name_nodes=['1832']
HANDLE NODE 503 (Line 161): AST_BINARY_OP 'image', &&
HANDLE NODE 504 (Line 161): AST_METHOD_CALL test, /^png|gif|jpe?g$/.test(ext)
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
PARENT OBJ /^png|gif|jpe?g$/ NOT DEFINED, creating object nodes
name node for /^png|gif|jpe?g$/ does not exist
Add prop name node /^png|gif|jpe?g$/.test (1908->1909)
504 handle result: obj_nodes=[], name=/^png|gif|jpe?g$/.test, name_nodes=['1909']
add_blank_func func_name: /^png|gif|jpe?g$/.test
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
HANDLE NODE 510 (Line 161): AST_VAR ext, 
510 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
name node for arguments does not exist
FUNCTION 1910 /^png|gif|jpe?g$/.test STARTS, SCOPE 1915, DECL OBJ 1916, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
504: function returned_objs=[], used_objs=['1545']
HANDLE NODE 512 (Line 161): string 'image', 'image'
512 handle result: obj_nodes=['1927'], value='image'
HANDLE NODE 498 (Line 161): AST_VAR flag, 
498 handle result: obj_nodes=['1905', '1882'], name=flag, name_nodes=['1832']
Assigning ['1905', '1882', '1928'] to 1832, pre_objs=['1905', '1882'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 513 (Line 162): AST_ASSIGN flag, =
HANDLE NODE 516 (Line 162): AST_BINARY_OP flag, ||
HANDLE NODE 517 (Line 162): AST_VAR flag, 
517 handle result: obj_nodes=['1905', '1882', '1928'], name=flag, name_nodes=['1832']
HANDLE NODE 519 (Line 162): AST_BINARY_OP 'icon', &&
HANDLE NODE 520 (Line 162): AST_BINARY_OP ext, &&
HANDLE NODE 521 (Line 162): AST_VAR ext, 
521 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 523 (Line 162): AST_ASSIGN image, =
HANDLE NODE 526 (Line 162): AST_VAR ext, 
526 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 524 (Line 162): AST_VAR image, 
524 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 528 (Line 162): string 'icon', 'icon'
528 handle result: obj_nodes=['1932'], value='icon'
HANDLE NODE 514 (Line 162): AST_VAR flag, 
514 handle result: obj_nodes=['1905', '1882', '1928'], name=flag, name_nodes=['1832']
Assigning ['1905', '1882', '1933', '1928'] to 1832, pre_objs=['1905', '1882', '1928'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 529 (Line 163): AST_ASSIGN flag, =
HANDLE NODE 532 (Line 163): AST_BINARY_OP 'icon', ||
HANDLE NODE 533 (Line 163): AST_VAR flag, 
533 handle result: obj_nodes=['1905', '1882', '1933', '1928'], name=flag, name_nodes=['1832']
HANDLE NODE 535 (Line 163): string 'icon', 'icon'
535 handle result: obj_nodes=['1935'], value='icon'
HANDLE NODE 530 (Line 163): AST_VAR flag, 
530 handle result: obj_nodes=['1905', '1882', '1933', '1928'], name=flag, name_nodes=['1832']
Assigning ['1882', '1905', '1933', '1928', '1935'] to 1832, pre_objs=['1905', '1882', '1933', '1928'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 536 (Line 164): AST_METHOD_CALL push, args.push('--' + flag, image)
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
536 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 541 (Line 164): AST_BINARY_OP '--', +
HANDLE NODE 542 (Line 164): string '--', '--'
542 handle result: obj_nodes=['1936'], value='--'
HANDLE NODE 543 (Line 164): AST_VAR flag, 
543 handle result: obj_nodes=['1882', '1905', '1933', '1928', '1935'], name=flag, name_nodes=['1832']
HANDLE NODE 545 (Line 164): AST_VAR image, 
545 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7f57c217f6a8>...
536: function returned_objs=[], used_objs=['1545']
HANDLE NODE 547 (Line 165): AST_BREAK, break;
HANDLE NODE 550 (Line 166): string 'Linux', 'Linux'
550 handle result: obj_nodes=['1939'], value='Linux'
BLOCK 551 STARTS
HANDLE NODE 552 (Line 167): AST_METHOD_CALL push, args.push(cmd.icon + " " + image)
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
552 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 557 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 558 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 559 (Line 167): AST_PROP icon, cmd.icon
HANDLE NODE 560 (Line 167): AST_VAR cmd, 
560 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1657->1940)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1678->1941)
559 handle result: obj_nodes=['1752', '1723'], name=cmd.icon, name_nodes=['1724', '1941', '1753', '1940']
HANDLE NODE 563 (Line 167): string " ", " "
563 handle result: obj_nodes=['1942'], value=" "
HANDLE NODE 564 (Line 167): AST_VAR image, 
564 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7f57c217f6a8>...
552: function returned_objs=[], used_objs=['1942', '1723', '1945', '1752', '1545', '1943']
OBJ REACHES 251 (Line 64) -> 552 (Line 167)
OBJ REACHES 293 (Line 81) -> 552 (Line 167)
HANDLE NODE 566 (Line 169): AST_IF, 
HANDLE NODE 567 (Line 169): AST_IF_ELEM, 
HANDLE NODE 568 (Line 169): AST_UNARY_OP sticky, !options.sticky
BLOCK 573 STARTS
HANDLE NODE 574 (Line 169): AST_METHOD_CALL push, args.push('--hint=int:transient:1')
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
574 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 579 (Line 169): string '--hint=int:transient:1', '--hint=int:transient:1'
579 handle result: obj_nodes=['1948'], value='--hint=int:transient:1'
Running Python function <function array_push at 0x7f57c217f6a8>...
574: function returned_objs=[], used_objs=['1948']
HANDLE NODE 580 (Line 170): AST_BREAK, break;
HANDLE NODE 583 (Line 171): string 'Windows', 'Windows'
583 handle result: obj_nodes=['1949'], value='Windows'
BLOCK 584 STARTS
HANDLE NODE 585 (Line 172): AST_METHOD_CALL push, args.push(cmd.icon + quote(image))
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
585 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 590 (Line 172): AST_BINARY_OP icon, +
HANDLE NODE 591 (Line 172): AST_PROP icon, cmd.icon
HANDLE NODE 592 (Line 172): AST_VAR cmd, 
592 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
591 handle result: obj_nodes=['1752', '1723'], name=cmd.icon, name_nodes=['1724', '1941', '1753', '1940']
HANDLE NODE 595 (Line 172): AST_CALL quote, quote(image)
HANDLE NODE 596 (Line 172): AST_NAME quote, 
596 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
add_blank_func func_name: quote
HANDLE NODE 599 (Line 172): AST_VAR image, 
599 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#2")]
callback functions = set()
595: function returned_objs=[], used_objs=['1545']
Running Python function <function array_push at 0x7f57c217f6a8>...
585: function returned_objs=[], used_objs=['1967', '1752', '1545', '1723']
OBJ REACHES 293 (Line 81) -> 585 (Line 172)
OBJ REACHES 251 (Line 64) -> 585 (Line 172)
HANDLE NODE 601 (Line 173): AST_BREAK, break;
HANDLE NODE 603 (Line 178): AST_IF, 
HANDLE NODE 604 (Line 178): AST_IF_ELEM sticky, 
HANDLE NODE 605 (Line 178): AST_PROP sticky, options.sticky
HANDLE NODE 606 (Line 178): AST_VAR options, 
606 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
Add prop name node options.sticky (1771->1969)
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.sticky
Add prop name node options.sticky (1786->1970)
605 handle result: obj_nodes=[], name=options.sticky, name_nodes=['1969', '1970']
BLOCK 609 STARTS
HANDLE NODE 610 (Line 178): AST_METHOD_CALL push, args.push(cmd.sticky)
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
610 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 615 (Line 178): AST_PROP sticky, cmd.sticky
HANDLE NODE 616 (Line 178): AST_VAR cmd, 
616 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.sticky
Add prop name node cmd.sticky (1657->1972)
615 handle result: obj_nodes=['1748', '1721', '1686'], name=cmd.sticky, name_nodes=['1722', '1749', '1687', '1972']
Running Python function <function array_push at 0x7f57c217f6a8>...
610: function returned_objs=[], used_objs=['1748', '1721', '1686']
OBJ REACHES 293 (Line 81) -> 610 (Line 178)
OBJ REACHES 251 (Line 64) -> 610 (Line 178)
OBJ REACHES 189 (Line 40) -> 610 (Line 178)
HANDLE NODE 619 (Line 181): AST_IF, 
HANDLE NODE 620 (Line 181): AST_IF_ELEM priority, 
HANDLE NODE 621 (Line 181): AST_PROP priority, options.priority
HANDLE NODE 622 (Line 181): AST_VAR options, 
622 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
Add prop name node options.priority (1771->1973)
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.priority
Add prop name node options.priority (1786->1974)
621 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
BLOCK 625 STARTS
HANDLE NODE 626 (Line 182): AST_ASSIGN priority, priority = options.priority + ''
HANDLE NODE 629 (Line 182): AST_BINARY_OP '', +
HANDLE NODE 630 (Line 182): AST_PROP priority, options.priority
HANDLE NODE 631 (Line 182): AST_VAR options, 
631 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
630 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
HANDLE NODE 634 (Line 182): string '', ''
634 handle result: obj_nodes=['1976'], value=''
HANDLE NODE 627 (Line 182): AST_VAR priority, 
Name node priority not found, create name node
627 handle result: obj_nodes=[], name=priority, name_nodes=['1979']
Assigning ['1977'] to 1979, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1976']
HANDLE NODE 635 (Line 183): AST_ASSIGN checkindexOf, checkindexOf = cmd.priority.range.indexOf(priority)
HANDLE NODE 638 (Line 183): AST_METHOD_CALL indexOf, cmd.priority.range.indexOf(priority)
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1688', '1725', '1754', '1669'], name=cmd.priority, name_nodes=['1738', '1767', '1711', '1676']
639 handle result: obj_nodes=['1692', '1758', '1729', '1673'], name=cmd.priority.range, name_nodes=['1766', '1737', '1710', '1675']
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1692->1980)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1758->1981)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1729->1982)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1673->1983)
638 handle result: obj_nodes=[], name=cmd.priority.range.indexOf, name_nodes=['1981', '1982', '1980', '1983']
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1688', '1725', '1754', '1669'], name=cmd.priority, name_nodes=['1738', '1767', '1711', '1676']
639 handle result: obj_nodes=['1692', '1758', '1729', '1673'], name=cmd.priority.range, name_nodes=['1766', '1737', '1710', '1675']
HANDLE NODE 647 (Line 183): AST_VAR priority, 
647 handle result: obj_nodes=['1977'], name=priority, name_nodes=['1979']
name node for arguments does not exist
FUNCTION 1984 cmd.priority.range.indexOf STARTS, SCOPE 1989, DECL OBJ 1990, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#0")]
callback functions = set()
name node for arguments does not exist
FUNCTION 1995 cmd.priority.range.indexOf STARTS, SCOPE 2000, DECL OBJ 2001, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#1")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2006 cmd.priority.range.indexOf STARTS, SCOPE 2011, DECL OBJ 2012, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#2")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2017 cmd.priority.range.indexOf STARTS, SCOPE 2022, DECL OBJ 2023, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#3")]
callback functions = set()
638: function returned_objs=[], used_objs=['1977']
HANDLE NODE 636 (Line 183): AST_VAR checkindexOf, 
Name node checkindexOf not found, create name node
636 handle result: obj_nodes=[], name=checkindexOf, name_nodes=['2052']
Right OBJ not found
Assigning ['1545'] to 2052, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1977']
OBJ REACHES 626 (Line 182) -> 635 (Line 183)
HANDLE NODE 649 (Line 184): AST_IF, 
HANDLE NODE 650 (Line 184): AST_IF_ELEM, 
HANDLE NODE 651 (Line 184): AST_UNARY_OP indexOf, ~cmd.priority.range.indexOf(priority)
BLOCK 663 STARTS
HANDLE NODE 664 (Line 185): AST_METHOD_CALL push, args.push(cmd.priority, options.priority)
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
664 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 669 (Line 185): AST_PROP priority, cmd.priority
HANDLE NODE 670 (Line 185): AST_VAR cmd, 
670 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
669 handle result: obj_nodes=['1688', '1725', '1754', '1669'], name=cmd.priority, name_nodes=['1738', '1767', '1711', '1676']
HANDLE NODE 673 (Line 185): AST_PROP priority, options.priority
HANDLE NODE 674 (Line 185): AST_VAR options, 
674 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
673 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
Running Python function <function array_push at 0x7f57c217f6a8>...
664: function returned_objs=[], used_objs=[]
HANDLE NODE 677 (Line 190): AST_IF, 
HANDLE NODE 678 (Line 190): AST_IF_ELEM, 
HANDLE NODE 679 (Line 190): AST_BINARY_OP name, &&
HANDLE NODE 680 (Line 190): AST_PROP name, options.name
HANDLE NODE 681 (Line 190): AST_VAR options, 
681 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
Add prop name node options.name (1771->2054)
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.name
Add prop name node options.name (1786->2055)
680 handle result: obj_nodes=[], name=options.name, name_nodes=['2055', '2054']
HANDLE NODE 684 (Line 190): AST_BINARY_OP "Darwin-Growl", ===
HANDLE NODE 685 (Line 190): AST_PROP type, cmd.type
HANDLE NODE 686 (Line 190): AST_VAR cmd, 
686 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
685 handle result: obj_nodes=['1715', '1742', '1680', '1659'], name=cmd.type, name_nodes=['1681', '1743', '1716', '1660']
HANDLE NODE 689 (Line 190): string "Darwin-Growl", "Darwin-Growl"
689 handle result: obj_nodes=['2056'], value="Darwin-Growl"
BLOCK 690 STARTS
HANDLE NODE 691 (Line 191): AST_METHOD_CALL push, args.push('--name', options.name)
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
691 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 696 (Line 191): string '--name', '--name'
696 handle result: obj_nodes=['2062'], value='--name'
HANDLE NODE 697 (Line 191): AST_PROP name, options.name
HANDLE NODE 698 (Line 191): AST_VAR options, 
698 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
697 handle result: obj_nodes=[], name=options.name, name_nodes=['2055', '2054']
Running Python function <function array_push at 0x7f57c217f6a8>...
691: function returned_objs=[], used_objs=[]
HANDLE NODE 701 (Line 194): AST_SWITCH type, 
HANDLE NODE 702 (Line 194): AST_PROP type, cmd.type
HANDLE NODE 703 (Line 194): AST_VAR cmd, 
703 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
702 handle result: obj_nodes=['1715', '1742', '1680', '1659'], name=cmd.type, name_nodes=['1681', '1743', '1716', '1660']
HANDLE NODE 706 (Line 194): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 708 (Line 195): string 'Darwin-Growl', 'Darwin-Growl'
708 handle result: obj_nodes=['2063'], value='Darwin-Growl'
BLOCK 709 STARTS
HANDLE NODE 710 (Line 196): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
710 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 715 (Line 196): AST_PROP msg, cmd.msg
HANDLE NODE 716 (Line 196): AST_VAR cmd, 
716 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
715 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1664', '1720', '1685', '1747']
Running Python function <function array_push at 0x7f57c217f6a8>...
710: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 710 (Line 196)
OBJ REACHES 251 (Line 64) -> 710 (Line 196)
OBJ REACHES 189 (Line 40) -> 710 (Line 196)
OBJ REACHES 293 (Line 81) -> 710 (Line 196)
HANDLE NODE 719 (Line 197): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
719 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 724 (Line 197): AST_CALL quote, quote(msg)
HANDLE NODE 725 (Line 197): AST_NAME quote, 
725 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 728 (Line 197): AST_VAR msg, 
728 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0")]
callback functions = set()
724: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7f57c217f6a8>...
719: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 719 (Line 197)
HANDLE NODE 730 (Line 198): AST_IF, 
HANDLE NODE 731 (Line 198): AST_IF_ELEM title, 
HANDLE NODE 732 (Line 198): AST_PROP title, options.title
HANDLE NODE 733 (Line 198): AST_VAR options, 
733 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
Add prop name node options.title (1771->2069)
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.title
Add prop name node options.title (1786->2070)
732 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 736 STARTS
HANDLE NODE 737 (Line 198): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
737 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 742 (Line 198): AST_CALL quote, quote(options.title)
HANDLE NODE 743 (Line 198): AST_NAME quote, 
743 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 746 (Line 198): AST_PROP title, options.title
HANDLE NODE 747 (Line 198): AST_VAR options, 
747 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
746 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0"), BranchTag("If730#0")]
callback functions = set()
742: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7f57c217f6a8>...
737: function returned_objs=[], used_objs=[]
HANDLE NODE 750 (Line 199): AST_BREAK, break;
HANDLE NODE 753 (Line 200): string 'Darwin-NotificationCenter', 'Darwin-NotificationCenter'
753 handle result: obj_nodes=['2077'], value='Darwin-NotificationCenter'
BLOCK 754 STARTS
HANDLE NODE 755 (Line 201): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
755 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 760 (Line 201): AST_PROP msg, cmd.msg
HANDLE NODE 761 (Line 201): AST_VAR cmd, 
761 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
760 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1664', '1720', '1685', '1747']
Running Python function <function array_push at 0x7f57c217f6a8>...
755: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 755 (Line 201)
OBJ REACHES 251 (Line 64) -> 755 (Line 201)
OBJ REACHES 189 (Line 40) -> 755 (Line 201)
OBJ REACHES 293 (Line 81) -> 755 (Line 201)
HANDLE NODE 764 (Line 202): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
764 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 769 (Line 202): AST_CALL quote, quote(msg)
HANDLE NODE 770 (Line 202): AST_NAME quote, 
770 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 773 (Line 202): AST_VAR msg, 
773 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1")]
callback functions = set()
769: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7f57c217f6a8>...
764: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 764 (Line 202)
HANDLE NODE 775 (Line 203): AST_IF, 
HANDLE NODE 776 (Line 203): AST_IF_ELEM title, 
HANDLE NODE 777 (Line 203): AST_PROP title, options.title
HANDLE NODE 778 (Line 203): AST_VAR options, 
778 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
777 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 781 STARTS
HANDLE NODE 782 (Line 204): AST_METHOD_CALL push, args.push(cmd.title)
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
782 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 787 (Line 204): AST_PROP title, cmd.title
HANDLE NODE 788 (Line 204): AST_VAR cmd, 
788 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1678->2084)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1713->2085)
787 handle result: obj_nodes=['1750', '1665'], name=cmd.title, name_nodes=['2085', '1751', '1666', '2084']
Running Python function <function array_push at 0x7f57c217f6a8>...
782: function returned_objs=[], used_objs=['1750', '1665']
OBJ REACHES 293 (Line 81) -> 782 (Line 204)
OBJ REACHES 158 (Line 28) -> 782 (Line 204)
HANDLE NODE 791 (Line 205): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
791 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 796 (Line 205): AST_CALL quote, quote(options.title)
HANDLE NODE 797 (Line 205): AST_NAME quote, 
797 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 800 (Line 205): AST_PROP title, options.title
HANDLE NODE 801 (Line 205): AST_VAR options, 
801 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
800 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If775#0")]
callback functions = set()
796: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7f57c217f6a8>...
791: function returned_objs=[], used_objs=[]
HANDLE NODE 804 (Line 207): AST_IF, 
HANDLE NODE 805 (Line 207): AST_IF_ELEM subtitle, 
HANDLE NODE 806 (Line 207): AST_PROP subtitle, options.subtitle
HANDLE NODE 807 (Line 207): AST_VAR options, 
807 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
Add prop name node options.subtitle (1771->2091)
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.subtitle
Add prop name node options.subtitle (1786->2092)
806 handle result: obj_nodes=[], name=options.subtitle, name_nodes=['2091', '2092']
BLOCK 810 STARTS
HANDLE NODE 811 (Line 208): AST_METHOD_CALL push, args.push(cmd.subtitle)
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
811 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 816 (Line 208): AST_PROP subtitle, cmd.subtitle
HANDLE NODE 817 (Line 208): AST_VAR cmd, 
817 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1740->2094)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1678->2095)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1713->2096)
816 handle result: obj_nodes=['1667'], name=cmd.subtitle, name_nodes=['2094', '1668', '2095', '2096']
Running Python function <function array_push at 0x7f57c217f6a8>...
811: function returned_objs=[], used_objs=['1667']
OBJ REACHES 158 (Line 28) -> 811 (Line 208)
HANDLE NODE 820 (Line 209): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
820 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 825 (Line 209): AST_CALL quote, quote(options.title)
HANDLE NODE 826 (Line 209): AST_NAME quote, 
826 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 829 (Line 209): AST_PROP title, options.title
HANDLE NODE 830 (Line 209): AST_VAR options, 
830 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
829 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If804#0")]
callback functions = set()
825: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7f57c217f6a8>...
820: function returned_objs=[], used_objs=[]
HANDLE NODE 833 (Line 211): AST_BREAK, break;
HANDLE NODE 836 (Line 212): string 'Darwin-Growl', 'Darwin-Growl'
836 handle result: obj_nodes=['2102'], value='Darwin-Growl'
BLOCK 837 STARTS
HANDLE NODE 838 (Line 213): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
838 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 843 (Line 213): AST_PROP msg, cmd.msg
HANDLE NODE 844 (Line 213): AST_VAR cmd, 
844 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
843 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1664', '1720', '1685', '1747']
Running Python function <function array_push at 0x7f57c217f6a8>...
838: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 838 (Line 213)
OBJ REACHES 251 (Line 64) -> 838 (Line 213)
OBJ REACHES 189 (Line 40) -> 838 (Line 213)
OBJ REACHES 293 (Line 81) -> 838 (Line 213)
HANDLE NODE 847 (Line 214): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
847 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 852 (Line 214): AST_CALL quote, quote(msg)
HANDLE NODE 853 (Line 214): AST_NAME quote, 
853 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 856 (Line 214): AST_VAR msg, 
856 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2")]
callback functions = set()
852: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7f57c217f6a8>...
847: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 847 (Line 214)
HANDLE NODE 858 (Line 215): AST_IF, 
HANDLE NODE 859 (Line 215): AST_IF_ELEM title, 
HANDLE NODE 860 (Line 215): AST_PROP title, options.title
HANDLE NODE 861 (Line 215): AST_VAR options, 
861 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
860 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 864 STARTS
HANDLE NODE 865 (Line 215): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
865 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 870 (Line 215): AST_CALL quote, quote(options.title)
HANDLE NODE 871 (Line 215): AST_NAME quote, 
871 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 874 (Line 215): AST_PROP title, options.title
HANDLE NODE 875 (Line 215): AST_VAR options, 
875 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
874 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2"), BranchTag("If858#0")]
callback functions = set()
870: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7f57c217f6a8>...
865: function returned_objs=[], used_objs=[]
HANDLE NODE 878 (Line 216): AST_BREAK, break;
HANDLE NODE 881 (Line 217): string 'Linux', 'Linux'
881 handle result: obj_nodes=['2114'], value='Linux'
BLOCK 882 STARTS
HANDLE NODE 883 (Line 218): AST_IF, 
HANDLE NODE 884 (Line 218): AST_IF_ELEM title, 
HANDLE NODE 885 (Line 218): AST_PROP title, options.title
HANDLE NODE 886 (Line 218): AST_VAR options, 
886 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
885 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 889 STARTS
HANDLE NODE 890 (Line 219): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
890 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 895 (Line 219): AST_CALL quote, quote(options.title)
HANDLE NODE 896 (Line 219): AST_NAME quote, 
896 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 899 (Line 219): AST_PROP title, options.title
HANDLE NODE 900 (Line 219): AST_VAR options, 
900 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
899 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
895: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7f57c217f6a8>...
890: function returned_objs=[], used_objs=[]
HANDLE NODE 903 (Line 220): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
903 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 908 (Line 220): AST_PROP msg, cmd.msg
HANDLE NODE 909 (Line 220): AST_VAR cmd, 
909 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
908 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1664', '1720', '1685', '1747']
Running Python function <function array_push at 0x7f57c217f6a8>...
903: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 903 (Line 220)
OBJ REACHES 251 (Line 64) -> 903 (Line 220)
OBJ REACHES 189 (Line 40) -> 903 (Line 220)
OBJ REACHES 293 (Line 81) -> 903 (Line 220)
HANDLE NODE 912 (Line 221): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
912 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 917 (Line 221): AST_CALL quote, quote(msg)
HANDLE NODE 918 (Line 221): AST_NAME quote, 
918 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 921 (Line 221): AST_VAR msg, 
921 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
917: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7f57c217f6a8>...
912: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 912 (Line 221)
HANDLE NODE 923 (Line 218): AST_IF_ELEM, 
HANDLE NODE 924 (Line 218): NULL, 
BLOCK 925 STARTS
HANDLE NODE 926 (Line 223): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
926 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 931 (Line 223): AST_CALL quote, quote(msg)
HANDLE NODE 932 (Line 223): AST_NAME quote, 
932 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 935 (Line 223): AST_VAR msg, 
935 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#1")]
callback functions = set()
931: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7f57c217f6a8>...
926: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 926 (Line 223)
HANDLE NODE 937 (Line 225): AST_BREAK, break;
HANDLE NODE 940 (Line 226): string 'Windows', 'Windows'
940 handle result: obj_nodes=['2132'], value='Windows'
BLOCK 941 STARTS
HANDLE NODE 942 (Line 227): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
942 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 947 (Line 227): AST_CALL quote, quote(msg)
HANDLE NODE 948 (Line 227): AST_NAME quote, 
948 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 951 (Line 227): AST_VAR msg, 
951 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4")]
callback functions = set()
947: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7f57c217f6a8>...
942: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 942 (Line 227)
HANDLE NODE 953 (Line 228): AST_IF, 
HANDLE NODE 954 (Line 228): AST_IF_ELEM title, 
HANDLE NODE 955 (Line 228): AST_PROP title, options.title
HANDLE NODE 956 (Line 228): AST_VAR options, 
956 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
955 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 959 STARTS
HANDLE NODE 960 (Line 228): AST_METHOD_CALL push, args.push(cmd.title + quote(options.title))
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
960 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 965 (Line 228): AST_BINARY_OP title, +
HANDLE NODE 966 (Line 228): AST_PROP title, cmd.title
HANDLE NODE 967 (Line 228): AST_VAR cmd, 
967 handle result: obj_nodes=['1657', '1740', '1678', '1713'], name=cmd, name_nodes=['1578']
966 handle result: obj_nodes=['1750', '1665'], name=cmd.title, name_nodes=['2085', '1751', '1666', '2084']
HANDLE NODE 970 (Line 228): AST_CALL quote, quote(options.title)
HANDLE NODE 971 (Line 228): AST_NAME quote, 
971 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 974 (Line 228): AST_PROP title, options.title
HANDLE NODE 975 (Line 228): AST_VAR options, 
975 handle result: obj_nodes=['1771', '1786'], name=options, name_nodes=['1779']
974 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4"), BranchTag("If953#0")]
callback functions = set()
970: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7f57c217f6a8>...
960: function returned_objs=[], used_objs=['1750', '2144', '1665']
OBJ REACHES 293 (Line 81) -> 960 (Line 228)
OBJ REACHES 158 (Line 28) -> 960 (Line 228)
HANDLE NODE 978 (Line 229): AST_BREAK, break;
HANDLE NODE 980 (Line 233): AST_CALL exec, exec(args.join(' '), fn)
HANDLE NODE 981 (Line 233): AST_NAME exec, 
981 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
add_blank_func func_name: exec
HANDLE NODE 984 (Line 233): AST_METHOD_CALL join, args.join(' ')
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.join
984 handle result: obj_nodes=['1193'], name=args.join, name_nodes=['1198']
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 989 (Line 233): string ' ', ' '
989 handle result: obj_nodes=['2157'], value=' '
Running Python function <function array_join at 0x7f57c217f7b8>...
984: function returned_objs=['2158'], used_objs=['1665', '1667', '1545', '1948', '1746', '1688', '1717', '1750', '1967', '1748', '1754', '2062', '1684', '1686', '1663', '1661', '1937', '1719', '1721', '1682', '1945', '1744', '2144', '1725', '1669']
HANDLE NODE 990 (Line 233): AST_VAR fn, 
990 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
name node for arguments does not exist
FUNCTION 2146 exec STARTS, SCOPE 2151, DECL OBJ 2152, this OBJ None, branches []
callback functions = {'1789', '1772'}
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches []
BLOCK 404 STARTS
FUNCTION 1809 fn STARTS, SCOPE 1814, DECL OBJ 1772, this OBJ None, branches []
Edge 980->1809 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
980: function returned_objs=[], used_objs=['1665', '1667', '1545', '1948', '1746', '1772', '1688', '1717', '1750', '1967', '1748', '1789', '1754', '2062', '1684', '1686', '1663', '1661', '2158', '1937', '1719', '1721', '1682', '1945', '1744', '2144', '1725', '1669']
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 574 (Line 169) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 585 (Line 172) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 391 (Line 148) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 691 (Line 191) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 536 (Line 164) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 552 (Line 167) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 960 (Line 228) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
995: function returned_objs=[], used_objs=[]
Add CFG edge 72 -> 1640
Add CFG edge 140 -> 1605
Add CFG edge 150 -> 62
Add INTER_FUNC_REACHES 150 -> 67
Add CFG edge 413 -> 398
Add CFG edge 413 -> 1811
Add CFG edge 413 -> 1299
Add CFG edge 455 -> 1856
Add CFG edge 455 -> 1836
Add CFG edge 481 -> 1889
Add CFG edge 497 -> 1912
Add CFG edge 536 -> 1141
Add CFG edge 552 -> 1141
Add CFG edge 574 -> 1141
Add CFG edge 585 -> 1141
Add CFG edge 585 -> 1952
Add CFG edge 610 -> 1141
Add CFG edge 635 -> 1986
Add CFG edge 635 -> 1997
Add CFG edge 635 -> 2008
Add CFG edge 635 -> 2019
Add CFG edge 664 -> 1141
Add CFG edge 691 -> 1141
Add CFG edge 710 -> 1141
Add CFG edge 719 -> 1141
Add CFG edge 719 -> 1952
Add CFG edge 737 -> 1141
Add CFG edge 737 -> 1952
Add CFG edge 755 -> 1141
Add CFG edge 764 -> 1141
Add CFG edge 764 -> 1952
Add CFG edge 782 -> 1141
Add CFG edge 791 -> 1141
Add CFG edge 791 -> 1952
Add CFG edge 811 -> 1141
Add CFG edge 820 -> 1141
Add CFG edge 820 -> 1952
Add CFG edge 838 -> 1141
Add CFG edge 847 -> 1141
Add CFG edge 847 -> 1952
Add CFG edge 865 -> 1141
Add CFG edge 865 -> 1952
Add CFG edge 890 -> 1141
Add CFG edge 890 -> 1952
Add CFG edge 903 -> 1141
Add CFG edge 912 -> 1141
Add CFG edge 912 -> 1952
Add CFG edge 926 -> 1141
Add CFG edge 926 -> 1952
Add CFG edge 942 -> 1141
Add CFG edge 942 -> 1952
Add CFG edge 960 -> 1141
Add CFG edge 960 -> 1952
Add CFG edge 980 -> 398
Add CFG edge 980 -> 1811
Add CFG edge 980 -> 1189
Add CFG edge 995 -> 360
Add INTER_FUNC_REACHES 995 -> 365
Add INTER_FUNC_REACHES 995 -> 369
Add INTER_FUNC_REACHES 995 -> 373
Finished Importing
Finished Importing
add_blank_func func_name: Object
add_blank_func func_name: Object
name node for Object does not exist
name node for Object does not exist
add_blank_func func_name: Function
add_blank_func func_name: Function
name node for Function does not exist
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: valueOf
add_blank_func func_name: String
add_blank_func func_name: String
name node for String does not exist
name node for String does not exist
add_blank_func func_name: Number
add_blank_func func_name: Number
name node for Number does not exist
name node for Number does not exist
add_blank_func func_name: Array
add_blank_func func_name: Array
name node for Array does not exist
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: filter
add_blank_func func_name: Boolean
add_blank_func func_name: Boolean
name node for Boolean does not exist
name node for Boolean does not exist
add_blank_func func_name: Symbol
add_blank_func func_name: Symbol
name node for Symbol does not exist
name node for Symbol does not exist
add_blank_func func_name: Error
add_blank_func func_name: Error
name node for Error does not exist
name node for Error does not exist
add_blank_func func_name: EvalError
add_blank_func func_name: EvalError
name node for EvalError does not exist
name node for EvalError does not exist
add_blank_func func_name: InternalError
add_blank_func func_name: InternalError
name node for InternalError does not exist
name node for InternalError does not exist
add_blank_func func_name: RangeError
add_blank_func func_name: RangeError
name node for RangeError does not exist
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
add_blank_func func_name: TypeError
name node for TypeError does not exist
name node for TypeError does not exist
add_blank_func func_name: URIError
add_blank_func func_name: URIError
name node for URIError does not exist
name node for URIError does not exist
add_blank_func func_name: parseInt
add_blank_func func_name: parseInt
name node for parseInt does not exist
name node for parseInt does not exist
add_blank_func func_name: parseFloat
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
add_blank_func func_name: escape
name node for escape does not exist
name node for escape does not exist
add_blank_func func_name: unescape
add_blank_func func_name: unescape
name node for unescape does not exist
name node for unescape does not exist
add_blank_func func_name: setTimeout
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
add_blank_func func_name: setInterval
name node for setInterval does not exist
name node for setInterval does not exist
add_blank_func func_name: clearInterval
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for clearInterval does not exist
name node for undefined does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for NaN does not exist
name node for true does not exist
name node for true does not exist
name node for false does not exist
name node for false does not exist
Internal objects
Internal objects
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
GENERATE OBJECT GRAPH: 1
REGISTER 21 to 1
HANDLE NODE 1 (Line 1): AST_TOPLEVEL, 
FILE ./tests/vul_demo.js BEGINS
name node for ./tests/vul_demo.js does not exist
name node for ./tests/vul_demo.js does not exist
name node for module does not exist
name node for module does not exist
name node for exports does not exist
name node for exports does not exist
name node for this does not exist
name node for this does not exist
name node for child_process does not exist
name node for child_process does not exist
name node for process does not exist
name node for process does not exist
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
name node for SayHelper does not exist
name node for SayHelper does not exist
Declared function obj nodes: ['679']
name node for mySayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper2 does not exist
name node for mySayHelper2 does not exist
FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 1): AST_ASSIGN child_process, child_process = require('child_process')
HANDLE NODE 8 (Line 1): AST_CALL require, require('child_process')
HANDLE NODE 9 (Line 1): AST_NAME require, 
Name node require not found, create name node
9 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module child_process at built-in not found!
8: function returned_objs=[], used_objs=[]
HANDLE NODE 6 (Line 1): AST_VAR child_process, 
6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Right side handling error at statement 5, child 8
HANDLE NODE 13 (Line 2): AST_ASSIGN process, process = require('process')
HANDLE NODE 16 (Line 2): AST_CALL require, require('process')
HANDLE NODE 17 (Line 2): AST_NAME require, 
17 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module process at built-in not found!
16: function returned_objs=[], used_objs=[]
HANDLE NODE 14 (Line 2): AST_VAR process, 
14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Right side handling error at statement 13, child 16
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
Declared function obj nodes: ['679']
HANDLE NODE 69 (Line 10): AST_ASSIGN mySayHelper, mySayHelper = new SayHelper()
HANDLE NODE 72 (Line 10): AST_NEW SayHelper, new SayHelper()
HANDLE NODE 73 (Line 10): AST_NAME SayHelper, 
73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
BLOCK 27 STARTS
HANDLE NODE 28 (Line 4): AST_ASSIGN "user", =
HANDLE NODE 33 (Line 4): string "user", "user"
33 handle result: obj_nodes=['695'], value="user"
HANDLE NODE 29 (Line 4): AST_PROP username, this.username
HANDLE NODE 30 (Line 4): AST_VAR this, 
30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.username (693->696)
29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['695'] to 696, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 34 (Line 5): AST_ASSIGN greet, =
HANDLE NODE 39 (Line 5): AST_CLOSURE {closure}, 
Declared function obj nodes: ['698']
HANDLE NODE 35 (Line 5): AST_PROP greet, this.greet
HANDLE NODE 36 (Line 5): AST_VAR this, 
36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.greet (693->703)
35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
Assigning ['698'] to 703, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
  assign used objs=[]
prototype obj node is ['681']
prototype obj node is ['681']
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
72: function returned_objs=['693'], used_objs=[]
HANDLE NODE 70 (Line 10): AST_VAR mySayHelper, 
70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 76 (Line 11): AST_ASSIGN mySayHelper2, mySayHelper2 = mySayHelper
HANDLE NODE 79 (Line 11): AST_VAR mySayHelper, 
79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
HANDLE NODE 77 (Line 11): AST_VAR mySayHelper2, 
77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 81 (Line 12): AST_IF, 
HANDLE NODE 82 (Line 12): AST_IF_ELEM 2, 
HANDLE NODE 83 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 83 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 84 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 85 (Line 12): AST_VAR process, 
85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Add prop name node process.argv (649->705)
84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
PARENT OBJ process.argv NOT DEFINED, creating object nodes
Add prop name node process.argv.2 (706->707)
83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
BLOCK 89 STARTS
HANDLE NODE 90 (Line 12): AST_ASSIGN username, =
HANDLE NODE 95 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 95 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 96 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 97 (Line 12): AST_VAR process, 
97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
HANDLE NODE 91 (Line 12): AST_PROP username, mySayHelper2.username
HANDLE NODE 92 (Line 12): AST_VAR mySayHelper2, 
92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
Right OBJ not found
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
  assign used objs=[]
HANDLE NODE 101 (Line 13): AST_METHOD_CALL greet, mySayHelper.greet()
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
name node for arguments does not exist
name node for arguments does not exist
name node for commandline does not exist
name node for commandline does not exist
FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
BLOCK 46 STARTS
HANDLE NODE 47 (Line 6): AST_ASSIGN commandline, commandline = 'echo Hello, ' + this.username + '!'
HANDLE NODE 50 (Line 6): AST_BINARY_OP '!', +
HANDLE NODE 51 (Line 6): AST_BINARY_OP 'echo Hello, ', +
HANDLE NODE 52 (Line 6): string 'echo Hello, ', 'echo Hello, '
52 handle result: obj_nodes=['715'], value='echo Hello, '
HANDLE NODE 53 (Line 6): AST_PROP username, this.username
HANDLE NODE 54 (Line 6): AST_VAR this, 
54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
Cannot find "direct" property, going into __proto__ ['117']...
  this.__proto__.username
Add prop name node this.username (672->716)
53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
HANDLE NODE 57 (Line 6): string '!', '!'
57 handle result: obj_nodes=['719'], value='!'
HANDLE NODE 48 (Line 6): AST_VAR commandline, 
48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=['715', '717', '719']
HANDLE NODE 58 (Line 7): AST_METHOD_CALL execSync, child_process.execSync(commandline)
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Add prop name node child_process.execSync (649->722)
58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
add_blank_func func_name: child_process.execSync
add_blank_func func_name: child_process.execSync
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
HANDLE NODE 63 (Line 7): AST_VAR commandline, 
63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
callback functions = set()
58: function returned_objs=[], used_objs=['720']
OBJ REACHES 47 (Line 6) -> 58 (Line 7)
101: function returned_objs=[], used_objs=[]
Add CFG edge 58 -> 725
Add CFG edge 69 -> 22
Add CFG edge 101 -> 40
Finished Importing
add_blank_func func_name: Object
name node for Object does not exist
add_blank_func func_name: Function
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: String
name node for String does not exist
add_blank_func func_name: Number
name node for Number does not exist
add_blank_func func_name: Array
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: Boolean
name node for Boolean does not exist
add_blank_func func_name: Symbol
name node for Symbol does not exist
add_blank_func func_name: Error
name node for Error does not exist
add_blank_func func_name: EvalError
name node for EvalError does not exist
add_blank_func func_name: InternalError
name node for InternalError does not exist
add_blank_func func_name: RangeError
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
name node for TypeError does not exist
add_blank_func func_name: URIError
name node for URIError does not exist
add_blank_func func_name: parseInt
name node for parseInt does not exist
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
name node for escape does not exist
add_blank_func func_name: unescape
name node for unescape does not exist
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
name node for setInterval does not exist
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for true does not exist
name node for false does not exist
Internal objects
undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
GENERATE OBJECT GRAPH: 1
REGISTER 61 to 1
REGISTER 359 to 1
HANDLE NODE 1 (Line 7): AST_TOPLEVEL, 
FILE ./tests/growl.js BEGINS
name node for ./tests/growl.js does not exist
name node for module does not exist
name node for exports does not exist
name node for this does not exist
name node for exec does not exist
name node for fs does not exist
name node for path does not exist
name node for exists does not exist
name node for os does not exist
name node for quote does not exist
name node for cmd does not exist
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
name node for which does not exist
Declared function obj nodes: ['1580']
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
name node for growl does not exist
Declared function obj nodes: ['1587']
FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 7): AST_ASSIGN exec, exec = require('child_process').exec
HANDLE NODE 8 (Line 7): AST_PROP exec, require('child_process').exec
HANDLE NODE 9 (Line 7): AST_CALL require, require('child_process')
HANDLE NODE 10 (Line 7): AST_NAME require, 
Name node require not found, create name node
10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module child_process at built-in not found!
9: function returned_objs=[], used_objs=[]
PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
name node for require('child_process') does not exist
Add prop name node require('child_process').exec (1596->1597)
8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
HANDLE NODE 6 (Line 7): AST_VAR exec, 
6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
Right OBJ not found
Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 15 (Line 8): AST_ASSIGN fs, fs = require('fs')
HANDLE NODE 18 (Line 8): AST_CALL require, require('fs')
HANDLE NODE 19 (Line 8): AST_NAME require, 
19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module fs at built-in not found!
18: function returned_objs=[], used_objs=[]
HANDLE NODE 16 (Line 8): AST_VAR fs, 
16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Right side handling error at statement 15, child 18
HANDLE NODE 23 (Line 9): AST_ASSIGN path, path = require('path')
HANDLE NODE 26 (Line 9): AST_CALL require, require('path')
HANDLE NODE 27 (Line 9): AST_NAME require, 
27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module path at built-in not found!
26: function returned_objs=[], used_objs=[]
HANDLE NODE 24 (Line 9): AST_VAR path, 
24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Right side handling error at statement 23, child 26
HANDLE NODE 31 (Line 10): AST_ASSIGN exists, exists = fs.existsSync || path.existsSync
HANDLE NODE 34 (Line 10): AST_BINARY_OP existsSync, ||
HANDLE NODE 35 (Line 10): AST_PROP existsSync, fs.existsSync
HANDLE NODE 36 (Line 10): AST_VAR fs, 
36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Add prop name node fs.existsSync (1545->1598)
35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
HANDLE NODE 39 (Line 10): AST_PROP existsSync, path.existsSync
HANDLE NODE 40 (Line 10): AST_VAR path, 
40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
HANDLE NODE 32 (Line 10): AST_VAR exists, 
32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
Right side handling error at statement 31, child 34
HANDLE NODE 43 (Line 11): AST_ASSIGN os, os = require('os')
HANDLE NODE 46 (Line 11): AST_CALL require, require('os')
HANDLE NODE 47 (Line 11): AST_NAME require, 
47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module os at built-in not found!
46: function returned_objs=[], used_objs=[]
HANDLE NODE 44 (Line 11): AST_VAR os, 
44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Right side handling error at statement 43, child 46
HANDLE NODE 51 (Line 12): AST_ASSIGN quote, quote = JSON.stringify
HANDLE NODE 54 (Line 12): AST_PROP stringify, JSON.stringify
HANDLE NODE 55 (Line 12): AST_VAR JSON, 
Name node JSON not found, create name node
55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
PARENT OBJ JSON NOT DEFINED, creating object nodes
Add prop name node JSON.stringify (1600->1601)
54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
HANDLE NODE 52 (Line 12): AST_VAR quote, 
52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
Right OBJ not found
Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 58 (Line 13): AST_ASSIGN cmd, cmd
HANDLE NODE 59 (Line 13): AST_VAR cmd, 
59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
Declared function obj nodes: ['1580']
HANDLE NODE 140 (Line 25): AST_SWITCH type, 
HANDLE NODE 141 (Line 25): AST_METHOD_CALL type, os.type()
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Add prop name node os.type (1545->1602)
141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
add_blank_func func_name: os.type
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
name node for arguments does not exist
FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
callback functions = set()
141: function returned_objs=[], used_objs=[]
HANDLE NODE 146 (Line 25): AST_SWITCH_LIST 'Darwin', 
HANDLE NODE 148 (Line 26): string 'Darwin', 'Darwin'
148 handle result: obj_nodes=['1620'], value='Darwin'
BLOCK 149 STARTS
HANDLE NODE 150 (Line 27): AST_IF, 
HANDLE NODE 151 (Line 27): AST_IF_ELEM, 
HANDLE NODE 152 (Line 27): AST_CALL which, which('terminal-notifier')
HANDLE NODE 153 (Line 27): AST_NAME which, 
153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
HANDLE NODE 156 (Line 27): string 'terminal-notifier', 'terminal-notifier'
156 handle result: obj_nodes=['1621'], value='terminal-notifier'
name node for arguments does not exist
add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
name node for name does not exist
name node for paths does not exist
name node for loc does not exist
FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
BLOCK 71 STARTS
HANDLE NODE 72 (Line 16): AST_ASSIGN paths, paths = process.env.PATH.split(':')
HANDLE NODE 75 (Line 16): AST_METHOD_CALL split, process.env.PATH.split(':')
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
Name node process not found, create name node
78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
PARENT OBJ process NOT DEFINED, creating object nodes
Add prop name node process.env (1632->1633)
77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
PARENT OBJ process.env NOT DEFINED, creating object nodes
Add prop name node process.env.PATH (1634->1635)
76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
Add prop name node process.env.PATH.split (1636->1637)
75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
add_blank_func func_name: process.env.PATH.split
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
HANDLE NODE 84 (Line 16): string ':', ':'
84 handle result: obj_nodes=['1649'], value=':'
name node for arguments does not exist
FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
callback functions = set()
75: function returned_objs=[], used_objs=['1649']
HANDLE NODE 73 (Line 16): AST_VAR paths, 
73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
Right OBJ not found
Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=['1649']
HANDLE NODE 85 (Line 17): AST_ASSIGN loc, loc
HANDLE NODE 86 (Line 17): AST_VAR loc, 
86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
HANDLE NODE 88 (Line 19): AST_FOR, 
152: function returned_objs=[], used_objs=[]
BLOCK 157 STARTS
HANDLE NODE 158 (Line 28): AST_ASSIGN cmd, =
HANDLE NODE 161 (Line 28): AST_ARRAY "Darwin-NotificationCenter", 
HANDLE NODE 162 (Line 29): AST_ARRAY_ELEM "Darwin-NotificationCenter", 
HANDLE NODE 163 (Line 29): string "Darwin-NotificationCenter", "Darwin-NotificationCenter"
163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
HANDLE NODE 165 (Line 30): AST_ARRAY_ELEM "terminal-notifier", 
HANDLE NODE 166 (Line 30): string "terminal-notifier", "terminal-notifier"
166 handle result: obj_nodes=['1661'], value="terminal-notifier"
HANDLE NODE 168 (Line 31): AST_ARRAY_ELEM '-message', 
HANDLE NODE 169 (Line 31): string '-message', '-message'
169 handle result: obj_nodes=['1663'], value='-message'
HANDLE NODE 171 (Line 32): AST_ARRAY_ELEM '-title', 
HANDLE NODE 172 (Line 32): string '-title', '-title'
172 handle result: obj_nodes=['1665'], value='-title'
HANDLE NODE 174 (Line 33): AST_ARRAY_ELEM '-subtitle', 
HANDLE NODE 175 (Line 33): string '-subtitle', '-subtitle'
175 handle result: obj_nodes=['1667'], value='-subtitle'
HANDLE NODE 177 (Line 34): AST_ARRAY_ELEM priority, 
HANDLE NODE 178 (Line 34): AST_ARRAY '-execute', 
HANDLE NODE 179 (Line 35): AST_ARRAY_ELEM '-execute', 
HANDLE NODE 180 (Line 35): string '-execute', '-execute'
180 handle result: obj_nodes=['1671'], value='-execute'
HANDLE NODE 182 (Line 36): AST_ARRAY_ELEM range, 
HANDLE NODE 183 (Line 36): AST_ARRAY, []
HANDLE NODE 159 (Line 28): AST_VAR cmd, 
159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
  assign used objs=[]
HANDLE NODE 186 (Line 27): AST_IF_ELEM, 
HANDLE NODE 187 (Line 27): NULL, 
BLOCK 188 STARTS
HANDLE NODE 189 (Line 40): AST_ASSIGN cmd, =
HANDLE NODE 192 (Line 40): AST_ARRAY "Darwin-Growl", 
HANDLE NODE 193 (Line 41): AST_ARRAY_ELEM "Darwin-Growl", 
HANDLE NODE 194 (Line 41): string "Darwin-Growl", "Darwin-Growl"
194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
HANDLE NODE 196 (Line 42): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 197 (Line 42): string "growlnotify", "growlnotify"
197 handle result: obj_nodes=['1682'], value="growlnotify"
HANDLE NODE 199 (Line 43): AST_ARRAY_ELEM '-m', 
HANDLE NODE 200 (Line 43): string '-m', '-m'
200 handle result: obj_nodes=['1684'], value='-m'
HANDLE NODE 202 (Line 44): AST_ARRAY_ELEM '--sticky', 
HANDLE NODE 203 (Line 44): string '--sticky', '--sticky'
203 handle result: obj_nodes=['1686'], value='--sticky'
HANDLE NODE 205 (Line 45): AST_ARRAY_ELEM priority, 
HANDLE NODE 206 (Line 45): AST_ARRAY '--priority', 
HANDLE NODE 207 (Line 46): AST_ARRAY_ELEM '--priority', 
HANDLE NODE 208 (Line 46): string '--priority', '--priority'
208 handle result: obj_nodes=['1690'], value='--priority'
HANDLE NODE 210 (Line 47): AST_ARRAY_ELEM range, 
HANDLE NODE 211 (Line 47): AST_ARRAY 0, 
HANDLE NODE 212 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 213 (Line 48): AST_UNARY_OP 2, -2
HANDLE NODE 216 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 217 (Line 49): AST_UNARY_OP 1, -1
HANDLE NODE 220 (Line 47): AST_ARRAY_ELEM 0, 
HANDLE NODE 221 (Line 50): integer 0, 0
221 handle result: obj_nodes=['1694'], value=0
HANDLE NODE 223 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 224 (Line 51): integer 1, 1
224 handle result: obj_nodes=['1696'], value=1
HANDLE NODE 226 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 227 (Line 52): integer 2, 2
227 handle result: obj_nodes=['1698'], value=2
HANDLE NODE 229 (Line 47): AST_ARRAY_ELEM "Very Low", 
HANDLE NODE 230 (Line 53): string "Very Low", "Very Low"
230 handle result: obj_nodes=['1700'], value="Very Low"
HANDLE NODE 232 (Line 47): AST_ARRAY_ELEM "Moderate", 
HANDLE NODE 233 (Line 54): string "Moderate", "Moderate"
233 handle result: obj_nodes=['1702'], value="Moderate"
HANDLE NODE 235 (Line 47): AST_ARRAY_ELEM "Normal", 
HANDLE NODE 236 (Line 55): string "Normal", "Normal"
236 handle result: obj_nodes=['1704'], value="Normal"
HANDLE NODE 238 (Line 47): AST_ARRAY_ELEM "High", 
HANDLE NODE 239 (Line 56): string "High", "High"
239 handle result: obj_nodes=['1706'], value="High"
HANDLE NODE 241 (Line 47): AST_ARRAY_ELEM "Emergency", 
HANDLE NODE 242 (Line 57): string "Emergency", "Emergency"
242 handle result: obj_nodes=['1708'], value="Emergency"
HANDLE NODE 190 (Line 40): AST_VAR cmd, 
190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
  assign used objs=[]
HANDLE NODE 246 (Line 62): AST_BREAK, break;
HANDLE NODE 249 (Line 63): string 'Linux', 'Linux'
249 handle result: obj_nodes=['1712'], value='Linux'
BLOCK 250 STARTS
HANDLE NODE 251 (Line 64): AST_ASSIGN cmd, =
HANDLE NODE 254 (Line 64): AST_ARRAY "Linux", 
HANDLE NODE 255 (Line 65): AST_ARRAY_ELEM "Linux", 
HANDLE NODE 256 (Line 65): string "Linux", "Linux"
256 handle result: obj_nodes=['1715'], value="Linux"
HANDLE NODE 258 (Line 66): AST_ARRAY_ELEM "notify-send", 
HANDLE NODE 259 (Line 66): string "notify-send", "notify-send"
259 handle result: obj_nodes=['1717'], value="notify-send"
HANDLE NODE 261 (Line 67): AST_ARRAY_ELEM '', 
HANDLE NODE 262 (Line 67): string '', ''
262 handle result: obj_nodes=['1719'], value=''
HANDLE NODE 264 (Line 68): AST_ARRAY_ELEM '-t 0', 
HANDLE NODE 265 (Line 68): string '-t 0', '-t 0'
265 handle result: obj_nodes=['1721'], value='-t 0'
HANDLE NODE 267 (Line 69): AST_ARRAY_ELEM '-i', 
HANDLE NODE 268 (Line 69): string '-i', '-i'
268 handle result: obj_nodes=['1723'], value='-i'
HANDLE NODE 270 (Line 70): AST_ARRAY_ELEM priority, 
HANDLE NODE 271 (Line 70): AST_ARRAY '-u', 
HANDLE NODE 272 (Line 71): AST_ARRAY_ELEM '-u', 
HANDLE NODE 273 (Line 71): string '-u', '-u'
273 handle result: obj_nodes=['1727'], value='-u'
HANDLE NODE 275 (Line 72): AST_ARRAY_ELEM range, 
HANDLE NODE 276 (Line 72): AST_ARRAY "low", [            "low"          , "normal"          , "critical"        ]
HANDLE NODE 277 (Line 72): AST_ARRAY_ELEM "low", 
HANDLE NODE 278 (Line 73): string "low", "low"
278 handle result: obj_nodes=['1731'], value="low"
HANDLE NODE 280 (Line 72): AST_ARRAY_ELEM "normal", 
HANDLE NODE 281 (Line 74): string "normal", "normal"
281 handle result: obj_nodes=['1733'], value="normal"
HANDLE NODE 283 (Line 72): AST_ARRAY_ELEM "critical", 
HANDLE NODE 284 (Line 75): string "critical", "critical"
284 handle result: obj_nodes=['1735'], value="critical"
HANDLE NODE 252 (Line 64): AST_VAR cmd, 
252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
  assign used objs=[]
HANDLE NODE 288 (Line 79): AST_BREAK, break;
HANDLE NODE 291 (Line 80): string 'Windows_NT', 'Windows_NT'
291 handle result: obj_nodes=['1739'], value='Windows_NT'
BLOCK 292 STARTS
HANDLE NODE 293 (Line 81): AST_ASSIGN cmd, =
HANDLE NODE 296 (Line 81): AST_ARRAY "Windows", 
HANDLE NODE 297 (Line 82): AST_ARRAY_ELEM "Windows", 
HANDLE NODE 298 (Line 82): string "Windows", "Windows"
298 handle result: obj_nodes=['1742'], value="Windows"
HANDLE NODE 300 (Line 83): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 301 (Line 83): string "growlnotify", "growlnotify"
301 handle result: obj_nodes=['1744'], value="growlnotify"
HANDLE NODE 303 (Line 84): AST_ARRAY_ELEM '', 
HANDLE NODE 304 (Line 84): string '', ''
304 handle result: obj_nodes=['1746'], value=''
HANDLE NODE 306 (Line 85): AST_ARRAY_ELEM '/s:true', 
HANDLE NODE 307 (Line 85): string '/s:true', '/s:true'
307 handle result: obj_nodes=['1748'], value='/s:true'
HANDLE NODE 309 (Line 86): AST_ARRAY_ELEM '/t:', 
HANDLE NODE 310 (Line 86): string '/t:', '/t:'
310 handle result: obj_nodes=['1750'], value='/t:'
HANDLE NODE 312 (Line 87): AST_ARRAY_ELEM '/i:', 
HANDLE NODE 313 (Line 87): string '/i:', '/i:'
313 handle result: obj_nodes=['1752'], value='/i:'
HANDLE NODE 315 (Line 88): AST_ARRAY_ELEM priority, 
HANDLE NODE 316 (Line 88): AST_ARRAY '/p:', 
HANDLE NODE 317 (Line 89): AST_ARRAY_ELEM '/p:', 
HANDLE NODE 318 (Line 89): string '/p:', '/p:'
318 handle result: obj_nodes=['1756'], value='/p:'
HANDLE NODE 320 (Line 90): AST_ARRAY_ELEM range, 
HANDLE NODE 321 (Line 90): AST_ARRAY 0, [              -2            , -1            , 0            , 1            , 2          ]
HANDLE NODE 322 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 323 (Line 91): AST_UNARY_OP 2, -2
HANDLE NODE 326 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 327 (Line 92): AST_UNARY_OP 1, -1
HANDLE NODE 330 (Line 90): AST_ARRAY_ELEM 0, 
HANDLE NODE 331 (Line 93): integer 0, 0
331 handle result: obj_nodes=['1760'], value=0
HANDLE NODE 333 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 334 (Line 94): integer 1, 1
334 handle result: obj_nodes=['1762'], value=1
HANDLE NODE 336 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 337 (Line 95): integer 2, 2
337 handle result: obj_nodes=['1764'], value=2
HANDLE NODE 294 (Line 81): AST_VAR cmd, 
294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
  assign used objs=[]
HANDLE NODE 341 (Line 99): AST_BREAK, break;
HANDLE NODE 343 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 346 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 351 (Line 106): AST_VAR growl, 
351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 347 (Line 106): AST_PROP exports, module.exports
HANDLE NODE 348 (Line 106): AST_VAR module, 
348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 344 (Line 106): AST_VAR exports, 
344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 353 (Line 112): AST_ASSIGN '1.4.1', =
HANDLE NODE 358 (Line 112): string '1.4.1', '1.4.1'
358 handle result: obj_nodes=['1768'], value='1.4.1'
HANDLE NODE 354 (Line 112): AST_PROP version, exports.version
HANDLE NODE 355 (Line 112): AST_VAR exports, 
355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
Cannot find "direct" property, going into __proto__ ['1024']...
  exports.__proto__.version
Add prop name node exports.version (1587->1769)
354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
Assigning ['1768'] to 1769, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
Declared function obj nodes: ['1587']
HANDLE NODE 994 (Line 234): NULL, ;
HANDLE NODE 995 (Line 236): AST_CALL growl, growl("test", "", "")
HANDLE NODE 996 (Line 236): AST_NAME growl, 
996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 999 (Line 236): string "test", "test"
999 handle result: obj_nodes=['1770'], value="test"
HANDLE NODE 1000 (Line 236): string "", ""
1000 handle result: obj_nodes=['1771'], value=""
HANDLE NODE 1001 (Line 236): string "", ""
1001 handle result: obj_nodes=['1772'], value=""
name node for arguments does not exist
add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
name node for msg does not exist
add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
name node for options does not exist
add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
name node for fn does not exist
name node for image does not exist
name node for args does not exist
FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
BLOCK 377 STARTS
HANDLE NODE 378 (Line 145): AST_ASSIGN image, image
HANDLE NODE 379 (Line 145): AST_VAR image, 
379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
HANDLE NODE 381 (Line 146): AST_ASSIGN args, args
HANDLE NODE 382 (Line 146): AST_VAR args, 
382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
HANDLE NODE 384 (Line 147): AST_ASSIGN options, options = options || {}
HANDLE NODE 387 (Line 147): AST_BINARY_OP options, ||
HANDLE NODE 388 (Line 147): AST_VAR options, 
388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
HANDLE NODE 390 (Line 147): AST_ARRAY, 
HANDLE NODE 385 (Line 147): AST_VAR options, 
385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
Assigning ['1786', '1771'] to 1779, pre_objs=['1771'], branches=[]
  Remove 1771
  assign used objs=[]
HANDLE NODE 391 (Line 148): AST_ASSIGN fn, fn = fn || function(){}
HANDLE NODE 394 (Line 148): AST_BINARY_OP fn, ||
HANDLE NODE 395 (Line 148): AST_VAR fn, 
395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
HANDLE NODE 397 (Line 148): AST_CLOSURE {closure}, 
Declared function obj nodes: ['1789']
HANDLE NODE 392 (Line 148): AST_VAR fn, 
392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
Assigning ['1789', '1772'] to 1781, pre_objs=['1772'], branches=[]
  Remove 1772
  assign used objs=[]
HANDLE NODE 407 (Line 151): AST_IF, 
HANDLE NODE 408 (Line 151): AST_IF_ELEM, 
HANDLE NODE 409 (Line 151): AST_UNARY_OP cmd, !cmd
BLOCK 412 STARTS
HANDLE NODE 413 (Line 151): AST_RETURN, return fn(new Error('growl not supported on this platform'));
HANDLE NODE 414 (Line 151): AST_CALL fn, fn(new Error('growl not supported on this platform'))
HANDLE NODE 415 (Line 151): AST_NAME fn, 
415 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
HANDLE NODE 418 (Line 151): AST_NEW Error, new Error('growl not supported on this platform')
HANDLE NODE 419 (Line 151): AST_NAME Error, 
419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
HANDLE NODE 422 (Line 151): string 'growl not supported on this platform', 'growl not supported on this platform'
422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
name node for arguments does not exist
FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
prototype obj node is ['1305']
callback functions = set()
Edge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
418: function returned_objs=['1800'], used_objs=['1795']
name node for arguments does not exist
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#0")]
BLOCK 404 STARTS
add_blank_func func_name: fn
name node for arguments does not exist
FUNCTION 1809 fn STARTS, SCOPE 1814, DECL OBJ 1772, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#1")]
callback functions = set()
414: function returned_objs=[], used_objs=['1795', '1800']
HANDLE NODE 423 (Line 152): AST_ASSIGN args, =
HANDLE NODE 426 (Line 152): AST_ARRAY, [cmd.pkg]
HANDLE NODE 427 (Line 152): AST_ARRAY_ELEM pkg, 
HANDLE NODE 428 (Line 152): AST_PROP pkg, cmd.pkg
HANDLE NODE 429 (Line 152): AST_VAR cmd, 
429 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
428 handle result: obj_nodes=['1744', '1682', '1717', '1661'], name=cmd.pkg, name_nodes=['1683', '1718', '1662', '1745']
HANDLE NODE 424 (Line 152): AST_VAR args, 
424 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
Assigning ['1825'] to 1784, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 433 (Line 155): AST_IF, 
HANDLE NODE 434 (Line 155): AST_IF_ELEM, 
HANDLE NODE 435 (Line 155): AST_ASSIGN image, =
HANDLE NODE 438 (Line 155): AST_PROP image, options.image
HANDLE NODE 439 (Line 155): AST_VAR options, 
439 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.image
Add prop name node options.image (1786->1828)
Add prop name node options.image (1771->1829)
438 handle result: obj_nodes=[], name=options.image, name_nodes=['1829', '1828']
HANDLE NODE 436 (Line 155): AST_VAR image, 
436 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Right OBJ not found
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
BLOCK 442 STARTS
HANDLE NODE 443 (Line 156): AST_SWITCH type, 
HANDLE NODE 444 (Line 156): AST_PROP type, cmd.type
HANDLE NODE 445 (Line 156): AST_VAR cmd, 
445 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
444 handle result: obj_nodes=['1742', '1680', '1659', '1715'], name=cmd.type, name_nodes=['1743', '1660', '1716', '1681']
HANDLE NODE 448 (Line 156): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 450 (Line 157): string 'Darwin-Growl', 'Darwin-Growl'
450 handle result: obj_nodes=['1831'], value='Darwin-Growl'
BLOCK 451 STARTS
HANDLE NODE 452 (Line 158): AST_ASSIGN flag, flag
HANDLE NODE 453 (Line 158): AST_VAR flag, 
Name node flag not found, create name node
453 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 455 (Line 158): AST_ASSIGN ext, ext = path.extname(image).substr(1)
HANDLE NODE 458 (Line 158): AST_METHOD_CALL substr, path.extname(image).substr(1)
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Add prop name node path.extname (1545->1833)
459 handle result: obj_nodes=[], name=path.extname, name_nodes=['1833']
add_blank_func func_name: path.extname
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
459: function returned_objs=[], used_objs=['1545']
PARENT OBJ path.extname(image) NOT DEFINED, creating object nodes
name node for path.extname(image) does not exist
Add prop name node path.extname(image).substr (1852->1853)
458 handle result: obj_nodes=[], name=path.extname(image).substr, name_nodes=['1853']
add_blank_func func_name: path.extname(image).substr
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
459 handle result: obj_nodes=['1840'], name=path.extname, name_nodes=['1833']
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
Edge 459->1834 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
459: function returned_objs=[], used_objs=['1545']
HANDLE NODE 468 (Line 158): integer 1, 1
468 handle result: obj_nodes=['1870'], value=1
name node for arguments does not exist
FUNCTION 1854 path.extname(image).substr STARTS, SCOPE 1859, DECL OBJ 1860, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
458: function returned_objs=[], used_objs=['1870']
HANDLE NODE 456 (Line 158): AST_VAR ext, 
Name node ext not found, create name node
456 handle result: obj_nodes=[], name=ext, name_nodes=['1877']
Right OBJ not found
Assigning ['1545'] to 1877, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=['1870']
HANDLE NODE 469 (Line 159): AST_ASSIGN flag, =
HANDLE NODE 472 (Line 159): AST_BINARY_OP flag, ||
HANDLE NODE 473 (Line 159): AST_VAR flag, 
473 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 475 (Line 159): AST_BINARY_OP 'iconpath', &&
HANDLE NODE 476 (Line 159): AST_BINARY_OP 'icns', ==
HANDLE NODE 477 (Line 159): AST_VAR ext, 
477 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 479 (Line 159): string 'icns', 'icns'
479 handle result: obj_nodes=['1878'], value='icns'
HANDLE NODE 480 (Line 159): string 'iconpath', 'iconpath'
480 handle result: obj_nodes=['1881'], value='iconpath'
HANDLE NODE 470 (Line 159): AST_VAR flag, 
470 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
Assigning ['1882'] to 1832, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 481 (Line 160): AST_ASSIGN flag, =
HANDLE NODE 484 (Line 160): AST_BINARY_OP flag, ||
HANDLE NODE 485 (Line 160): AST_VAR flag, 
485 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
HANDLE NODE 487 (Line 160): AST_BINARY_OP 'appIcon', &&
HANDLE NODE 488 (Line 160): AST_METHOD_CALL test, /^[A-Z]/.test(image)
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
PARENT OBJ /^[A-Z]/ NOT DEFINED, creating object nodes
name node for /^[A-Z]/ does not exist
Add prop name node /^[A-Z]/.test (1885->1886)
488 handle result: obj_nodes=[], name=/^[A-Z]/.test, name_nodes=['1886']
add_blank_func func_name: /^[A-Z]/.test
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
HANDLE NODE 494 (Line 160): AST_VAR image, 
494 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1887 /^[A-Z]/.test STARTS, SCOPE 1892, DECL OBJ 1893, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
488: function returned_objs=[], used_objs=['1545']
HANDLE NODE 496 (Line 160): string 'appIcon', 'appIcon'
496 handle result: obj_nodes=['1904'], value='appIcon'
HANDLE NODE 482 (Line 160): AST_VAR flag, 
482 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
Assigning ['1882', '1905'] to 1832, pre_objs=['1882'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 497 (Line 161): AST_ASSIGN flag, =
HANDLE NODE 500 (Line 161): AST_BINARY_OP flag, ||
HANDLE NODE 501 (Line 161): AST_VAR flag, 
501 handle result: obj_nodes=['1882', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 503 (Line 161): AST_BINARY_OP 'image', &&
HANDLE NODE 504 (Line 161): AST_METHOD_CALL test, /^png|gif|jpe?g$/.test(ext)
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
PARENT OBJ /^png|gif|jpe?g$/ NOT DEFINED, creating object nodes
name node for /^png|gif|jpe?g$/ does not exist
Add prop name node /^png|gif|jpe?g$/.test (1908->1909)
504 handle result: obj_nodes=[], name=/^png|gif|jpe?g$/.test, name_nodes=['1909']
add_blank_func func_name: /^png|gif|jpe?g$/.test
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
HANDLE NODE 510 (Line 161): AST_VAR ext, 
510 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
name node for arguments does not exist
FUNCTION 1910 /^png|gif|jpe?g$/.test STARTS, SCOPE 1915, DECL OBJ 1916, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
504: function returned_objs=[], used_objs=['1545']
HANDLE NODE 512 (Line 161): string 'image', 'image'
512 handle result: obj_nodes=['1927'], value='image'
HANDLE NODE 498 (Line 161): AST_VAR flag, 
498 handle result: obj_nodes=['1882', '1905'], name=flag, name_nodes=['1832']
Assigning ['1928', '1882', '1905'] to 1832, pre_objs=['1882', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 513 (Line 162): AST_ASSIGN flag, =
HANDLE NODE 516 (Line 162): AST_BINARY_OP flag, ||
HANDLE NODE 517 (Line 162): AST_VAR flag, 
517 handle result: obj_nodes=['1928', '1882', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 519 (Line 162): AST_BINARY_OP 'icon', &&
HANDLE NODE 520 (Line 162): AST_BINARY_OP ext, &&
HANDLE NODE 521 (Line 162): AST_VAR ext, 
521 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 523 (Line 162): AST_ASSIGN image, =
HANDLE NODE 526 (Line 162): AST_VAR ext, 
526 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 524 (Line 162): AST_VAR image, 
524 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 528 (Line 162): string 'icon', 'icon'
528 handle result: obj_nodes=['1932'], value='icon'
HANDLE NODE 514 (Line 162): AST_VAR flag, 
514 handle result: obj_nodes=['1928', '1882', '1905'], name=flag, name_nodes=['1832']
Assigning ['1933', '1882', '1928', '1905'] to 1832, pre_objs=['1882', '1928', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 529 (Line 163): AST_ASSIGN flag, =
HANDLE NODE 532 (Line 163): AST_BINARY_OP 'icon', ||
HANDLE NODE 533 (Line 163): AST_VAR flag, 
533 handle result: obj_nodes=['1933', '1882', '1928', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 535 (Line 163): string 'icon', 'icon'
535 handle result: obj_nodes=['1935'], value='icon'
HANDLE NODE 530 (Line 163): AST_VAR flag, 
530 handle result: obj_nodes=['1933', '1882', '1928', '1905'], name=flag, name_nodes=['1832']
Assigning ['1935', '1882', '1933', '1928', '1905'] to 1832, pre_objs=['1933', '1928', '1882', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 536 (Line 164): AST_METHOD_CALL push, args.push('--' + flag, image)
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
536 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 541 (Line 164): AST_BINARY_OP '--', +
HANDLE NODE 542 (Line 164): string '--', '--'
542 handle result: obj_nodes=['1936'], value='--'
HANDLE NODE 543 (Line 164): AST_VAR flag, 
543 handle result: obj_nodes=['1935', '1882', '1933', '1928', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 545 (Line 164): AST_VAR image, 
545 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7fd0a2e41620>...
536: function returned_objs=[], used_objs=['1545']
HANDLE NODE 547 (Line 165): AST_BREAK, break;
HANDLE NODE 550 (Line 166): string 'Linux', 'Linux'
550 handle result: obj_nodes=['1939'], value='Linux'
BLOCK 551 STARTS
HANDLE NODE 552 (Line 167): AST_METHOD_CALL push, args.push(cmd.icon + " " + image)
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
552 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 557 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 558 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 559 (Line 167): AST_PROP icon, cmd.icon
HANDLE NODE 560 (Line 167): AST_VAR cmd, 
560 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1657->1940)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1678->1941)
559 handle result: obj_nodes=['1752', '1723'], name=cmd.icon, name_nodes=['1724', '1940', '1753', '1941']
HANDLE NODE 563 (Line 167): string " ", " "
563 handle result: obj_nodes=['1942'], value=" "
HANDLE NODE 564 (Line 167): AST_VAR image, 
564 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7fd0a2e41620>...
552: function returned_objs=[], used_objs=['1752', '1942', '1943', '1945', '1545', '1723']
OBJ REACHES 293 (Line 81) -> 552 (Line 167)
OBJ REACHES 251 (Line 64) -> 552 (Line 167)
HANDLE NODE 566 (Line 169): AST_IF, 
HANDLE NODE 567 (Line 169): AST_IF_ELEM, 
HANDLE NODE 568 (Line 169): AST_UNARY_OP sticky, !options.sticky
BLOCK 573 STARTS
HANDLE NODE 574 (Line 169): AST_METHOD_CALL push, args.push('--hint=int:transient:1')
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
574 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 579 (Line 169): string '--hint=int:transient:1', '--hint=int:transient:1'
579 handle result: obj_nodes=['1948'], value='--hint=int:transient:1'
Running Python function <function array_push at 0x7fd0a2e41620>...
574: function returned_objs=[], used_objs=['1948']
HANDLE NODE 580 (Line 170): AST_BREAK, break;
HANDLE NODE 583 (Line 171): string 'Windows', 'Windows'
583 handle result: obj_nodes=['1949'], value='Windows'
BLOCK 584 STARTS
HANDLE NODE 585 (Line 172): AST_METHOD_CALL push, args.push(cmd.icon + quote(image))
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
585 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 590 (Line 172): AST_BINARY_OP icon, +
HANDLE NODE 591 (Line 172): AST_PROP icon, cmd.icon
HANDLE NODE 592 (Line 172): AST_VAR cmd, 
592 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
591 handle result: obj_nodes=['1752', '1723'], name=cmd.icon, name_nodes=['1724', '1940', '1753', '1941']
HANDLE NODE 595 (Line 172): AST_CALL quote, quote(image)
HANDLE NODE 596 (Line 172): AST_NAME quote, 
596 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
add_blank_func func_name: quote
HANDLE NODE 599 (Line 172): AST_VAR image, 
599 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#2")]
callback functions = set()
595: function returned_objs=[], used_objs=['1545']
Running Python function <function array_push at 0x7fd0a2e41620>...
585: function returned_objs=[], used_objs=['1752', '1967', '1545', '1723']
OBJ REACHES 293 (Line 81) -> 585 (Line 172)
OBJ REACHES 251 (Line 64) -> 585 (Line 172)
HANDLE NODE 601 (Line 173): AST_BREAK, break;
HANDLE NODE 603 (Line 178): AST_IF, 
HANDLE NODE 604 (Line 178): AST_IF_ELEM sticky, 
HANDLE NODE 605 (Line 178): AST_PROP sticky, options.sticky
HANDLE NODE 606 (Line 178): AST_VAR options, 
606 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.sticky
Add prop name node options.sticky (1786->1969)
Add prop name node options.sticky (1771->1970)
605 handle result: obj_nodes=[], name=options.sticky, name_nodes=['1969', '1970']
BLOCK 609 STARTS
HANDLE NODE 610 (Line 178): AST_METHOD_CALL push, args.push(cmd.sticky)
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
610 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 615 (Line 178): AST_PROP sticky, cmd.sticky
HANDLE NODE 616 (Line 178): AST_VAR cmd, 
616 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.sticky
Add prop name node cmd.sticky (1657->1972)
615 handle result: obj_nodes=['1686', '1721', '1748'], name=cmd.sticky, name_nodes=['1687', '1972', '1749', '1722']
Running Python function <function array_push at 0x7fd0a2e41620>...
610: function returned_objs=[], used_objs=['1686', '1721', '1748']
OBJ REACHES 189 (Line 40) -> 610 (Line 178)
OBJ REACHES 251 (Line 64) -> 610 (Line 178)
OBJ REACHES 293 (Line 81) -> 610 (Line 178)
HANDLE NODE 619 (Line 181): AST_IF, 
HANDLE NODE 620 (Line 181): AST_IF_ELEM priority, 
HANDLE NODE 621 (Line 181): AST_PROP priority, options.priority
HANDLE NODE 622 (Line 181): AST_VAR options, 
622 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.priority
Add prop name node options.priority (1786->1973)
Add prop name node options.priority (1771->1974)
621 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
BLOCK 625 STARTS
HANDLE NODE 626 (Line 182): AST_ASSIGN priority, priority = options.priority + ''
HANDLE NODE 629 (Line 182): AST_BINARY_OP '', +
HANDLE NODE 630 (Line 182): AST_PROP priority, options.priority
HANDLE NODE 631 (Line 182): AST_VAR options, 
631 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
630 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
HANDLE NODE 634 (Line 182): string '', ''
634 handle result: obj_nodes=['1976'], value=''
HANDLE NODE 627 (Line 182): AST_VAR priority, 
Name node priority not found, create name node
627 handle result: obj_nodes=[], name=priority, name_nodes=['1979']
Assigning ['1977'] to 1979, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1976']
HANDLE NODE 635 (Line 183): AST_ASSIGN checkindexOf, checkindexOf = cmd.priority.range.indexOf(priority)
HANDLE NODE 638 (Line 183): AST_METHOD_CALL indexOf, cmd.priority.range.indexOf(priority)
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1754', '1688', '1669', '1725'], name=cmd.priority, name_nodes=['1676', '1767', '1711', '1738']
639 handle result: obj_nodes=['1692', '1729', '1758', '1673'], name=cmd.priority.range, name_nodes=['1710', '1675', '1737', '1766']
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1692->1980)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1729->1981)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1758->1982)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1673->1983)
638 handle result: obj_nodes=[], name=cmd.priority.range.indexOf, name_nodes=['1983', '1981', '1980', '1982']
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1754', '1688', '1669', '1725'], name=cmd.priority, name_nodes=['1676', '1767', '1711', '1738']
639 handle result: obj_nodes=['1692', '1729', '1758', '1673'], name=cmd.priority.range, name_nodes=['1710', '1675', '1737', '1766']
HANDLE NODE 647 (Line 183): AST_VAR priority, 
647 handle result: obj_nodes=['1977'], name=priority, name_nodes=['1979']
name node for arguments does not exist
FUNCTION 1984 cmd.priority.range.indexOf STARTS, SCOPE 1989, DECL OBJ 1990, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#0")]
callback functions = set()
name node for arguments does not exist
FUNCTION 1995 cmd.priority.range.indexOf STARTS, SCOPE 2000, DECL OBJ 2001, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#1")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2006 cmd.priority.range.indexOf STARTS, SCOPE 2011, DECL OBJ 2012, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#2")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2017 cmd.priority.range.indexOf STARTS, SCOPE 2022, DECL OBJ 2023, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#3")]
callback functions = set()
638: function returned_objs=[], used_objs=['1977']
HANDLE NODE 636 (Line 183): AST_VAR checkindexOf, 
Name node checkindexOf not found, create name node
636 handle result: obj_nodes=[], name=checkindexOf, name_nodes=['2052']
Right OBJ not found
Assigning ['1545'] to 2052, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1977']
OBJ REACHES 626 (Line 182) -> 635 (Line 183)
HANDLE NODE 649 (Line 184): AST_IF, 
HANDLE NODE 650 (Line 184): AST_IF_ELEM, 
HANDLE NODE 651 (Line 184): AST_UNARY_OP indexOf, ~cmd.priority.range.indexOf(priority)
BLOCK 663 STARTS
HANDLE NODE 664 (Line 185): AST_METHOD_CALL push, args.push(cmd.priority, options.priority)
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
664 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 669 (Line 185): AST_PROP priority, cmd.priority
HANDLE NODE 670 (Line 185): AST_VAR cmd, 
670 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
669 handle result: obj_nodes=['1754', '1688', '1669', '1725'], name=cmd.priority, name_nodes=['1676', '1767', '1711', '1738']
HANDLE NODE 673 (Line 185): AST_PROP priority, options.priority
HANDLE NODE 674 (Line 185): AST_VAR options, 
674 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
673 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
Running Python function <function array_push at 0x7fd0a2e41620>...
664: function returned_objs=[], used_objs=[]
HANDLE NODE 677 (Line 190): AST_IF, 
HANDLE NODE 678 (Line 190): AST_IF_ELEM, 
HANDLE NODE 679 (Line 190): AST_BINARY_OP name, &&
HANDLE NODE 680 (Line 190): AST_PROP name, options.name
HANDLE NODE 681 (Line 190): AST_VAR options, 
681 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.name
Add prop name node options.name (1786->2054)
Add prop name node options.name (1771->2055)
680 handle result: obj_nodes=[], name=options.name, name_nodes=['2055', '2054']
HANDLE NODE 684 (Line 190): AST_BINARY_OP "Darwin-Growl", ===
HANDLE NODE 685 (Line 190): AST_PROP type, cmd.type
HANDLE NODE 686 (Line 190): AST_VAR cmd, 
686 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
685 handle result: obj_nodes=['1742', '1680', '1659', '1715'], name=cmd.type, name_nodes=['1743', '1660', '1716', '1681']
HANDLE NODE 689 (Line 190): string "Darwin-Growl", "Darwin-Growl"
689 handle result: obj_nodes=['2056'], value="Darwin-Growl"
BLOCK 690 STARTS
HANDLE NODE 691 (Line 191): AST_METHOD_CALL push, args.push('--name', options.name)
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
691 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 696 (Line 191): string '--name', '--name'
696 handle result: obj_nodes=['2062'], value='--name'
HANDLE NODE 697 (Line 191): AST_PROP name, options.name
HANDLE NODE 698 (Line 191): AST_VAR options, 
698 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
697 handle result: obj_nodes=[], name=options.name, name_nodes=['2055', '2054']
Running Python function <function array_push at 0x7fd0a2e41620>...
691: function returned_objs=[], used_objs=[]
HANDLE NODE 701 (Line 194): AST_SWITCH type, 
HANDLE NODE 702 (Line 194): AST_PROP type, cmd.type
HANDLE NODE 703 (Line 194): AST_VAR cmd, 
703 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
702 handle result: obj_nodes=['1742', '1680', '1659', '1715'], name=cmd.type, name_nodes=['1743', '1660', '1716', '1681']
HANDLE NODE 706 (Line 194): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 708 (Line 195): string 'Darwin-Growl', 'Darwin-Growl'
708 handle result: obj_nodes=['2063'], value='Darwin-Growl'
BLOCK 709 STARTS
HANDLE NODE 710 (Line 196): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
710 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 715 (Line 196): AST_PROP msg, cmd.msg
HANDLE NODE 716 (Line 196): AST_VAR cmd, 
716 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
715 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1747', '1664', '1685', '1720']
Running Python function <function array_push at 0x7fd0a2e41620>...
710: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 710 (Line 196)
OBJ REACHES 251 (Line 64) -> 710 (Line 196)
OBJ REACHES 189 (Line 40) -> 710 (Line 196)
OBJ REACHES 293 (Line 81) -> 710 (Line 196)
HANDLE NODE 719 (Line 197): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
719 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 724 (Line 197): AST_CALL quote, quote(msg)
HANDLE NODE 725 (Line 197): AST_NAME quote, 
725 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 728 (Line 197): AST_VAR msg, 
728 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0")]
callback functions = set()
724: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fd0a2e41620>...
719: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 719 (Line 197)
HANDLE NODE 730 (Line 198): AST_IF, 
HANDLE NODE 731 (Line 198): AST_IF_ELEM title, 
HANDLE NODE 732 (Line 198): AST_PROP title, options.title
HANDLE NODE 733 (Line 198): AST_VAR options, 
733 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.title
Add prop name node options.title (1786->2069)
Add prop name node options.title (1771->2070)
732 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 736 STARTS
HANDLE NODE 737 (Line 198): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
737 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 742 (Line 198): AST_CALL quote, quote(options.title)
HANDLE NODE 743 (Line 198): AST_NAME quote, 
743 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 746 (Line 198): AST_PROP title, options.title
HANDLE NODE 747 (Line 198): AST_VAR options, 
747 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
746 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0"), BranchTag("If730#0")]
callback functions = set()
742: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fd0a2e41620>...
737: function returned_objs=[], used_objs=[]
HANDLE NODE 750 (Line 199): AST_BREAK, break;
HANDLE NODE 753 (Line 200): string 'Darwin-NotificationCenter', 'Darwin-NotificationCenter'
753 handle result: obj_nodes=['2077'], value='Darwin-NotificationCenter'
BLOCK 754 STARTS
HANDLE NODE 755 (Line 201): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
755 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 760 (Line 201): AST_PROP msg, cmd.msg
HANDLE NODE 761 (Line 201): AST_VAR cmd, 
761 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
760 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1747', '1664', '1685', '1720']
Running Python function <function array_push at 0x7fd0a2e41620>...
755: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 755 (Line 201)
OBJ REACHES 251 (Line 64) -> 755 (Line 201)
OBJ REACHES 189 (Line 40) -> 755 (Line 201)
OBJ REACHES 293 (Line 81) -> 755 (Line 201)
HANDLE NODE 764 (Line 202): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
764 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 769 (Line 202): AST_CALL quote, quote(msg)
HANDLE NODE 770 (Line 202): AST_NAME quote, 
770 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 773 (Line 202): AST_VAR msg, 
773 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1")]
callback functions = set()
769: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fd0a2e41620>...
764: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 764 (Line 202)
HANDLE NODE 775 (Line 203): AST_IF, 
HANDLE NODE 776 (Line 203): AST_IF_ELEM title, 
HANDLE NODE 777 (Line 203): AST_PROP title, options.title
HANDLE NODE 778 (Line 203): AST_VAR options, 
778 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
777 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 781 STARTS
HANDLE NODE 782 (Line 204): AST_METHOD_CALL push, args.push(cmd.title)
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
782 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 787 (Line 204): AST_PROP title, cmd.title
HANDLE NODE 788 (Line 204): AST_VAR cmd, 
788 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1713->2084)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1678->2085)
787 handle result: obj_nodes=['1750', '1665'], name=cmd.title, name_nodes=['2084', '1666', '1751', '2085']
Running Python function <function array_push at 0x7fd0a2e41620>...
782: function returned_objs=[], used_objs=['1750', '1665']
OBJ REACHES 293 (Line 81) -> 782 (Line 204)
OBJ REACHES 158 (Line 28) -> 782 (Line 204)
HANDLE NODE 791 (Line 205): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
791 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 796 (Line 205): AST_CALL quote, quote(options.title)
HANDLE NODE 797 (Line 205): AST_NAME quote, 
797 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 800 (Line 205): AST_PROP title, options.title
HANDLE NODE 801 (Line 205): AST_VAR options, 
801 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
800 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If775#0")]
callback functions = set()
796: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fd0a2e41620>...
791: function returned_objs=[], used_objs=[]
HANDLE NODE 804 (Line 207): AST_IF, 
HANDLE NODE 805 (Line 207): AST_IF_ELEM subtitle, 
HANDLE NODE 806 (Line 207): AST_PROP subtitle, options.subtitle
HANDLE NODE 807 (Line 207): AST_VAR options, 
807 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.subtitle
Add prop name node options.subtitle (1786->2091)
Add prop name node options.subtitle (1771->2092)
806 handle result: obj_nodes=[], name=options.subtitle, name_nodes=['2091', '2092']
BLOCK 810 STARTS
HANDLE NODE 811 (Line 208): AST_METHOD_CALL push, args.push(cmd.subtitle)
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
811 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 816 (Line 208): AST_PROP subtitle, cmd.subtitle
HANDLE NODE 817 (Line 208): AST_VAR cmd, 
817 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1740->2094)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1713->2095)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1678->2096)
816 handle result: obj_nodes=['1667'], name=cmd.subtitle, name_nodes=['2094', '2096', '2095', '1668']
Running Python function <function array_push at 0x7fd0a2e41620>...
811: function returned_objs=[], used_objs=['1667']
OBJ REACHES 158 (Line 28) -> 811 (Line 208)
HANDLE NODE 820 (Line 209): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
820 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 825 (Line 209): AST_CALL quote, quote(options.title)
HANDLE NODE 826 (Line 209): AST_NAME quote, 
826 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 829 (Line 209): AST_PROP title, options.title
HANDLE NODE 830 (Line 209): AST_VAR options, 
830 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
829 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If804#0")]
callback functions = set()
825: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fd0a2e41620>...
820: function returned_objs=[], used_objs=[]
HANDLE NODE 833 (Line 211): AST_BREAK, break;
HANDLE NODE 836 (Line 212): string 'Darwin-Growl', 'Darwin-Growl'
836 handle result: obj_nodes=['2102'], value='Darwin-Growl'
BLOCK 837 STARTS
HANDLE NODE 838 (Line 213): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
838 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 843 (Line 213): AST_PROP msg, cmd.msg
HANDLE NODE 844 (Line 213): AST_VAR cmd, 
844 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
843 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1747', '1664', '1685', '1720']
Running Python function <function array_push at 0x7fd0a2e41620>...
838: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 838 (Line 213)
OBJ REACHES 251 (Line 64) -> 838 (Line 213)
OBJ REACHES 189 (Line 40) -> 838 (Line 213)
OBJ REACHES 293 (Line 81) -> 838 (Line 213)
HANDLE NODE 847 (Line 214): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
847 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 852 (Line 214): AST_CALL quote, quote(msg)
HANDLE NODE 853 (Line 214): AST_NAME quote, 
853 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 856 (Line 214): AST_VAR msg, 
856 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2")]
callback functions = set()
852: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fd0a2e41620>...
847: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 847 (Line 214)
HANDLE NODE 858 (Line 215): AST_IF, 
HANDLE NODE 859 (Line 215): AST_IF_ELEM title, 
HANDLE NODE 860 (Line 215): AST_PROP title, options.title
HANDLE NODE 861 (Line 215): AST_VAR options, 
861 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
860 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 864 STARTS
HANDLE NODE 865 (Line 215): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
865 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 870 (Line 215): AST_CALL quote, quote(options.title)
HANDLE NODE 871 (Line 215): AST_NAME quote, 
871 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 874 (Line 215): AST_PROP title, options.title
HANDLE NODE 875 (Line 215): AST_VAR options, 
875 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
874 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2"), BranchTag("If858#0")]
callback functions = set()
870: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fd0a2e41620>...
865: function returned_objs=[], used_objs=[]
HANDLE NODE 878 (Line 216): AST_BREAK, break;
HANDLE NODE 881 (Line 217): string 'Linux', 'Linux'
881 handle result: obj_nodes=['2114'], value='Linux'
BLOCK 882 STARTS
HANDLE NODE 883 (Line 218): AST_IF, 
HANDLE NODE 884 (Line 218): AST_IF_ELEM title, 
HANDLE NODE 885 (Line 218): AST_PROP title, options.title
HANDLE NODE 886 (Line 218): AST_VAR options, 
886 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
885 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 889 STARTS
HANDLE NODE 890 (Line 219): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
890 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 895 (Line 219): AST_CALL quote, quote(options.title)
HANDLE NODE 896 (Line 219): AST_NAME quote, 
896 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 899 (Line 219): AST_PROP title, options.title
HANDLE NODE 900 (Line 219): AST_VAR options, 
900 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
899 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
895: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fd0a2e41620>...
890: function returned_objs=[], used_objs=[]
HANDLE NODE 903 (Line 220): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
903 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 908 (Line 220): AST_PROP msg, cmd.msg
HANDLE NODE 909 (Line 220): AST_VAR cmd, 
909 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
908 handle result: obj_nodes=['1663', '1719', '1684', '1746'], name=cmd.msg, name_nodes=['1747', '1664', '1685', '1720']
Running Python function <function array_push at 0x7fd0a2e41620>...
903: function returned_objs=[], used_objs=['1663', '1719', '1684', '1746']
OBJ REACHES 158 (Line 28) -> 903 (Line 220)
OBJ REACHES 251 (Line 64) -> 903 (Line 220)
OBJ REACHES 189 (Line 40) -> 903 (Line 220)
OBJ REACHES 293 (Line 81) -> 903 (Line 220)
HANDLE NODE 912 (Line 221): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
912 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 917 (Line 221): AST_CALL quote, quote(msg)
HANDLE NODE 918 (Line 221): AST_NAME quote, 
918 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 921 (Line 221): AST_VAR msg, 
921 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
917: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fd0a2e41620>...
912: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 912 (Line 221)
HANDLE NODE 923 (Line 218): AST_IF_ELEM, 
HANDLE NODE 924 (Line 218): NULL, 
BLOCK 925 STARTS
HANDLE NODE 926 (Line 223): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
926 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 931 (Line 223): AST_CALL quote, quote(msg)
HANDLE NODE 932 (Line 223): AST_NAME quote, 
932 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 935 (Line 223): AST_VAR msg, 
935 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#1")]
callback functions = set()
931: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fd0a2e41620>...
926: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 926 (Line 223)
HANDLE NODE 937 (Line 225): AST_BREAK, break;
HANDLE NODE 940 (Line 226): string 'Windows', 'Windows'
940 handle result: obj_nodes=['2132'], value='Windows'
BLOCK 941 STARTS
HANDLE NODE 942 (Line 227): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
942 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 947 (Line 227): AST_CALL quote, quote(msg)
HANDLE NODE 948 (Line 227): AST_NAME quote, 
948 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 951 (Line 227): AST_VAR msg, 
951 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4")]
callback functions = set()
947: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fd0a2e41620>...
942: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 942 (Line 227)
HANDLE NODE 953 (Line 228): AST_IF, 
HANDLE NODE 954 (Line 228): AST_IF_ELEM title, 
HANDLE NODE 955 (Line 228): AST_PROP title, options.title
HANDLE NODE 956 (Line 228): AST_VAR options, 
956 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
955 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 959 STARTS
HANDLE NODE 960 (Line 228): AST_METHOD_CALL push, args.push(cmd.title + quote(options.title))
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
960 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 965 (Line 228): AST_BINARY_OP title, +
HANDLE NODE 966 (Line 228): AST_PROP title, cmd.title
HANDLE NODE 967 (Line 228): AST_VAR cmd, 
967 handle result: obj_nodes=['1740', '1713', '1657', '1678'], name=cmd, name_nodes=['1578']
966 handle result: obj_nodes=['1750', '1665'], name=cmd.title, name_nodes=['2084', '1666', '1751', '2085']
HANDLE NODE 970 (Line 228): AST_CALL quote, quote(options.title)
HANDLE NODE 971 (Line 228): AST_NAME quote, 
971 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 974 (Line 228): AST_PROP title, options.title
HANDLE NODE 975 (Line 228): AST_VAR options, 
975 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
974 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4"), BranchTag("If953#0")]
callback functions = set()
970: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fd0a2e41620>...
960: function returned_objs=[], used_objs=['2144', '1750', '1665']
OBJ REACHES 293 (Line 81) -> 960 (Line 228)
OBJ REACHES 158 (Line 28) -> 960 (Line 228)
HANDLE NODE 978 (Line 229): AST_BREAK, break;
HANDLE NODE 980 (Line 233): AST_CALL exec, exec(args.join(' '), fn)
HANDLE NODE 981 (Line 233): AST_NAME exec, 
981 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
add_blank_func func_name: exec
HANDLE NODE 984 (Line 233): AST_METHOD_CALL join, args.join(' ')
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.join
984 handle result: obj_nodes=['1193'], name=args.join, name_nodes=['1198']
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 989 (Line 233): string ' ', ' '
989 handle result: obj_nodes=['2157'], value=' '
Running Python function <function array_join at 0x7fd0a2e41730>...
984: function returned_objs=['2158'], used_objs=['1744', '1717', '1725', '1945', '1665', '1686', '1754', '1748', '1746', '1948', '1661', '1750', '1719', '1669', '1663', '1684', '1937', '1967', '1545', '2144', '1688', '2062', '1721', '1667', '1682']
HANDLE NODE 990 (Line 233): AST_VAR fn, 
990 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
name node for arguments does not exist
FUNCTION 2146 exec STARTS, SCOPE 2151, DECL OBJ 2152, this OBJ None, branches []
callback functions = {'1789', '1772'}
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches []
BLOCK 404 STARTS
FUNCTION 1809 fn STARTS, SCOPE 1814, DECL OBJ 1772, this OBJ None, branches []
Edge 980->1809 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
980: function returned_objs=[], used_objs=['1682', '1744', '1717', '1725', '1945', '1686', '1665', '1754', '1748', '1746', '1948', '1661', '1789', '2158', '1750', '1719', '1663', '1684', '1937', '1967', '1545', '2144', '1688', '2062', '1721', '1667', '1669', '1772']
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 552 (Line 167) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 574 (Line 169) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 391 (Line 148) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 536 (Line 164) -> 980 (Line 233)
OBJ REACHES 585 (Line 172) -> 980 (Line 233)
OBJ REACHES 960 (Line 228) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 691 (Line 191) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
995: function returned_objs=[], used_objs=[]
Add CFG edge 72 -> 1640
Add CFG edge 140 -> 1605
Add CFG edge 150 -> 62
Add INTER_FUNC_REACHES 150 -> 67
Add CFG edge 413 -> 398
Add CFG edge 413 -> 1811
Add CFG edge 413 -> 1299
Add CFG edge 455 -> 1856
Add CFG edge 455 -> 1836
Add CFG edge 481 -> 1889
Add CFG edge 497 -> 1912
Add CFG edge 536 -> 1141
Add CFG edge 552 -> 1141
Add CFG edge 574 -> 1141
Add CFG edge 585 -> 1141
Add CFG edge 585 -> 1952
Add CFG edge 610 -> 1141
Add CFG edge 635 -> 1986
Add CFG edge 635 -> 1997
Add CFG edge 635 -> 2008
Add CFG edge 635 -> 2019
Add CFG edge 664 -> 1141
Add CFG edge 691 -> 1141
Add CFG edge 710 -> 1141
Add CFG edge 719 -> 1141
Add CFG edge 719 -> 1952
Add CFG edge 737 -> 1141
Add CFG edge 737 -> 1952
Add CFG edge 755 -> 1141
Add CFG edge 764 -> 1141
Add CFG edge 764 -> 1952
Add CFG edge 782 -> 1141
Add CFG edge 791 -> 1141
Add CFG edge 791 -> 1952
Add CFG edge 811 -> 1141
Add CFG edge 820 -> 1141
Add CFG edge 820 -> 1952
Add CFG edge 838 -> 1141
Add CFG edge 847 -> 1141
Add CFG edge 847 -> 1952
Add CFG edge 865 -> 1141
Add CFG edge 865 -> 1952
Add CFG edge 890 -> 1141
Add CFG edge 890 -> 1952
Add CFG edge 903 -> 1141
Add CFG edge 912 -> 1141
Add CFG edge 912 -> 1952
Add CFG edge 926 -> 1141
Add CFG edge 926 -> 1952
Add CFG edge 942 -> 1141
Add CFG edge 942 -> 1952
Add CFG edge 960 -> 1141
Add CFG edge 960 -> 1952
Add CFG edge 980 -> 398
Add CFG edge 980 -> 1811
Add CFG edge 980 -> 1189
Add CFG edge 995 -> 360
Add INTER_FUNC_REACHES 995 -> 365
Add INTER_FUNC_REACHES 995 -> 369
Add INTER_FUNC_REACHES 995 -> 373
Finished Importing
Finished Importing
add_blank_func func_name: Object
add_blank_func func_name: Object
name node for Object does not exist
name node for Object does not exist
add_blank_func func_name: Function
add_blank_func func_name: Function
name node for Function does not exist
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: valueOf
add_blank_func func_name: String
add_blank_func func_name: String
name node for String does not exist
name node for String does not exist
add_blank_func func_name: Number
add_blank_func func_name: Number
name node for Number does not exist
name node for Number does not exist
add_blank_func func_name: Array
add_blank_func func_name: Array
name node for Array does not exist
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: filter
add_blank_func func_name: Boolean
add_blank_func func_name: Boolean
name node for Boolean does not exist
name node for Boolean does not exist
add_blank_func func_name: Symbol
add_blank_func func_name: Symbol
name node for Symbol does not exist
name node for Symbol does not exist
add_blank_func func_name: Error
add_blank_func func_name: Error
name node for Error does not exist
name node for Error does not exist
add_blank_func func_name: EvalError
add_blank_func func_name: EvalError
name node for EvalError does not exist
name node for EvalError does not exist
add_blank_func func_name: InternalError
add_blank_func func_name: InternalError
name node for InternalError does not exist
name node for InternalError does not exist
add_blank_func func_name: RangeError
add_blank_func func_name: RangeError
name node for RangeError does not exist
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
add_blank_func func_name: TypeError
name node for TypeError does not exist
name node for TypeError does not exist
add_blank_func func_name: URIError
add_blank_func func_name: URIError
name node for URIError does not exist
name node for URIError does not exist
add_blank_func func_name: parseInt
add_blank_func func_name: parseInt
name node for parseInt does not exist
name node for parseInt does not exist
add_blank_func func_name: parseFloat
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
add_blank_func func_name: escape
name node for escape does not exist
name node for escape does not exist
add_blank_func func_name: unescape
add_blank_func func_name: unescape
name node for unescape does not exist
name node for unescape does not exist
add_blank_func func_name: setTimeout
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
add_blank_func func_name: setInterval
name node for setInterval does not exist
name node for setInterval does not exist
add_blank_func func_name: clearInterval
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for clearInterval does not exist
name node for undefined does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for NaN does not exist
name node for true does not exist
name node for true does not exist
name node for false does not exist
name node for false does not exist
Internal objects
Internal objects
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
GENERATE OBJECT GRAPH: 1
REGISTER 21 to 1
HANDLE NODE 1 (Line 1): AST_TOPLEVEL, 
FILE ./tests/vul_demo.js BEGINS
name node for ./tests/vul_demo.js does not exist
name node for ./tests/vul_demo.js does not exist
name node for module does not exist
name node for module does not exist
name node for exports does not exist
name node for exports does not exist
name node for this does not exist
name node for this does not exist
name node for child_process does not exist
name node for child_process does not exist
name node for process does not exist
name node for process does not exist
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
name node for SayHelper does not exist
name node for SayHelper does not exist
Declared function obj nodes: ['679']
name node for mySayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper2 does not exist
name node for mySayHelper2 does not exist
FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 1): AST_ASSIGN child_process, child_process = require('child_process')
HANDLE NODE 8 (Line 1): AST_CALL require, require('child_process')
HANDLE NODE 9 (Line 1): AST_NAME require, 
Name node require not found, create name node
9 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module child_process at built-in not found!
8: function returned_objs=[], used_objs=[]
HANDLE NODE 6 (Line 1): AST_VAR child_process, 
6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Right side handling error at statement 5, child 8
HANDLE NODE 13 (Line 2): AST_ASSIGN process, process = require('process')
HANDLE NODE 16 (Line 2): AST_CALL require, require('process')
HANDLE NODE 17 (Line 2): AST_NAME require, 
17 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module process at built-in not found!
16: function returned_objs=[], used_objs=[]
HANDLE NODE 14 (Line 2): AST_VAR process, 
14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Right side handling error at statement 13, child 16
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
Declared function obj nodes: ['679']
HANDLE NODE 69 (Line 10): AST_ASSIGN mySayHelper, mySayHelper = new SayHelper()
HANDLE NODE 72 (Line 10): AST_NEW SayHelper, new SayHelper()
HANDLE NODE 73 (Line 10): AST_NAME SayHelper, 
73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
BLOCK 27 STARTS
HANDLE NODE 28 (Line 4): AST_ASSIGN "user", =
HANDLE NODE 33 (Line 4): string "user", "user"
33 handle result: obj_nodes=['695'], value="user"
HANDLE NODE 29 (Line 4): AST_PROP username, this.username
HANDLE NODE 30 (Line 4): AST_VAR this, 
30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.username (693->696)
29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['695'] to 696, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 34 (Line 5): AST_ASSIGN greet, =
HANDLE NODE 39 (Line 5): AST_CLOSURE {closure}, 
Declared function obj nodes: ['698']
HANDLE NODE 35 (Line 5): AST_PROP greet, this.greet
HANDLE NODE 36 (Line 5): AST_VAR this, 
36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.greet (693->703)
35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
Assigning ['698'] to 703, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
  assign used objs=[]
prototype obj node is ['681']
prototype obj node is ['681']
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
72: function returned_objs=['693'], used_objs=[]
HANDLE NODE 70 (Line 10): AST_VAR mySayHelper, 
70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 76 (Line 11): AST_ASSIGN mySayHelper2, mySayHelper2 = mySayHelper
HANDLE NODE 79 (Line 11): AST_VAR mySayHelper, 
79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
HANDLE NODE 77 (Line 11): AST_VAR mySayHelper2, 
77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 81 (Line 12): AST_IF, 
HANDLE NODE 82 (Line 12): AST_IF_ELEM 2, 
HANDLE NODE 83 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 83 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 84 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 85 (Line 12): AST_VAR process, 
85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Add prop name node process.argv (649->705)
84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
PARENT OBJ process.argv NOT DEFINED, creating object nodes
Add prop name node process.argv.2 (706->707)
83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
BLOCK 89 STARTS
HANDLE NODE 90 (Line 12): AST_ASSIGN username, =
HANDLE NODE 95 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 95 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 96 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 97 (Line 12): AST_VAR process, 
97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
HANDLE NODE 91 (Line 12): AST_PROP username, mySayHelper2.username
HANDLE NODE 92 (Line 12): AST_VAR mySayHelper2, 
92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
Right OBJ not found
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
  assign used objs=[]
HANDLE NODE 101 (Line 13): AST_METHOD_CALL greet, mySayHelper.greet()
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
name node for arguments does not exist
name node for arguments does not exist
name node for commandline does not exist
name node for commandline does not exist
FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
BLOCK 46 STARTS
HANDLE NODE 47 (Line 6): AST_ASSIGN commandline, commandline = 'echo Hello, ' + this.username + '!'
HANDLE NODE 50 (Line 6): AST_BINARY_OP '!', +
HANDLE NODE 51 (Line 6): AST_BINARY_OP 'echo Hello, ', +
HANDLE NODE 52 (Line 6): string 'echo Hello, ', 'echo Hello, '
52 handle result: obj_nodes=['715'], value='echo Hello, '
HANDLE NODE 53 (Line 6): AST_PROP username, this.username
HANDLE NODE 54 (Line 6): AST_VAR this, 
54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
Cannot find "direct" property, going into __proto__ ['117']...
  this.__proto__.username
Add prop name node this.username (672->716)
53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
HANDLE NODE 57 (Line 6): string '!', '!'
57 handle result: obj_nodes=['719'], value='!'
HANDLE NODE 48 (Line 6): AST_VAR commandline, 
48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=['715', '719', '717']
HANDLE NODE 58 (Line 7): AST_METHOD_CALL execSync, child_process.execSync(commandline)
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Add prop name node child_process.execSync (649->722)
58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
add_blank_func func_name: child_process.execSync
add_blank_func func_name: child_process.execSync
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
HANDLE NODE 63 (Line 7): AST_VAR commandline, 
63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
callback functions = set()
58: function returned_objs=[], used_objs=['720']
OBJ REACHES 47 (Line 6) -> 58 (Line 7)
101: function returned_objs=[], used_objs=[]
Add CFG edge 58 -> 725
Add CFG edge 69 -> 22
Add CFG edge 101 -> 40
Finished Importing
add_blank_func func_name: Object
name node for Object does not exist
add_blank_func func_name: Function
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: String
name node for String does not exist
add_blank_func func_name: Number
name node for Number does not exist
add_blank_func func_name: Array
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: Boolean
name node for Boolean does not exist
add_blank_func func_name: Symbol
name node for Symbol does not exist
add_blank_func func_name: Error
name node for Error does not exist
add_blank_func func_name: EvalError
name node for EvalError does not exist
add_blank_func func_name: InternalError
name node for InternalError does not exist
add_blank_func func_name: RangeError
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
name node for TypeError does not exist
add_blank_func func_name: URIError
name node for URIError does not exist
add_blank_func func_name: parseInt
name node for parseInt does not exist
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
name node for escape does not exist
add_blank_func func_name: unescape
name node for unescape does not exist
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
name node for setInterval does not exist
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for true does not exist
name node for false does not exist
Internal objects
undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
GENERATE OBJECT GRAPH: 1
REGISTER 61 to 1
REGISTER 359 to 1
HANDLE NODE 1 (Line 7): AST_TOPLEVEL, 
FILE ./tests/growl.js BEGINS
name node for ./tests/growl.js does not exist
name node for module does not exist
name node for exports does not exist
name node for this does not exist
name node for exec does not exist
name node for fs does not exist
name node for path does not exist
name node for exists does not exist
name node for os does not exist
name node for quote does not exist
name node for cmd does not exist
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
name node for which does not exist
Declared function obj nodes: ['1580']
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
name node for growl does not exist
Declared function obj nodes: ['1587']
FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 7): AST_ASSIGN exec, exec = require('child_process').exec
HANDLE NODE 8 (Line 7): AST_PROP exec, require('child_process').exec
HANDLE NODE 9 (Line 7): AST_CALL require, require('child_process')
HANDLE NODE 10 (Line 7): AST_NAME require, 
Name node require not found, create name node
10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module child_process at built-in not found!
9: function returned_objs=[], used_objs=[]
PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
name node for require('child_process') does not exist
Add prop name node require('child_process').exec (1596->1597)
8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
HANDLE NODE 6 (Line 7): AST_VAR exec, 
6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
Right OBJ not found
Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 15 (Line 8): AST_ASSIGN fs, fs = require('fs')
HANDLE NODE 18 (Line 8): AST_CALL require, require('fs')
HANDLE NODE 19 (Line 8): AST_NAME require, 
19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module fs at built-in not found!
18: function returned_objs=[], used_objs=[]
HANDLE NODE 16 (Line 8): AST_VAR fs, 
16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Right side handling error at statement 15, child 18
HANDLE NODE 23 (Line 9): AST_ASSIGN path, path = require('path')
HANDLE NODE 26 (Line 9): AST_CALL require, require('path')
HANDLE NODE 27 (Line 9): AST_NAME require, 
27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module path at built-in not found!
26: function returned_objs=[], used_objs=[]
HANDLE NODE 24 (Line 9): AST_VAR path, 
24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Right side handling error at statement 23, child 26
HANDLE NODE 31 (Line 10): AST_ASSIGN exists, exists = fs.existsSync || path.existsSync
HANDLE NODE 34 (Line 10): AST_BINARY_OP existsSync, ||
HANDLE NODE 35 (Line 10): AST_PROP existsSync, fs.existsSync
HANDLE NODE 36 (Line 10): AST_VAR fs, 
36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Add prop name node fs.existsSync (1545->1598)
35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
HANDLE NODE 39 (Line 10): AST_PROP existsSync, path.existsSync
HANDLE NODE 40 (Line 10): AST_VAR path, 
40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
HANDLE NODE 32 (Line 10): AST_VAR exists, 
32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
Right side handling error at statement 31, child 34
HANDLE NODE 43 (Line 11): AST_ASSIGN os, os = require('os')
HANDLE NODE 46 (Line 11): AST_CALL require, require('os')
HANDLE NODE 47 (Line 11): AST_NAME require, 
47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module os at built-in not found!
46: function returned_objs=[], used_objs=[]
HANDLE NODE 44 (Line 11): AST_VAR os, 
44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Right side handling error at statement 43, child 46
HANDLE NODE 51 (Line 12): AST_ASSIGN quote, quote = JSON.stringify
HANDLE NODE 54 (Line 12): AST_PROP stringify, JSON.stringify
HANDLE NODE 55 (Line 12): AST_VAR JSON, 
Name node JSON not found, create name node
55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
PARENT OBJ JSON NOT DEFINED, creating object nodes
Add prop name node JSON.stringify (1600->1601)
54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
HANDLE NODE 52 (Line 12): AST_VAR quote, 
52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
Right OBJ not found
Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 58 (Line 13): AST_ASSIGN cmd, cmd
HANDLE NODE 59 (Line 13): AST_VAR cmd, 
59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
Declared function obj nodes: ['1580']
HANDLE NODE 140 (Line 25): AST_SWITCH type, 
HANDLE NODE 141 (Line 25): AST_METHOD_CALL type, os.type()
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Add prop name node os.type (1545->1602)
141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
add_blank_func func_name: os.type
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
name node for arguments does not exist
FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
callback functions = set()
141: function returned_objs=[], used_objs=[]
HANDLE NODE 146 (Line 25): AST_SWITCH_LIST 'Darwin', 
HANDLE NODE 148 (Line 26): string 'Darwin', 'Darwin'
148 handle result: obj_nodes=['1620'], value='Darwin'
BLOCK 149 STARTS
HANDLE NODE 150 (Line 27): AST_IF, 
HANDLE NODE 151 (Line 27): AST_IF_ELEM, 
HANDLE NODE 152 (Line 27): AST_CALL which, which('terminal-notifier')
HANDLE NODE 153 (Line 27): AST_NAME which, 
153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
HANDLE NODE 156 (Line 27): string 'terminal-notifier', 'terminal-notifier'
156 handle result: obj_nodes=['1621'], value='terminal-notifier'
name node for arguments does not exist
add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
name node for name does not exist
name node for paths does not exist
name node for loc does not exist
FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
BLOCK 71 STARTS
HANDLE NODE 72 (Line 16): AST_ASSIGN paths, paths = process.env.PATH.split(':')
HANDLE NODE 75 (Line 16): AST_METHOD_CALL split, process.env.PATH.split(':')
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
Name node process not found, create name node
78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
PARENT OBJ process NOT DEFINED, creating object nodes
Add prop name node process.env (1632->1633)
77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
PARENT OBJ process.env NOT DEFINED, creating object nodes
Add prop name node process.env.PATH (1634->1635)
76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
Add prop name node process.env.PATH.split (1636->1637)
75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
add_blank_func func_name: process.env.PATH.split
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
HANDLE NODE 84 (Line 16): string ':', ':'
84 handle result: obj_nodes=['1649'], value=':'
name node for arguments does not exist
FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
callback functions = set()
75: function returned_objs=[], used_objs=['1649']
HANDLE NODE 73 (Line 16): AST_VAR paths, 
73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
Right OBJ not found
Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=['1649']
HANDLE NODE 85 (Line 17): AST_ASSIGN loc, loc
HANDLE NODE 86 (Line 17): AST_VAR loc, 
86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
HANDLE NODE 88 (Line 19): AST_FOR, 
152: function returned_objs=[], used_objs=[]
BLOCK 157 STARTS
HANDLE NODE 158 (Line 28): AST_ASSIGN cmd, =
HANDLE NODE 161 (Line 28): AST_ARRAY "Darwin-NotificationCenter", 
HANDLE NODE 162 (Line 29): AST_ARRAY_ELEM "Darwin-NotificationCenter", 
HANDLE NODE 163 (Line 29): string "Darwin-NotificationCenter", "Darwin-NotificationCenter"
163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
HANDLE NODE 165 (Line 30): AST_ARRAY_ELEM "terminal-notifier", 
HANDLE NODE 166 (Line 30): string "terminal-notifier", "terminal-notifier"
166 handle result: obj_nodes=['1661'], value="terminal-notifier"
HANDLE NODE 168 (Line 31): AST_ARRAY_ELEM '-message', 
HANDLE NODE 169 (Line 31): string '-message', '-message'
169 handle result: obj_nodes=['1663'], value='-message'
HANDLE NODE 171 (Line 32): AST_ARRAY_ELEM '-title', 
HANDLE NODE 172 (Line 32): string '-title', '-title'
172 handle result: obj_nodes=['1665'], value='-title'
HANDLE NODE 174 (Line 33): AST_ARRAY_ELEM '-subtitle', 
HANDLE NODE 175 (Line 33): string '-subtitle', '-subtitle'
175 handle result: obj_nodes=['1667'], value='-subtitle'
HANDLE NODE 177 (Line 34): AST_ARRAY_ELEM priority, 
HANDLE NODE 178 (Line 34): AST_ARRAY '-execute', 
HANDLE NODE 179 (Line 35): AST_ARRAY_ELEM '-execute', 
HANDLE NODE 180 (Line 35): string '-execute', '-execute'
180 handle result: obj_nodes=['1671'], value='-execute'
HANDLE NODE 182 (Line 36): AST_ARRAY_ELEM range, 
HANDLE NODE 183 (Line 36): AST_ARRAY, []
HANDLE NODE 159 (Line 28): AST_VAR cmd, 
159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
  assign used objs=[]
HANDLE NODE 186 (Line 27): AST_IF_ELEM, 
HANDLE NODE 187 (Line 27): NULL, 
BLOCK 188 STARTS
HANDLE NODE 189 (Line 40): AST_ASSIGN cmd, =
HANDLE NODE 192 (Line 40): AST_ARRAY "Darwin-Growl", 
HANDLE NODE 193 (Line 41): AST_ARRAY_ELEM "Darwin-Growl", 
HANDLE NODE 194 (Line 41): string "Darwin-Growl", "Darwin-Growl"
194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
HANDLE NODE 196 (Line 42): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 197 (Line 42): string "growlnotify", "growlnotify"
197 handle result: obj_nodes=['1682'], value="growlnotify"
HANDLE NODE 199 (Line 43): AST_ARRAY_ELEM '-m', 
HANDLE NODE 200 (Line 43): string '-m', '-m'
200 handle result: obj_nodes=['1684'], value='-m'
HANDLE NODE 202 (Line 44): AST_ARRAY_ELEM '--sticky', 
HANDLE NODE 203 (Line 44): string '--sticky', '--sticky'
203 handle result: obj_nodes=['1686'], value='--sticky'
HANDLE NODE 205 (Line 45): AST_ARRAY_ELEM priority, 
HANDLE NODE 206 (Line 45): AST_ARRAY '--priority', 
HANDLE NODE 207 (Line 46): AST_ARRAY_ELEM '--priority', 
HANDLE NODE 208 (Line 46): string '--priority', '--priority'
208 handle result: obj_nodes=['1690'], value='--priority'
HANDLE NODE 210 (Line 47): AST_ARRAY_ELEM range, 
HANDLE NODE 211 (Line 47): AST_ARRAY 0, 
HANDLE NODE 212 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 213 (Line 48): AST_UNARY_OP 2, -2
HANDLE NODE 216 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 217 (Line 49): AST_UNARY_OP 1, -1
HANDLE NODE 220 (Line 47): AST_ARRAY_ELEM 0, 
HANDLE NODE 221 (Line 50): integer 0, 0
221 handle result: obj_nodes=['1694'], value=0
HANDLE NODE 223 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 224 (Line 51): integer 1, 1
224 handle result: obj_nodes=['1696'], value=1
HANDLE NODE 226 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 227 (Line 52): integer 2, 2
227 handle result: obj_nodes=['1698'], value=2
HANDLE NODE 229 (Line 47): AST_ARRAY_ELEM "Very Low", 
HANDLE NODE 230 (Line 53): string "Very Low", "Very Low"
230 handle result: obj_nodes=['1700'], value="Very Low"
HANDLE NODE 232 (Line 47): AST_ARRAY_ELEM "Moderate", 
HANDLE NODE 233 (Line 54): string "Moderate", "Moderate"
233 handle result: obj_nodes=['1702'], value="Moderate"
HANDLE NODE 235 (Line 47): AST_ARRAY_ELEM "Normal", 
HANDLE NODE 236 (Line 55): string "Normal", "Normal"
236 handle result: obj_nodes=['1704'], value="Normal"
HANDLE NODE 238 (Line 47): AST_ARRAY_ELEM "High", 
HANDLE NODE 239 (Line 56): string "High", "High"
239 handle result: obj_nodes=['1706'], value="High"
HANDLE NODE 241 (Line 47): AST_ARRAY_ELEM "Emergency", 
HANDLE NODE 242 (Line 57): string "Emergency", "Emergency"
242 handle result: obj_nodes=['1708'], value="Emergency"
HANDLE NODE 190 (Line 40): AST_VAR cmd, 
190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
  assign used objs=[]
HANDLE NODE 246 (Line 62): AST_BREAK, break;
HANDLE NODE 249 (Line 63): string 'Linux', 'Linux'
249 handle result: obj_nodes=['1712'], value='Linux'
BLOCK 250 STARTS
HANDLE NODE 251 (Line 64): AST_ASSIGN cmd, =
HANDLE NODE 254 (Line 64): AST_ARRAY "Linux", 
HANDLE NODE 255 (Line 65): AST_ARRAY_ELEM "Linux", 
HANDLE NODE 256 (Line 65): string "Linux", "Linux"
256 handle result: obj_nodes=['1715'], value="Linux"
HANDLE NODE 258 (Line 66): AST_ARRAY_ELEM "notify-send", 
HANDLE NODE 259 (Line 66): string "notify-send", "notify-send"
259 handle result: obj_nodes=['1717'], value="notify-send"
HANDLE NODE 261 (Line 67): AST_ARRAY_ELEM '', 
HANDLE NODE 262 (Line 67): string '', ''
262 handle result: obj_nodes=['1719'], value=''
HANDLE NODE 264 (Line 68): AST_ARRAY_ELEM '-t 0', 
HANDLE NODE 265 (Line 68): string '-t 0', '-t 0'
265 handle result: obj_nodes=['1721'], value='-t 0'
HANDLE NODE 267 (Line 69): AST_ARRAY_ELEM '-i', 
HANDLE NODE 268 (Line 69): string '-i', '-i'
268 handle result: obj_nodes=['1723'], value='-i'
HANDLE NODE 270 (Line 70): AST_ARRAY_ELEM priority, 
HANDLE NODE 271 (Line 70): AST_ARRAY '-u', 
HANDLE NODE 272 (Line 71): AST_ARRAY_ELEM '-u', 
HANDLE NODE 273 (Line 71): string '-u', '-u'
273 handle result: obj_nodes=['1727'], value='-u'
HANDLE NODE 275 (Line 72): AST_ARRAY_ELEM range, 
HANDLE NODE 276 (Line 72): AST_ARRAY "low", [            "low"          , "normal"          , "critical"        ]
HANDLE NODE 277 (Line 72): AST_ARRAY_ELEM "low", 
HANDLE NODE 278 (Line 73): string "low", "low"
278 handle result: obj_nodes=['1731'], value="low"
HANDLE NODE 280 (Line 72): AST_ARRAY_ELEM "normal", 
HANDLE NODE 281 (Line 74): string "normal", "normal"
281 handle result: obj_nodes=['1733'], value="normal"
HANDLE NODE 283 (Line 72): AST_ARRAY_ELEM "critical", 
HANDLE NODE 284 (Line 75): string "critical", "critical"
284 handle result: obj_nodes=['1735'], value="critical"
HANDLE NODE 252 (Line 64): AST_VAR cmd, 
252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
  assign used objs=[]
HANDLE NODE 288 (Line 79): AST_BREAK, break;
HANDLE NODE 291 (Line 80): string 'Windows_NT', 'Windows_NT'
291 handle result: obj_nodes=['1739'], value='Windows_NT'
BLOCK 292 STARTS
HANDLE NODE 293 (Line 81): AST_ASSIGN cmd, =
HANDLE NODE 296 (Line 81): AST_ARRAY "Windows", 
HANDLE NODE 297 (Line 82): AST_ARRAY_ELEM "Windows", 
HANDLE NODE 298 (Line 82): string "Windows", "Windows"
298 handle result: obj_nodes=['1742'], value="Windows"
HANDLE NODE 300 (Line 83): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 301 (Line 83): string "growlnotify", "growlnotify"
301 handle result: obj_nodes=['1744'], value="growlnotify"
HANDLE NODE 303 (Line 84): AST_ARRAY_ELEM '', 
HANDLE NODE 304 (Line 84): string '', ''
304 handle result: obj_nodes=['1746'], value=''
HANDLE NODE 306 (Line 85): AST_ARRAY_ELEM '/s:true', 
HANDLE NODE 307 (Line 85): string '/s:true', '/s:true'
307 handle result: obj_nodes=['1748'], value='/s:true'
HANDLE NODE 309 (Line 86): AST_ARRAY_ELEM '/t:', 
HANDLE NODE 310 (Line 86): string '/t:', '/t:'
310 handle result: obj_nodes=['1750'], value='/t:'
HANDLE NODE 312 (Line 87): AST_ARRAY_ELEM '/i:', 
HANDLE NODE 313 (Line 87): string '/i:', '/i:'
313 handle result: obj_nodes=['1752'], value='/i:'
HANDLE NODE 315 (Line 88): AST_ARRAY_ELEM priority, 
HANDLE NODE 316 (Line 88): AST_ARRAY '/p:', 
HANDLE NODE 317 (Line 89): AST_ARRAY_ELEM '/p:', 
HANDLE NODE 318 (Line 89): string '/p:', '/p:'
318 handle result: obj_nodes=['1756'], value='/p:'
HANDLE NODE 320 (Line 90): AST_ARRAY_ELEM range, 
HANDLE NODE 321 (Line 90): AST_ARRAY 0, [              -2            , -1            , 0            , 1            , 2          ]
HANDLE NODE 322 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 323 (Line 91): AST_UNARY_OP 2, -2
HANDLE NODE 326 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 327 (Line 92): AST_UNARY_OP 1, -1
HANDLE NODE 330 (Line 90): AST_ARRAY_ELEM 0, 
HANDLE NODE 331 (Line 93): integer 0, 0
331 handle result: obj_nodes=['1760'], value=0
HANDLE NODE 333 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 334 (Line 94): integer 1, 1
334 handle result: obj_nodes=['1762'], value=1
HANDLE NODE 336 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 337 (Line 95): integer 2, 2
337 handle result: obj_nodes=['1764'], value=2
HANDLE NODE 294 (Line 81): AST_VAR cmd, 
294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
  assign used objs=[]
HANDLE NODE 341 (Line 99): AST_BREAK, break;
HANDLE NODE 343 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 346 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 351 (Line 106): AST_VAR growl, 
351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 347 (Line 106): AST_PROP exports, module.exports
HANDLE NODE 348 (Line 106): AST_VAR module, 
348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 344 (Line 106): AST_VAR exports, 
344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 353 (Line 112): AST_ASSIGN '1.4.1', =
HANDLE NODE 358 (Line 112): string '1.4.1', '1.4.1'
358 handle result: obj_nodes=['1768'], value='1.4.1'
HANDLE NODE 354 (Line 112): AST_PROP version, exports.version
HANDLE NODE 355 (Line 112): AST_VAR exports, 
355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
Cannot find "direct" property, going into __proto__ ['1024']...
  exports.__proto__.version
Add prop name node exports.version (1587->1769)
354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
Assigning ['1768'] to 1769, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
Declared function obj nodes: ['1587']
HANDLE NODE 994 (Line 234): NULL, ;
HANDLE NODE 995 (Line 236): AST_CALL growl, growl("test", "", "")
HANDLE NODE 996 (Line 236): AST_NAME growl, 
996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 999 (Line 236): string "test", "test"
999 handle result: obj_nodes=['1770'], value="test"
HANDLE NODE 1000 (Line 236): string "", ""
1000 handle result: obj_nodes=['1771'], value=""
HANDLE NODE 1001 (Line 236): string "", ""
1001 handle result: obj_nodes=['1772'], value=""
name node for arguments does not exist
add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
name node for msg does not exist
add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
name node for options does not exist
add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
name node for fn does not exist
name node for image does not exist
name node for args does not exist
FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
BLOCK 377 STARTS
HANDLE NODE 378 (Line 145): AST_ASSIGN image, image
HANDLE NODE 379 (Line 145): AST_VAR image, 
379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
HANDLE NODE 381 (Line 146): AST_ASSIGN args, args
HANDLE NODE 382 (Line 146): AST_VAR args, 
382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
HANDLE NODE 384 (Line 147): AST_ASSIGN options, options = options || {}
HANDLE NODE 387 (Line 147): AST_BINARY_OP options, ||
HANDLE NODE 388 (Line 147): AST_VAR options, 
388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
HANDLE NODE 390 (Line 147): AST_ARRAY, 
HANDLE NODE 385 (Line 147): AST_VAR options, 
385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
Assigning ['1786', '1771'] to 1779, pre_objs=['1771'], branches=[]
  Remove 1771
  assign used objs=[]
HANDLE NODE 391 (Line 148): AST_ASSIGN fn, fn = fn || function(){}
HANDLE NODE 394 (Line 148): AST_BINARY_OP fn, ||
HANDLE NODE 395 (Line 148): AST_VAR fn, 
395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
HANDLE NODE 397 (Line 148): AST_CLOSURE {closure}, 
Declared function obj nodes: ['1789']
HANDLE NODE 392 (Line 148): AST_VAR fn, 
392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
Assigning ['1789', '1772'] to 1781, pre_objs=['1772'], branches=[]
  Remove 1772
  assign used objs=[]
HANDLE NODE 407 (Line 151): AST_IF, 
HANDLE NODE 408 (Line 151): AST_IF_ELEM, 
HANDLE NODE 409 (Line 151): AST_UNARY_OP cmd, !cmd
BLOCK 412 STARTS
HANDLE NODE 413 (Line 151): AST_RETURN, return fn(new Error('growl not supported on this platform'));
HANDLE NODE 414 (Line 151): AST_CALL fn, fn(new Error('growl not supported on this platform'))
HANDLE NODE 415 (Line 151): AST_NAME fn, 
415 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
HANDLE NODE 418 (Line 151): AST_NEW Error, new Error('growl not supported on this platform')
HANDLE NODE 419 (Line 151): AST_NAME Error, 
419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
HANDLE NODE 422 (Line 151): string 'growl not supported on this platform', 'growl not supported on this platform'
422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
name node for arguments does not exist
FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
prototype obj node is ['1305']
callback functions = set()
Edge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
418: function returned_objs=['1800'], used_objs=['1795']
name node for arguments does not exist
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#0")]
BLOCK 404 STARTS
add_blank_func func_name: fn
name node for arguments does not exist
FUNCTION 1809 fn STARTS, SCOPE 1814, DECL OBJ 1772, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#1")]
callback functions = set()
414: function returned_objs=[], used_objs=['1800', '1795']
HANDLE NODE 423 (Line 152): AST_ASSIGN args, =
HANDLE NODE 426 (Line 152): AST_ARRAY, [cmd.pkg]
HANDLE NODE 427 (Line 152): AST_ARRAY_ELEM pkg, 
HANDLE NODE 428 (Line 152): AST_PROP pkg, cmd.pkg
HANDLE NODE 429 (Line 152): AST_VAR cmd, 
429 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
428 handle result: obj_nodes=['1682', '1661', '1744', '1717'], name=cmd.pkg, name_nodes=['1683', '1662', '1718', '1745']
HANDLE NODE 424 (Line 152): AST_VAR args, 
424 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
Assigning ['1825'] to 1784, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 433 (Line 155): AST_IF, 
HANDLE NODE 434 (Line 155): AST_IF_ELEM, 
HANDLE NODE 435 (Line 155): AST_ASSIGN image, =
HANDLE NODE 438 (Line 155): AST_PROP image, options.image
HANDLE NODE 439 (Line 155): AST_VAR options, 
439 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.image
Add prop name node options.image (1786->1828)
Add prop name node options.image (1771->1829)
438 handle result: obj_nodes=[], name=options.image, name_nodes=['1829', '1828']
HANDLE NODE 436 (Line 155): AST_VAR image, 
436 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Right OBJ not found
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
BLOCK 442 STARTS
HANDLE NODE 443 (Line 156): AST_SWITCH type, 
HANDLE NODE 444 (Line 156): AST_PROP type, cmd.type
HANDLE NODE 445 (Line 156): AST_VAR cmd, 
445 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
444 handle result: obj_nodes=['1715', '1680', '1742', '1659'], name=cmd.type, name_nodes=['1660', '1681', '1716', '1743']
HANDLE NODE 448 (Line 156): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 450 (Line 157): string 'Darwin-Growl', 'Darwin-Growl'
450 handle result: obj_nodes=['1831'], value='Darwin-Growl'
BLOCK 451 STARTS
HANDLE NODE 452 (Line 158): AST_ASSIGN flag, flag
HANDLE NODE 453 (Line 158): AST_VAR flag, 
Name node flag not found, create name node
453 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 455 (Line 158): AST_ASSIGN ext, ext = path.extname(image).substr(1)
HANDLE NODE 458 (Line 158): AST_METHOD_CALL substr, path.extname(image).substr(1)
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Add prop name node path.extname (1545->1833)
459 handle result: obj_nodes=[], name=path.extname, name_nodes=['1833']
add_blank_func func_name: path.extname
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
459: function returned_objs=[], used_objs=['1545']
PARENT OBJ path.extname(image) NOT DEFINED, creating object nodes
name node for path.extname(image) does not exist
Add prop name node path.extname(image).substr (1852->1853)
458 handle result: obj_nodes=[], name=path.extname(image).substr, name_nodes=['1853']
add_blank_func func_name: path.extname(image).substr
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
459 handle result: obj_nodes=['1840'], name=path.extname, name_nodes=['1833']
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
Edge 459->1834 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
459: function returned_objs=[], used_objs=['1545']
HANDLE NODE 468 (Line 158): integer 1, 1
468 handle result: obj_nodes=['1870'], value=1
name node for arguments does not exist
FUNCTION 1854 path.extname(image).substr STARTS, SCOPE 1859, DECL OBJ 1860, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
458: function returned_objs=[], used_objs=['1870']
HANDLE NODE 456 (Line 158): AST_VAR ext, 
Name node ext not found, create name node
456 handle result: obj_nodes=[], name=ext, name_nodes=['1877']
Right OBJ not found
Assigning ['1545'] to 1877, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=['1870']
HANDLE NODE 469 (Line 159): AST_ASSIGN flag, =
HANDLE NODE 472 (Line 159): AST_BINARY_OP flag, ||
HANDLE NODE 473 (Line 159): AST_VAR flag, 
473 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 475 (Line 159): AST_BINARY_OP 'iconpath', &&
HANDLE NODE 476 (Line 159): AST_BINARY_OP 'icns', ==
HANDLE NODE 477 (Line 159): AST_VAR ext, 
477 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 479 (Line 159): string 'icns', 'icns'
479 handle result: obj_nodes=['1878'], value='icns'
HANDLE NODE 480 (Line 159): string 'iconpath', 'iconpath'
480 handle result: obj_nodes=['1881'], value='iconpath'
HANDLE NODE 470 (Line 159): AST_VAR flag, 
470 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
Assigning ['1882'] to 1832, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 481 (Line 160): AST_ASSIGN flag, =
HANDLE NODE 484 (Line 160): AST_BINARY_OP flag, ||
HANDLE NODE 485 (Line 160): AST_VAR flag, 
485 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
HANDLE NODE 487 (Line 160): AST_BINARY_OP 'appIcon', &&
HANDLE NODE 488 (Line 160): AST_METHOD_CALL test, /^[A-Z]/.test(image)
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
PARENT OBJ /^[A-Z]/ NOT DEFINED, creating object nodes
name node for /^[A-Z]/ does not exist
Add prop name node /^[A-Z]/.test (1885->1886)
488 handle result: obj_nodes=[], name=/^[A-Z]/.test, name_nodes=['1886']
add_blank_func func_name: /^[A-Z]/.test
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
HANDLE NODE 494 (Line 160): AST_VAR image, 
494 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1887 /^[A-Z]/.test STARTS, SCOPE 1892, DECL OBJ 1893, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
488: function returned_objs=[], used_objs=['1545']
HANDLE NODE 496 (Line 160): string 'appIcon', 'appIcon'
496 handle result: obj_nodes=['1904'], value='appIcon'
HANDLE NODE 482 (Line 160): AST_VAR flag, 
482 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
Assigning ['1882', '1905'] to 1832, pre_objs=['1882'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 497 (Line 161): AST_ASSIGN flag, =
HANDLE NODE 500 (Line 161): AST_BINARY_OP flag, ||
HANDLE NODE 501 (Line 161): AST_VAR flag, 
501 handle result: obj_nodes=['1882', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 503 (Line 161): AST_BINARY_OP 'image', &&
HANDLE NODE 504 (Line 161): AST_METHOD_CALL test, /^png|gif|jpe?g$/.test(ext)
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
PARENT OBJ /^png|gif|jpe?g$/ NOT DEFINED, creating object nodes
name node for /^png|gif|jpe?g$/ does not exist
Add prop name node /^png|gif|jpe?g$/.test (1908->1909)
504 handle result: obj_nodes=[], name=/^png|gif|jpe?g$/.test, name_nodes=['1909']
add_blank_func func_name: /^png|gif|jpe?g$/.test
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
HANDLE NODE 510 (Line 161): AST_VAR ext, 
510 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
name node for arguments does not exist
FUNCTION 1910 /^png|gif|jpe?g$/.test STARTS, SCOPE 1915, DECL OBJ 1916, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
504: function returned_objs=[], used_objs=['1545']
HANDLE NODE 512 (Line 161): string 'image', 'image'
512 handle result: obj_nodes=['1927'], value='image'
HANDLE NODE 498 (Line 161): AST_VAR flag, 
498 handle result: obj_nodes=['1882', '1905'], name=flag, name_nodes=['1832']
Assigning ['1882', '1928', '1905'] to 1832, pre_objs=['1882', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 513 (Line 162): AST_ASSIGN flag, =
HANDLE NODE 516 (Line 162): AST_BINARY_OP flag, ||
HANDLE NODE 517 (Line 162): AST_VAR flag, 
517 handle result: obj_nodes=['1882', '1928', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 519 (Line 162): AST_BINARY_OP 'icon', &&
HANDLE NODE 520 (Line 162): AST_BINARY_OP ext, &&
HANDLE NODE 521 (Line 162): AST_VAR ext, 
521 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 523 (Line 162): AST_ASSIGN image, =
HANDLE NODE 526 (Line 162): AST_VAR ext, 
526 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 524 (Line 162): AST_VAR image, 
524 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 528 (Line 162): string 'icon', 'icon'
528 handle result: obj_nodes=['1932'], value='icon'
HANDLE NODE 514 (Line 162): AST_VAR flag, 
514 handle result: obj_nodes=['1882', '1928', '1905'], name=flag, name_nodes=['1832']
Assigning ['1933', '1882', '1928', '1905'] to 1832, pre_objs=['1882', '1928', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 529 (Line 163): AST_ASSIGN flag, =
HANDLE NODE 532 (Line 163): AST_BINARY_OP 'icon', ||
HANDLE NODE 533 (Line 163): AST_VAR flag, 
533 handle result: obj_nodes=['1933', '1882', '1928', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 535 (Line 163): string 'icon', 'icon'
535 handle result: obj_nodes=['1935'], value='icon'
HANDLE NODE 530 (Line 163): AST_VAR flag, 
530 handle result: obj_nodes=['1933', '1882', '1928', '1905'], name=flag, name_nodes=['1832']
Assigning ['1935', '1928', '1933', '1882', '1905'] to 1832, pre_objs=['1933', '1882', '1928', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 536 (Line 164): AST_METHOD_CALL push, args.push('--' + flag, image)
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
536 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 541 (Line 164): AST_BINARY_OP '--', +
HANDLE NODE 542 (Line 164): string '--', '--'
542 handle result: obj_nodes=['1936'], value='--'
HANDLE NODE 543 (Line 164): AST_VAR flag, 
543 handle result: obj_nodes=['1935', '1928', '1933', '1882', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 545 (Line 164): AST_VAR image, 
545 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7fcc06d536a8>...
536: function returned_objs=[], used_objs=['1545']
HANDLE NODE 547 (Line 165): AST_BREAK, break;
HANDLE NODE 550 (Line 166): string 'Linux', 'Linux'
550 handle result: obj_nodes=['1939'], value='Linux'
BLOCK 551 STARTS
HANDLE NODE 552 (Line 167): AST_METHOD_CALL push, args.push(cmd.icon + " " + image)
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
552 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 557 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 558 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 559 (Line 167): AST_PROP icon, cmd.icon
HANDLE NODE 560 (Line 167): AST_VAR cmd, 
560 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1657->1940)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1678->1941)
559 handle result: obj_nodes=['1723', '1752'], name=cmd.icon, name_nodes=['1941', '1753', '1724', '1940']
HANDLE NODE 563 (Line 167): string " ", " "
563 handle result: obj_nodes=['1942'], value=" "
HANDLE NODE 564 (Line 167): AST_VAR image, 
564 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7fcc06d536a8>...
552: function returned_objs=[], used_objs=['1945', '1545', '1943', '1723', '1752', '1942']
OBJ REACHES 251 (Line 64) -> 552 (Line 167)
OBJ REACHES 293 (Line 81) -> 552 (Line 167)
HANDLE NODE 566 (Line 169): AST_IF, 
HANDLE NODE 567 (Line 169): AST_IF_ELEM, 
HANDLE NODE 568 (Line 169): AST_UNARY_OP sticky, !options.sticky
BLOCK 573 STARTS
HANDLE NODE 574 (Line 169): AST_METHOD_CALL push, args.push('--hint=int:transient:1')
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
574 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 579 (Line 169): string '--hint=int:transient:1', '--hint=int:transient:1'
579 handle result: obj_nodes=['1948'], value='--hint=int:transient:1'
Running Python function <function array_push at 0x7fcc06d536a8>...
574: function returned_objs=[], used_objs=['1948']
HANDLE NODE 580 (Line 170): AST_BREAK, break;
HANDLE NODE 583 (Line 171): string 'Windows', 'Windows'
583 handle result: obj_nodes=['1949'], value='Windows'
BLOCK 584 STARTS
HANDLE NODE 585 (Line 172): AST_METHOD_CALL push, args.push(cmd.icon + quote(image))
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
585 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 590 (Line 172): AST_BINARY_OP icon, +
HANDLE NODE 591 (Line 172): AST_PROP icon, cmd.icon
HANDLE NODE 592 (Line 172): AST_VAR cmd, 
592 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
591 handle result: obj_nodes=['1723', '1752'], name=cmd.icon, name_nodes=['1941', '1753', '1724', '1940']
HANDLE NODE 595 (Line 172): AST_CALL quote, quote(image)
HANDLE NODE 596 (Line 172): AST_NAME quote, 
596 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
add_blank_func func_name: quote
HANDLE NODE 599 (Line 172): AST_VAR image, 
599 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#2")]
callback functions = set()
595: function returned_objs=[], used_objs=['1545']
Running Python function <function array_push at 0x7fcc06d536a8>...
585: function returned_objs=[], used_objs=['1967', '1545', '1752', '1723']
OBJ REACHES 293 (Line 81) -> 585 (Line 172)
OBJ REACHES 251 (Line 64) -> 585 (Line 172)
HANDLE NODE 601 (Line 173): AST_BREAK, break;
HANDLE NODE 603 (Line 178): AST_IF, 
HANDLE NODE 604 (Line 178): AST_IF_ELEM sticky, 
HANDLE NODE 605 (Line 178): AST_PROP sticky, options.sticky
HANDLE NODE 606 (Line 178): AST_VAR options, 
606 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.sticky
Add prop name node options.sticky (1786->1969)
Add prop name node options.sticky (1771->1970)
605 handle result: obj_nodes=[], name=options.sticky, name_nodes=['1969', '1970']
BLOCK 609 STARTS
HANDLE NODE 610 (Line 178): AST_METHOD_CALL push, args.push(cmd.sticky)
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
610 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 615 (Line 178): AST_PROP sticky, cmd.sticky
HANDLE NODE 616 (Line 178): AST_VAR cmd, 
616 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.sticky
Add prop name node cmd.sticky (1657->1972)
615 handle result: obj_nodes=['1748', '1721', '1686'], name=cmd.sticky, name_nodes=['1722', '1749', '1972', '1687']
Running Python function <function array_push at 0x7fcc06d536a8>...
610: function returned_objs=[], used_objs=['1748', '1721', '1686']
OBJ REACHES 293 (Line 81) -> 610 (Line 178)
OBJ REACHES 251 (Line 64) -> 610 (Line 178)
OBJ REACHES 189 (Line 40) -> 610 (Line 178)
HANDLE NODE 619 (Line 181): AST_IF, 
HANDLE NODE 620 (Line 181): AST_IF_ELEM priority, 
HANDLE NODE 621 (Line 181): AST_PROP priority, options.priority
HANDLE NODE 622 (Line 181): AST_VAR options, 
622 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.priority
Add prop name node options.priority (1786->1973)
Add prop name node options.priority (1771->1974)
621 handle result: obj_nodes=[], name=options.priority, name_nodes=['1973', '1974']
BLOCK 625 STARTS
HANDLE NODE 626 (Line 182): AST_ASSIGN priority, priority = options.priority + ''
HANDLE NODE 629 (Line 182): AST_BINARY_OP '', +
HANDLE NODE 630 (Line 182): AST_PROP priority, options.priority
HANDLE NODE 631 (Line 182): AST_VAR options, 
631 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
630 handle result: obj_nodes=[], name=options.priority, name_nodes=['1973', '1974']
HANDLE NODE 634 (Line 182): string '', ''
634 handle result: obj_nodes=['1976'], value=''
HANDLE NODE 627 (Line 182): AST_VAR priority, 
Name node priority not found, create name node
627 handle result: obj_nodes=[], name=priority, name_nodes=['1979']
Assigning ['1977'] to 1979, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1976']
HANDLE NODE 635 (Line 183): AST_ASSIGN checkindexOf, checkindexOf = cmd.priority.range.indexOf(priority)
HANDLE NODE 638 (Line 183): AST_METHOD_CALL indexOf, cmd.priority.range.indexOf(priority)
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1725', '1669', '1754', '1688'], name=cmd.priority, name_nodes=['1676', '1767', '1738', '1711']
639 handle result: obj_nodes=['1758', '1673', '1692', '1729'], name=cmd.priority.range, name_nodes=['1710', '1675', '1766', '1737']
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1758->1980)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1673->1981)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1692->1982)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1729->1983)
638 handle result: obj_nodes=[], name=cmd.priority.range.indexOf, name_nodes=['1981', '1982', '1983', '1980']
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1725', '1669', '1754', '1688'], name=cmd.priority, name_nodes=['1676', '1767', '1738', '1711']
639 handle result: obj_nodes=['1758', '1673', '1692', '1729'], name=cmd.priority.range, name_nodes=['1710', '1675', '1766', '1737']
HANDLE NODE 647 (Line 183): AST_VAR priority, 
647 handle result: obj_nodes=['1977'], name=priority, name_nodes=['1979']
name node for arguments does not exist
FUNCTION 1984 cmd.priority.range.indexOf STARTS, SCOPE 1989, DECL OBJ 1990, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#0")]
callback functions = set()
name node for arguments does not exist
FUNCTION 1995 cmd.priority.range.indexOf STARTS, SCOPE 2000, DECL OBJ 2001, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#1")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2006 cmd.priority.range.indexOf STARTS, SCOPE 2011, DECL OBJ 2012, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#2")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2017 cmd.priority.range.indexOf STARTS, SCOPE 2022, DECL OBJ 2023, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#3")]
callback functions = set()
638: function returned_objs=[], used_objs=['1977']
HANDLE NODE 636 (Line 183): AST_VAR checkindexOf, 
Name node checkindexOf not found, create name node
636 handle result: obj_nodes=[], name=checkindexOf, name_nodes=['2052']
Right OBJ not found
Assigning ['1545'] to 2052, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1977']
OBJ REACHES 626 (Line 182) -> 635 (Line 183)
HANDLE NODE 649 (Line 184): AST_IF, 
HANDLE NODE 650 (Line 184): AST_IF_ELEM, 
HANDLE NODE 651 (Line 184): AST_UNARY_OP indexOf, ~cmd.priority.range.indexOf(priority)
BLOCK 663 STARTS
HANDLE NODE 664 (Line 185): AST_METHOD_CALL push, args.push(cmd.priority, options.priority)
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
664 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 669 (Line 185): AST_PROP priority, cmd.priority
HANDLE NODE 670 (Line 185): AST_VAR cmd, 
670 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
669 handle result: obj_nodes=['1725', '1669', '1754', '1688'], name=cmd.priority, name_nodes=['1676', '1767', '1738', '1711']
HANDLE NODE 673 (Line 185): AST_PROP priority, options.priority
HANDLE NODE 674 (Line 185): AST_VAR options, 
674 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
673 handle result: obj_nodes=[], name=options.priority, name_nodes=['1973', '1974']
Running Python function <function array_push at 0x7fcc06d536a8>...
664: function returned_objs=[], used_objs=[]
HANDLE NODE 677 (Line 190): AST_IF, 
HANDLE NODE 678 (Line 190): AST_IF_ELEM, 
HANDLE NODE 679 (Line 190): AST_BINARY_OP name, &&
HANDLE NODE 680 (Line 190): AST_PROP name, options.name
HANDLE NODE 681 (Line 190): AST_VAR options, 
681 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.name
Add prop name node options.name (1786->2054)
Add prop name node options.name (1771->2055)
680 handle result: obj_nodes=[], name=options.name, name_nodes=['2054', '2055']
HANDLE NODE 684 (Line 190): AST_BINARY_OP "Darwin-Growl", ===
HANDLE NODE 685 (Line 190): AST_PROP type, cmd.type
HANDLE NODE 686 (Line 190): AST_VAR cmd, 
686 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
685 handle result: obj_nodes=['1715', '1680', '1742', '1659'], name=cmd.type, name_nodes=['1660', '1681', '1716', '1743']
HANDLE NODE 689 (Line 190): string "Darwin-Growl", "Darwin-Growl"
689 handle result: obj_nodes=['2056'], value="Darwin-Growl"
BLOCK 690 STARTS
HANDLE NODE 691 (Line 191): AST_METHOD_CALL push, args.push('--name', options.name)
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
691 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 696 (Line 191): string '--name', '--name'
696 handle result: obj_nodes=['2062'], value='--name'
HANDLE NODE 697 (Line 191): AST_PROP name, options.name
HANDLE NODE 698 (Line 191): AST_VAR options, 
698 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
697 handle result: obj_nodes=[], name=options.name, name_nodes=['2054', '2055']
Running Python function <function array_push at 0x7fcc06d536a8>...
691: function returned_objs=[], used_objs=[]
HANDLE NODE 701 (Line 194): AST_SWITCH type, 
HANDLE NODE 702 (Line 194): AST_PROP type, cmd.type
HANDLE NODE 703 (Line 194): AST_VAR cmd, 
703 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
702 handle result: obj_nodes=['1715', '1680', '1742', '1659'], name=cmd.type, name_nodes=['1660', '1681', '1716', '1743']
HANDLE NODE 706 (Line 194): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 708 (Line 195): string 'Darwin-Growl', 'Darwin-Growl'
708 handle result: obj_nodes=['2063'], value='Darwin-Growl'
BLOCK 709 STARTS
HANDLE NODE 710 (Line 196): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
710 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 715 (Line 196): AST_PROP msg, cmd.msg
HANDLE NODE 716 (Line 196): AST_VAR cmd, 
716 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
715 handle result: obj_nodes=['1746', '1663', '1684', '1719'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fcc06d536a8>...
710: function returned_objs=[], used_objs=['1663', '1684', '1746', '1719']
OBJ REACHES 158 (Line 28) -> 710 (Line 196)
OBJ REACHES 189 (Line 40) -> 710 (Line 196)
OBJ REACHES 293 (Line 81) -> 710 (Line 196)
OBJ REACHES 251 (Line 64) -> 710 (Line 196)
HANDLE NODE 719 (Line 197): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
719 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 724 (Line 197): AST_CALL quote, quote(msg)
HANDLE NODE 725 (Line 197): AST_NAME quote, 
725 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 728 (Line 197): AST_VAR msg, 
728 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0")]
callback functions = set()
724: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fcc06d536a8>...
719: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 719 (Line 197)
HANDLE NODE 730 (Line 198): AST_IF, 
HANDLE NODE 731 (Line 198): AST_IF_ELEM title, 
HANDLE NODE 732 (Line 198): AST_PROP title, options.title
HANDLE NODE 733 (Line 198): AST_VAR options, 
733 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.title
Add prop name node options.title (1786->2069)
Add prop name node options.title (1771->2070)
732 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 736 STARTS
HANDLE NODE 737 (Line 198): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
737 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 742 (Line 198): AST_CALL quote, quote(options.title)
HANDLE NODE 743 (Line 198): AST_NAME quote, 
743 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 746 (Line 198): AST_PROP title, options.title
HANDLE NODE 747 (Line 198): AST_VAR options, 
747 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
746 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0"), BranchTag("If730#0")]
callback functions = set()
742: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fcc06d536a8>...
737: function returned_objs=[], used_objs=[]
HANDLE NODE 750 (Line 199): AST_BREAK, break;
HANDLE NODE 753 (Line 200): string 'Darwin-NotificationCenter', 'Darwin-NotificationCenter'
753 handle result: obj_nodes=['2077'], value='Darwin-NotificationCenter'
BLOCK 754 STARTS
HANDLE NODE 755 (Line 201): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
755 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 760 (Line 201): AST_PROP msg, cmd.msg
HANDLE NODE 761 (Line 201): AST_VAR cmd, 
761 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
760 handle result: obj_nodes=['1746', '1663', '1684', '1719'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fcc06d536a8>...
755: function returned_objs=[], used_objs=['1663', '1684', '1746', '1719']
OBJ REACHES 158 (Line 28) -> 755 (Line 201)
OBJ REACHES 189 (Line 40) -> 755 (Line 201)
OBJ REACHES 293 (Line 81) -> 755 (Line 201)
OBJ REACHES 251 (Line 64) -> 755 (Line 201)
HANDLE NODE 764 (Line 202): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
764 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 769 (Line 202): AST_CALL quote, quote(msg)
HANDLE NODE 770 (Line 202): AST_NAME quote, 
770 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 773 (Line 202): AST_VAR msg, 
773 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1")]
callback functions = set()
769: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fcc06d536a8>...
764: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 764 (Line 202)
HANDLE NODE 775 (Line 203): AST_IF, 
HANDLE NODE 776 (Line 203): AST_IF_ELEM title, 
HANDLE NODE 777 (Line 203): AST_PROP title, options.title
HANDLE NODE 778 (Line 203): AST_VAR options, 
778 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
777 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 781 STARTS
HANDLE NODE 782 (Line 204): AST_METHOD_CALL push, args.push(cmd.title)
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
782 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 787 (Line 204): AST_PROP title, cmd.title
HANDLE NODE 788 (Line 204): AST_VAR cmd, 
788 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1713->2084)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1678->2085)
787 handle result: obj_nodes=['1750', '1665'], name=cmd.title, name_nodes=['2085', '1751', '1666', '2084']
Running Python function <function array_push at 0x7fcc06d536a8>...
782: function returned_objs=[], used_objs=['1750', '1665']
OBJ REACHES 293 (Line 81) -> 782 (Line 204)
OBJ REACHES 158 (Line 28) -> 782 (Line 204)
HANDLE NODE 791 (Line 205): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
791 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 796 (Line 205): AST_CALL quote, quote(options.title)
HANDLE NODE 797 (Line 205): AST_NAME quote, 
797 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 800 (Line 205): AST_PROP title, options.title
HANDLE NODE 801 (Line 205): AST_VAR options, 
801 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
800 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If775#0")]
callback functions = set()
796: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fcc06d536a8>...
791: function returned_objs=[], used_objs=[]
HANDLE NODE 804 (Line 207): AST_IF, 
HANDLE NODE 805 (Line 207): AST_IF_ELEM subtitle, 
HANDLE NODE 806 (Line 207): AST_PROP subtitle, options.subtitle
HANDLE NODE 807 (Line 207): AST_VAR options, 
807 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.subtitle
Add prop name node options.subtitle (1786->2091)
Add prop name node options.subtitle (1771->2092)
806 handle result: obj_nodes=[], name=options.subtitle, name_nodes=['2092', '2091']
BLOCK 810 STARTS
HANDLE NODE 811 (Line 208): AST_METHOD_CALL push, args.push(cmd.subtitle)
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
811 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 816 (Line 208): AST_PROP subtitle, cmd.subtitle
HANDLE NODE 817 (Line 208): AST_VAR cmd, 
817 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1713->2094)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1678->2095)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1740->2096)
816 handle result: obj_nodes=['1667'], name=cmd.subtitle, name_nodes=['1668', '2094', '2095', '2096']
Running Python function <function array_push at 0x7fcc06d536a8>...
811: function returned_objs=[], used_objs=['1667']
OBJ REACHES 158 (Line 28) -> 811 (Line 208)
HANDLE NODE 820 (Line 209): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
820 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 825 (Line 209): AST_CALL quote, quote(options.title)
HANDLE NODE 826 (Line 209): AST_NAME quote, 
826 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 829 (Line 209): AST_PROP title, options.title
HANDLE NODE 830 (Line 209): AST_VAR options, 
830 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
829 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If804#0")]
callback functions = set()
825: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fcc06d536a8>...
820: function returned_objs=[], used_objs=[]
HANDLE NODE 833 (Line 211): AST_BREAK, break;
HANDLE NODE 836 (Line 212): string 'Darwin-Growl', 'Darwin-Growl'
836 handle result: obj_nodes=['2102'], value='Darwin-Growl'
BLOCK 837 STARTS
HANDLE NODE 838 (Line 213): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
838 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 843 (Line 213): AST_PROP msg, cmd.msg
HANDLE NODE 844 (Line 213): AST_VAR cmd, 
844 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
843 handle result: obj_nodes=['1746', '1663', '1684', '1719'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fcc06d536a8>...
838: function returned_objs=[], used_objs=['1663', '1684', '1746', '1719']
OBJ REACHES 158 (Line 28) -> 838 (Line 213)
OBJ REACHES 189 (Line 40) -> 838 (Line 213)
OBJ REACHES 293 (Line 81) -> 838 (Line 213)
OBJ REACHES 251 (Line 64) -> 838 (Line 213)
HANDLE NODE 847 (Line 214): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
847 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 852 (Line 214): AST_CALL quote, quote(msg)
HANDLE NODE 853 (Line 214): AST_NAME quote, 
853 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 856 (Line 214): AST_VAR msg, 
856 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2")]
callback functions = set()
852: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fcc06d536a8>...
847: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 847 (Line 214)
HANDLE NODE 858 (Line 215): AST_IF, 
HANDLE NODE 859 (Line 215): AST_IF_ELEM title, 
HANDLE NODE 860 (Line 215): AST_PROP title, options.title
HANDLE NODE 861 (Line 215): AST_VAR options, 
861 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
860 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 864 STARTS
HANDLE NODE 865 (Line 215): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
865 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 870 (Line 215): AST_CALL quote, quote(options.title)
HANDLE NODE 871 (Line 215): AST_NAME quote, 
871 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 874 (Line 215): AST_PROP title, options.title
HANDLE NODE 875 (Line 215): AST_VAR options, 
875 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
874 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2"), BranchTag("If858#0")]
callback functions = set()
870: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fcc06d536a8>...
865: function returned_objs=[], used_objs=[]
HANDLE NODE 878 (Line 216): AST_BREAK, break;
HANDLE NODE 881 (Line 217): string 'Linux', 'Linux'
881 handle result: obj_nodes=['2114'], value='Linux'
BLOCK 882 STARTS
HANDLE NODE 883 (Line 218): AST_IF, 
HANDLE NODE 884 (Line 218): AST_IF_ELEM title, 
HANDLE NODE 885 (Line 218): AST_PROP title, options.title
HANDLE NODE 886 (Line 218): AST_VAR options, 
886 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
885 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 889 STARTS
HANDLE NODE 890 (Line 219): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
890 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 895 (Line 219): AST_CALL quote, quote(options.title)
HANDLE NODE 896 (Line 219): AST_NAME quote, 
896 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 899 (Line 219): AST_PROP title, options.title
HANDLE NODE 900 (Line 219): AST_VAR options, 
900 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
899 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
895: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fcc06d536a8>...
890: function returned_objs=[], used_objs=[]
HANDLE NODE 903 (Line 220): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
903 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 908 (Line 220): AST_PROP msg, cmd.msg
HANDLE NODE 909 (Line 220): AST_VAR cmd, 
909 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
908 handle result: obj_nodes=['1746', '1663', '1684', '1719'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fcc06d536a8>...
903: function returned_objs=[], used_objs=['1663', '1684', '1746', '1719']
OBJ REACHES 158 (Line 28) -> 903 (Line 220)
OBJ REACHES 189 (Line 40) -> 903 (Line 220)
OBJ REACHES 293 (Line 81) -> 903 (Line 220)
OBJ REACHES 251 (Line 64) -> 903 (Line 220)
HANDLE NODE 912 (Line 221): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
912 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 917 (Line 221): AST_CALL quote, quote(msg)
HANDLE NODE 918 (Line 221): AST_NAME quote, 
918 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 921 (Line 221): AST_VAR msg, 
921 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
917: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fcc06d536a8>...
912: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 912 (Line 221)
HANDLE NODE 923 (Line 218): AST_IF_ELEM, 
HANDLE NODE 924 (Line 218): NULL, 
BLOCK 925 STARTS
HANDLE NODE 926 (Line 223): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
926 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 931 (Line 223): AST_CALL quote, quote(msg)
HANDLE NODE 932 (Line 223): AST_NAME quote, 
932 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 935 (Line 223): AST_VAR msg, 
935 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#1")]
callback functions = set()
931: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fcc06d536a8>...
926: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 926 (Line 223)
HANDLE NODE 937 (Line 225): AST_BREAK, break;
HANDLE NODE 940 (Line 226): string 'Windows', 'Windows'
940 handle result: obj_nodes=['2132'], value='Windows'
BLOCK 941 STARTS
HANDLE NODE 942 (Line 227): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
942 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 947 (Line 227): AST_CALL quote, quote(msg)
HANDLE NODE 948 (Line 227): AST_NAME quote, 
948 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 951 (Line 227): AST_VAR msg, 
951 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4")]
callback functions = set()
947: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fcc06d536a8>...
942: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 942 (Line 227)
HANDLE NODE 953 (Line 228): AST_IF, 
HANDLE NODE 954 (Line 228): AST_IF_ELEM title, 
HANDLE NODE 955 (Line 228): AST_PROP title, options.title
HANDLE NODE 956 (Line 228): AST_VAR options, 
956 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
955 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
BLOCK 959 STARTS
HANDLE NODE 960 (Line 228): AST_METHOD_CALL push, args.push(cmd.title + quote(options.title))
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
960 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 965 (Line 228): AST_BINARY_OP title, +
HANDLE NODE 966 (Line 228): AST_PROP title, cmd.title
HANDLE NODE 967 (Line 228): AST_VAR cmd, 
967 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
966 handle result: obj_nodes=['1750', '1665'], name=cmd.title, name_nodes=['2085', '1751', '1666', '2084']
HANDLE NODE 970 (Line 228): AST_CALL quote, quote(options.title)
HANDLE NODE 971 (Line 228): AST_NAME quote, 
971 handle result: obj_nodes=['1956', '1545'], name=quote, name_nodes=['1577']
HANDLE NODE 974 (Line 228): AST_PROP title, options.title
HANDLE NODE 975 (Line 228): AST_VAR options, 
975 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
974 handle result: obj_nodes=[], name=options.title, name_nodes=['2069', '2070']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4"), BranchTag("If953#0")]
callback functions = set()
970: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fcc06d536a8>...
960: function returned_objs=[], used_objs=['1750', '2144', '1665']
OBJ REACHES 293 (Line 81) -> 960 (Line 228)
OBJ REACHES 158 (Line 28) -> 960 (Line 228)
HANDLE NODE 978 (Line 229): AST_BREAK, break;
HANDLE NODE 980 (Line 233): AST_CALL exec, exec(args.join(' '), fn)
HANDLE NODE 981 (Line 233): AST_NAME exec, 
981 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
add_blank_func func_name: exec
HANDLE NODE 984 (Line 233): AST_METHOD_CALL join, args.join(' ')
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.join
984 handle result: obj_nodes=['1193'], name=args.join, name_nodes=['1198']
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 989 (Line 233): string ' ', ' '
989 handle result: obj_nodes=['2157'], value=' '
Running Python function <function array_join at 0x7fcc06d537b8>...
984: function returned_objs=['2158'], used_objs=['1967', '1748', '1663', '1719', '1661', '2144', '1717', '1665', '1725', '1686', '1667', '1688', '1744', '2062', '1945', '1682', '1545', '1750', '1937', '1746', '1669', '1948', '1721', '1684', '1754']
HANDLE NODE 990 (Line 233): AST_VAR fn, 
990 handle result: obj_nodes=['1789', '1772'], name=fn, name_nodes=['1781']
name node for arguments does not exist
FUNCTION 2146 exec STARTS, SCOPE 2151, DECL OBJ 2152, this OBJ None, branches []
callback functions = {'1789', '1772'}
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches []
BLOCK 404 STARTS
FUNCTION 1809 fn STARTS, SCOPE 1814, DECL OBJ 1772, this OBJ None, branches []
Edge 980->1809 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
980: function returned_objs=[], used_objs=['1967', '1748', '1663', '1719', '1661', '2144', '2158', '1717', '1665', '1772', '1725', '1686', '1667', '1688', '1744', '2062', '1945', '1682', '1545', '1750', '1937', '1746', '1669', '1948', '1789', '1721', '1684', '1754']
OBJ REACHES 585 (Line 172) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 960 (Line 228) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 691 (Line 191) -> 980 (Line 233)
OBJ REACHES 552 (Line 167) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 536 (Line 164) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 574 (Line 169) -> 980 (Line 233)
OBJ REACHES 391 (Line 148) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
995: function returned_objs=[], used_objs=[]
Add CFG edge 72 -> 1640
Add CFG edge 140 -> 1605
Add CFG edge 150 -> 62
Add INTER_FUNC_REACHES 150 -> 67
Add CFG edge 413 -> 398
Add CFG edge 413 -> 1811
Add CFG edge 413 -> 1299
Add CFG edge 455 -> 1856
Add CFG edge 455 -> 1836
Add CFG edge 481 -> 1889
Add CFG edge 497 -> 1912
Add CFG edge 536 -> 1141
Add CFG edge 552 -> 1141
Add CFG edge 574 -> 1141
Add CFG edge 585 -> 1141
Add CFG edge 585 -> 1952
Add CFG edge 610 -> 1141
Add CFG edge 635 -> 1986
Add CFG edge 635 -> 1997
Add CFG edge 635 -> 2008
Add CFG edge 635 -> 2019
Add CFG edge 664 -> 1141
Add CFG edge 691 -> 1141
Add CFG edge 710 -> 1141
Add CFG edge 719 -> 1141
Add CFG edge 719 -> 1952
Add CFG edge 737 -> 1141
Add CFG edge 737 -> 1952
Add CFG edge 755 -> 1141
Add CFG edge 764 -> 1141
Add CFG edge 764 -> 1952
Add CFG edge 782 -> 1141
Add CFG edge 791 -> 1141
Add CFG edge 791 -> 1952
Add CFG edge 811 -> 1141
Add CFG edge 820 -> 1141
Add CFG edge 820 -> 1952
Add CFG edge 838 -> 1141
Add CFG edge 847 -> 1141
Add CFG edge 847 -> 1952
Add CFG edge 865 -> 1141
Add CFG edge 865 -> 1952
Add CFG edge 890 -> 1141
Add CFG edge 890 -> 1952
Add CFG edge 903 -> 1141
Add CFG edge 912 -> 1141
Add CFG edge 912 -> 1952
Add CFG edge 926 -> 1141
Add CFG edge 926 -> 1952
Add CFG edge 942 -> 1141
Add CFG edge 942 -> 1952
Add CFG edge 960 -> 1141
Add CFG edge 960 -> 1952
Add CFG edge 980 -> 398
Add CFG edge 980 -> 1811
Add CFG edge 980 -> 1189
Add CFG edge 995 -> 360
Add INTER_FUNC_REACHES 995 -> 365
Add INTER_FUNC_REACHES 995 -> 369
Add INTER_FUNC_REACHES 995 -> 373
Finished Importing
Finished Importing
add_blank_func func_name: Object
add_blank_func func_name: Object
name node for Object does not exist
name node for Object does not exist
add_blank_func func_name: Function
add_blank_func func_name: Function
name node for Function does not exist
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: valueOf
add_blank_func func_name: String
add_blank_func func_name: String
name node for String does not exist
name node for String does not exist
add_blank_func func_name: Number
add_blank_func func_name: Number
name node for Number does not exist
name node for Number does not exist
add_blank_func func_name: Array
add_blank_func func_name: Array
name node for Array does not exist
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: filter
add_blank_func func_name: Boolean
add_blank_func func_name: Boolean
name node for Boolean does not exist
name node for Boolean does not exist
add_blank_func func_name: Symbol
add_blank_func func_name: Symbol
name node for Symbol does not exist
name node for Symbol does not exist
add_blank_func func_name: Error
add_blank_func func_name: Error
name node for Error does not exist
name node for Error does not exist
add_blank_func func_name: EvalError
add_blank_func func_name: EvalError
name node for EvalError does not exist
name node for EvalError does not exist
add_blank_func func_name: InternalError
add_blank_func func_name: InternalError
name node for InternalError does not exist
name node for InternalError does not exist
add_blank_func func_name: RangeError
add_blank_func func_name: RangeError
name node for RangeError does not exist
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
add_blank_func func_name: TypeError
name node for TypeError does not exist
name node for TypeError does not exist
add_blank_func func_name: URIError
add_blank_func func_name: URIError
name node for URIError does not exist
name node for URIError does not exist
add_blank_func func_name: parseInt
add_blank_func func_name: parseInt
name node for parseInt does not exist
name node for parseInt does not exist
add_blank_func func_name: parseFloat
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
add_blank_func func_name: escape
name node for escape does not exist
name node for escape does not exist
add_blank_func func_name: unescape
add_blank_func func_name: unescape
name node for unescape does not exist
name node for unescape does not exist
add_blank_func func_name: setTimeout
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
add_blank_func func_name: setInterval
name node for setInterval does not exist
name node for setInterval does not exist
add_blank_func func_name: clearInterval
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for clearInterval does not exist
name node for undefined does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for NaN does not exist
name node for true does not exist
name node for true does not exist
name node for false does not exist
name node for false does not exist
Internal objects
Internal objects
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
GENERATE OBJECT GRAPH: 1
REGISTER 21 to 1
HANDLE NODE 1 (Line 1): AST_TOPLEVEL, 
FILE ./tests/vul_demo.js BEGINS
name node for ./tests/vul_demo.js does not exist
name node for ./tests/vul_demo.js does not exist
name node for module does not exist
name node for module does not exist
name node for exports does not exist
name node for exports does not exist
name node for this does not exist
name node for this does not exist
name node for child_process does not exist
name node for child_process does not exist
name node for process does not exist
name node for process does not exist
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
name node for SayHelper does not exist
name node for SayHelper does not exist
Declared function obj nodes: ['679']
name node for mySayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper2 does not exist
name node for mySayHelper2 does not exist
FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 1): AST_ASSIGN child_process, child_process = require('child_process')
HANDLE NODE 8 (Line 1): AST_CALL require, require('child_process')
HANDLE NODE 9 (Line 1): AST_NAME require, 
Name node require not found, create name node
9 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module child_process at built-in not found!
8: function returned_objs=[], used_objs=[]
HANDLE NODE 6 (Line 1): AST_VAR child_process, 
6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Right side handling error at statement 5, child 8
HANDLE NODE 13 (Line 2): AST_ASSIGN process, process = require('process')
HANDLE NODE 16 (Line 2): AST_CALL require, require('process')
HANDLE NODE 17 (Line 2): AST_NAME require, 
17 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module process at built-in not found!
16: function returned_objs=[], used_objs=[]
HANDLE NODE 14 (Line 2): AST_VAR process, 
14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Right side handling error at statement 13, child 16
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
Declared function obj nodes: ['679']
HANDLE NODE 69 (Line 10): AST_ASSIGN mySayHelper, mySayHelper = new SayHelper()
HANDLE NODE 72 (Line 10): AST_NEW SayHelper, new SayHelper()
HANDLE NODE 73 (Line 10): AST_NAME SayHelper, 
73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
BLOCK 27 STARTS
HANDLE NODE 28 (Line 4): AST_ASSIGN "user", =
HANDLE NODE 33 (Line 4): string "user", "user"
33 handle result: obj_nodes=['695'], value="user"
HANDLE NODE 29 (Line 4): AST_PROP username, this.username
HANDLE NODE 30 (Line 4): AST_VAR this, 
30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.username (693->696)
29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['695'] to 696, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 34 (Line 5): AST_ASSIGN greet, =
HANDLE NODE 39 (Line 5): AST_CLOSURE {closure}, 
Declared function obj nodes: ['698']
HANDLE NODE 35 (Line 5): AST_PROP greet, this.greet
HANDLE NODE 36 (Line 5): AST_VAR this, 
36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.greet (693->703)
35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
Assigning ['698'] to 703, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
  assign used objs=[]
prototype obj node is ['681']
prototype obj node is ['681']
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
72: function returned_objs=['693'], used_objs=[]
HANDLE NODE 70 (Line 10): AST_VAR mySayHelper, 
70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 76 (Line 11): AST_ASSIGN mySayHelper2, mySayHelper2 = mySayHelper
HANDLE NODE 79 (Line 11): AST_VAR mySayHelper, 
79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
HANDLE NODE 77 (Line 11): AST_VAR mySayHelper2, 
77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 81 (Line 12): AST_IF, 
HANDLE NODE 82 (Line 12): AST_IF_ELEM 2, 
HANDLE NODE 83 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 83 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 84 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 85 (Line 12): AST_VAR process, 
85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Add prop name node process.argv (649->705)
84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
PARENT OBJ process.argv NOT DEFINED, creating object nodes
Add prop name node process.argv.2 (706->707)
83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
BLOCK 89 STARTS
HANDLE NODE 90 (Line 12): AST_ASSIGN username, =
HANDLE NODE 95 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 95 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 96 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 97 (Line 12): AST_VAR process, 
97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
HANDLE NODE 91 (Line 12): AST_PROP username, mySayHelper2.username
HANDLE NODE 92 (Line 12): AST_VAR mySayHelper2, 
92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
Right OBJ not found
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
  assign used objs=[]
HANDLE NODE 101 (Line 13): AST_METHOD_CALL greet, mySayHelper.greet()
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
name node for arguments does not exist
name node for arguments does not exist
name node for commandline does not exist
name node for commandline does not exist
FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
BLOCK 46 STARTS
HANDLE NODE 47 (Line 6): AST_ASSIGN commandline, commandline = 'echo Hello, ' + this.username + '!'
HANDLE NODE 50 (Line 6): AST_BINARY_OP '!', +
HANDLE NODE 51 (Line 6): AST_BINARY_OP 'echo Hello, ', +
HANDLE NODE 52 (Line 6): string 'echo Hello, ', 'echo Hello, '
52 handle result: obj_nodes=['715'], value='echo Hello, '
HANDLE NODE 53 (Line 6): AST_PROP username, this.username
HANDLE NODE 54 (Line 6): AST_VAR this, 
54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
Cannot find "direct" property, going into __proto__ ['117']...
  this.__proto__.username
Add prop name node this.username (672->716)
53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
HANDLE NODE 57 (Line 6): string '!', '!'
57 handle result: obj_nodes=['719'], value='!'
HANDLE NODE 48 (Line 6): AST_VAR commandline, 
48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=['715', '717', '719']
HANDLE NODE 58 (Line 7): AST_METHOD_CALL execSync, child_process.execSync(commandline)
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Add prop name node child_process.execSync (649->722)
58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
add_blank_func func_name: child_process.execSync
add_blank_func func_name: child_process.execSync
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
HANDLE NODE 63 (Line 7): AST_VAR commandline, 
63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
callback functions = set()
58: function returned_objs=[], used_objs=['720']
OBJ REACHES 47 (Line 6) -> 58 (Line 7)
101: function returned_objs=[], used_objs=[]
Add CFG edge 58 -> 725
Add CFG edge 69 -> 22
Add CFG edge 101 -> 40
Finished Importing
add_blank_func func_name: Object
name node for Object does not exist
add_blank_func func_name: Function
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: String
name node for String does not exist
add_blank_func func_name: Number
name node for Number does not exist
add_blank_func func_name: Array
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: Boolean
name node for Boolean does not exist
add_blank_func func_name: Symbol
name node for Symbol does not exist
add_blank_func func_name: Error
name node for Error does not exist
add_blank_func func_name: EvalError
name node for EvalError does not exist
add_blank_func func_name: InternalError
name node for InternalError does not exist
add_blank_func func_name: RangeError
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
name node for TypeError does not exist
add_blank_func func_name: URIError
name node for URIError does not exist
add_blank_func func_name: parseInt
name node for parseInt does not exist
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
name node for escape does not exist
add_blank_func func_name: unescape
name node for unescape does not exist
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
name node for setInterval does not exist
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for true does not exist
name node for false does not exist
Internal objects
undefined_obj: 1545, infinity_obj: 1547, negative_infinity_obj: 1549, nan_obj:1550, true_obj: 1552, false_obj: 1554
GENERATE OBJECT GRAPH: 1
REGISTER 61 to 1
REGISTER 359 to 1
HANDLE NODE 1 (Line 7): AST_TOPLEVEL, 
FILE ./tests/growl.js BEGINS
name node for ./tests/growl.js does not exist
name node for module does not exist
name node for exports does not exist
name node for this does not exist
name node for exec does not exist
name node for fs does not exist
name node for path does not exist
name node for exists does not exist
name node for os does not exist
name node for quote does not exist
name node for cmd does not exist
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
name node for which does not exist
Declared function obj nodes: ['1580']
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
name node for growl does not exist
Declared function obj nodes: ['1587']
FUNCTION 1 which STARTS, SCOPE 1556, DECL OBJ 1557, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 7): AST_ASSIGN exec, exec = require('child_process').exec
HANDLE NODE 8 (Line 7): AST_PROP exec, require('child_process').exec
HANDLE NODE 9 (Line 7): AST_CALL require, require('child_process')
HANDLE NODE 10 (Line 7): AST_NAME require, 
Name node require not found, create name node
10 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module child_process at built-in not found!
9: function returned_objs=[], used_objs=[]
PARENT OBJ require('child_process') NOT DEFINED, creating object nodes
name node for require('child_process') does not exist
Add prop name node require('child_process').exec (1596->1597)
8 handle result: obj_nodes=[], name=require('child_process').exec, name_nodes=['1597']
HANDLE NODE 6 (Line 7): AST_VAR exec, 
6 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
Right OBJ not found
Assigning ['1545'] to 1572, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 15 (Line 8): AST_ASSIGN fs, fs = require('fs')
HANDLE NODE 18 (Line 8): AST_CALL require, require('fs')
HANDLE NODE 19 (Line 8): AST_NAME require, 
19 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module fs at built-in not found!
18: function returned_objs=[], used_objs=[]
HANDLE NODE 16 (Line 8): AST_VAR fs, 
16 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Right side handling error at statement 15, child 18
HANDLE NODE 23 (Line 9): AST_ASSIGN path, path = require('path')
HANDLE NODE 26 (Line 9): AST_CALL require, require('path')
HANDLE NODE 27 (Line 9): AST_NAME require, 
27 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module path at built-in not found!
26: function returned_objs=[], used_objs=[]
HANDLE NODE 24 (Line 9): AST_VAR path, 
24 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Right side handling error at statement 23, child 26
HANDLE NODE 31 (Line 10): AST_ASSIGN exists, exists = fs.existsSync || path.existsSync
HANDLE NODE 34 (Line 10): AST_BINARY_OP existsSync, ||
HANDLE NODE 35 (Line 10): AST_PROP existsSync, fs.existsSync
HANDLE NODE 36 (Line 10): AST_VAR fs, 
36 handle result: obj_nodes=['1545'], name=fs, name_nodes=['1573']
Add prop name node fs.existsSync (1545->1598)
35 handle result: obj_nodes=[], name=fs.existsSync, name_nodes=['1598']
HANDLE NODE 39 (Line 10): AST_PROP existsSync, path.existsSync
HANDLE NODE 40 (Line 10): AST_VAR path, 
40 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
39 handle result: obj_nodes=[], name=path.existsSync, name_nodes=['1598']
HANDLE NODE 32 (Line 10): AST_VAR exists, 
32 handle result: obj_nodes=['1545'], name=exists, name_nodes=['1575']
Right side handling error at statement 31, child 34
HANDLE NODE 43 (Line 11): AST_ASSIGN os, os = require('os')
HANDLE NODE 46 (Line 11): AST_CALL require, require('os')
HANDLE NODE 47 (Line 11): AST_NAME require, 
47 handle result: obj_nodes=[], name=require, name_nodes=['1594']
Required module os at built-in not found!
46: function returned_objs=[], used_objs=[]
HANDLE NODE 44 (Line 11): AST_VAR os, 
44 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Right side handling error at statement 43, child 46
HANDLE NODE 51 (Line 12): AST_ASSIGN quote, quote = JSON.stringify
HANDLE NODE 54 (Line 12): AST_PROP stringify, JSON.stringify
HANDLE NODE 55 (Line 12): AST_VAR JSON, 
Name node JSON not found, create name node
55 handle result: obj_nodes=[], name=JSON, name_nodes=['1599']
PARENT OBJ JSON NOT DEFINED, creating object nodes
Add prop name node JSON.stringify (1600->1601)
54 handle result: obj_nodes=[], name=JSON.stringify, name_nodes=['1601']
HANDLE NODE 52 (Line 12): AST_VAR quote, 
52 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
Right OBJ not found
Assigning ['1545'] to 1577, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 58 (Line 13): AST_ASSIGN cmd, cmd
HANDLE NODE 59 (Line 13): AST_VAR cmd, 
59 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
HANDLE NODE 61 (Line 15): AST_FUNC_DECL which, which
Declared function obj nodes: ['1580']
HANDLE NODE 140 (Line 25): AST_SWITCH type, 
HANDLE NODE 141 (Line 25): AST_METHOD_CALL type, os.type()
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
Add prop name node os.type (1545->1602)
141 handle result: obj_nodes=[], name=os.type, name_nodes=['1602']
add_blank_func func_name: os.type
HANDLE NODE 142 (Line 25): AST_VAR os, 
142 handle result: obj_nodes=['1545'], name=os, name_nodes=['1576']
name node for arguments does not exist
FUNCTION 1603 os.type STARTS, SCOPE 1608, DECL OBJ 1609, this OBJ None, branches []
callback functions = set()
141: function returned_objs=[], used_objs=[]
HANDLE NODE 146 (Line 25): AST_SWITCH_LIST 'Darwin', 
HANDLE NODE 148 (Line 26): string 'Darwin', 'Darwin'
148 handle result: obj_nodes=['1620'], value='Darwin'
BLOCK 149 STARTS
HANDLE NODE 150 (Line 27): AST_IF, 
HANDLE NODE 151 (Line 27): AST_IF_ELEM, 
HANDLE NODE 152 (Line 27): AST_CALL which, which('terminal-notifier')
HANDLE NODE 153 (Line 27): AST_NAME which, 
153 handle result: obj_nodes=['1580'], name=which, name_nodes=['1585']
HANDLE NODE 156 (Line 27): string 'terminal-notifier', 'terminal-notifier'
156 handle result: obj_nodes=['1621'], value='terminal-notifier'
name node for arguments does not exist
add arg name <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1621'], used_objs=[], values=[]), scope 1579
name node for name does not exist
name node for paths does not exist
name node for loc does not exist
FUNCTION 61 which STARTS, SCOPE 1579, DECL OBJ 1580, this OBJ None, branches []
BLOCK 71 STARTS
HANDLE NODE 72 (Line 16): AST_ASSIGN paths, paths = process.env.PATH.split(':')
HANDLE NODE 75 (Line 16): AST_METHOD_CALL split, process.env.PATH.split(':')
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
Name node process not found, create name node
78 handle result: obj_nodes=[], name=process, name_nodes=['1631']
PARENT OBJ process NOT DEFINED, creating object nodes
Add prop name node process.env (1632->1633)
77 handle result: obj_nodes=[], name=process.env, name_nodes=['1633']
PARENT OBJ process.env NOT DEFINED, creating object nodes
Add prop name node process.env.PATH (1634->1635)
76 handle result: obj_nodes=[], name=process.env.PATH, name_nodes=['1635']
PARENT OBJ process.env.PATH NOT DEFINED, creating object nodes
Add prop name node process.env.PATH.split (1636->1637)
75 handle result: obj_nodes=[], name=process.env.PATH.split, name_nodes=['1637']
add_blank_func func_name: process.env.PATH.split
HANDLE NODE 76 (Line 16): AST_PROP PATH, process.env.PATH
HANDLE NODE 77 (Line 16): AST_PROP env, process.env
HANDLE NODE 78 (Line 16): AST_VAR process, 
78 handle result: obj_nodes=['1632'], name=process, name_nodes=['1631']
77 handle result: obj_nodes=['1634'], name=process.env, name_nodes=['1633']
76 handle result: obj_nodes=['1636'], name=process.env.PATH, name_nodes=['1635']
HANDLE NODE 84 (Line 16): string ':', ':'
84 handle result: obj_nodes=['1649'], value=':'
name node for arguments does not exist
FUNCTION 1638 process.env.PATH.split STARTS, SCOPE 1643, DECL OBJ 1644, this OBJ None, branches []
callback functions = set()
75: function returned_objs=[], used_objs=['1649']
HANDLE NODE 73 (Line 16): AST_VAR paths, 
73 handle result: obj_nodes=['1545'], name=paths, name_nodes=['1628']
Right OBJ not found
Assigning ['1545'] to 1628, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=['1649']
HANDLE NODE 85 (Line 17): AST_ASSIGN loc, loc
HANDLE NODE 86 (Line 17): AST_VAR loc, 
86 handle result: obj_nodes=['1545'], name=loc, name_nodes=['1629']
HANDLE NODE 88 (Line 19): AST_FOR, 
152: function returned_objs=[], used_objs=[]
BLOCK 157 STARTS
HANDLE NODE 158 (Line 28): AST_ASSIGN cmd, =
HANDLE NODE 161 (Line 28): AST_ARRAY "Darwin-NotificationCenter", 
HANDLE NODE 162 (Line 29): AST_ARRAY_ELEM "Darwin-NotificationCenter", 
HANDLE NODE 163 (Line 29): string "Darwin-NotificationCenter", "Darwin-NotificationCenter"
163 handle result: obj_nodes=['1659'], value="Darwin-NotificationCenter"
HANDLE NODE 165 (Line 30): AST_ARRAY_ELEM "terminal-notifier", 
HANDLE NODE 166 (Line 30): string "terminal-notifier", "terminal-notifier"
166 handle result: obj_nodes=['1661'], value="terminal-notifier"
HANDLE NODE 168 (Line 31): AST_ARRAY_ELEM '-message', 
HANDLE NODE 169 (Line 31): string '-message', '-message'
169 handle result: obj_nodes=['1663'], value='-message'
HANDLE NODE 171 (Line 32): AST_ARRAY_ELEM '-title', 
HANDLE NODE 172 (Line 32): string '-title', '-title'
172 handle result: obj_nodes=['1665'], value='-title'
HANDLE NODE 174 (Line 33): AST_ARRAY_ELEM '-subtitle', 
HANDLE NODE 175 (Line 33): string '-subtitle', '-subtitle'
175 handle result: obj_nodes=['1667'], value='-subtitle'
HANDLE NODE 177 (Line 34): AST_ARRAY_ELEM priority, 
HANDLE NODE 178 (Line 34): AST_ARRAY '-execute', 
HANDLE NODE 179 (Line 35): AST_ARRAY_ELEM '-execute', 
HANDLE NODE 180 (Line 35): string '-execute', '-execute'
180 handle result: obj_nodes=['1671'], value='-execute'
HANDLE NODE 182 (Line 36): AST_ARRAY_ELEM range, 
HANDLE NODE 183 (Line 36): AST_ARRAY, []
HANDLE NODE 159 (Line 28): AST_VAR cmd, 
159 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1657'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#0")]
  assign used objs=[]
HANDLE NODE 186 (Line 27): AST_IF_ELEM, 
HANDLE NODE 187 (Line 27): NULL, 
BLOCK 188 STARTS
HANDLE NODE 189 (Line 40): AST_ASSIGN cmd, =
HANDLE NODE 192 (Line 40): AST_ARRAY "Darwin-Growl", 
HANDLE NODE 193 (Line 41): AST_ARRAY_ELEM "Darwin-Growl", 
HANDLE NODE 194 (Line 41): string "Darwin-Growl", "Darwin-Growl"
194 handle result: obj_nodes=['1680'], value="Darwin-Growl"
HANDLE NODE 196 (Line 42): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 197 (Line 42): string "growlnotify", "growlnotify"
197 handle result: obj_nodes=['1682'], value="growlnotify"
HANDLE NODE 199 (Line 43): AST_ARRAY_ELEM '-m', 
HANDLE NODE 200 (Line 43): string '-m', '-m'
200 handle result: obj_nodes=['1684'], value='-m'
HANDLE NODE 202 (Line 44): AST_ARRAY_ELEM '--sticky', 
HANDLE NODE 203 (Line 44): string '--sticky', '--sticky'
203 handle result: obj_nodes=['1686'], value='--sticky'
HANDLE NODE 205 (Line 45): AST_ARRAY_ELEM priority, 
HANDLE NODE 206 (Line 45): AST_ARRAY '--priority', 
HANDLE NODE 207 (Line 46): AST_ARRAY_ELEM '--priority', 
HANDLE NODE 208 (Line 46): string '--priority', '--priority'
208 handle result: obj_nodes=['1690'], value='--priority'
HANDLE NODE 210 (Line 47): AST_ARRAY_ELEM range, 
HANDLE NODE 211 (Line 47): AST_ARRAY 0, 
HANDLE NODE 212 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 213 (Line 48): AST_UNARY_OP 2, -2
HANDLE NODE 216 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 217 (Line 49): AST_UNARY_OP 1, -1
HANDLE NODE 220 (Line 47): AST_ARRAY_ELEM 0, 
HANDLE NODE 221 (Line 50): integer 0, 0
221 handle result: obj_nodes=['1694'], value=0
HANDLE NODE 223 (Line 47): AST_ARRAY_ELEM 1, 
HANDLE NODE 224 (Line 51): integer 1, 1
224 handle result: obj_nodes=['1696'], value=1
HANDLE NODE 226 (Line 47): AST_ARRAY_ELEM 2, 
HANDLE NODE 227 (Line 52): integer 2, 2
227 handle result: obj_nodes=['1698'], value=2
HANDLE NODE 229 (Line 47): AST_ARRAY_ELEM "Very Low", 
HANDLE NODE 230 (Line 53): string "Very Low", "Very Low"
230 handle result: obj_nodes=['1700'], value="Very Low"
HANDLE NODE 232 (Line 47): AST_ARRAY_ELEM "Moderate", 
HANDLE NODE 233 (Line 54): string "Moderate", "Moderate"
233 handle result: obj_nodes=['1702'], value="Moderate"
HANDLE NODE 235 (Line 47): AST_ARRAY_ELEM "Normal", 
HANDLE NODE 236 (Line 55): string "Normal", "Normal"
236 handle result: obj_nodes=['1704'], value="Normal"
HANDLE NODE 238 (Line 47): AST_ARRAY_ELEM "High", 
HANDLE NODE 239 (Line 56): string "High", "High"
239 handle result: obj_nodes=['1706'], value="High"
HANDLE NODE 241 (Line 47): AST_ARRAY_ELEM "Emergency", 
HANDLE NODE 242 (Line 57): string "Emergency", "Emergency"
242 handle result: obj_nodes=['1708'], value="Emergency"
HANDLE NODE 190 (Line 40): AST_VAR cmd, 
190 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1678'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#0"), BranchTag("If150#1")]
  assign used objs=[]
HANDLE NODE 246 (Line 62): AST_BREAK, break;
HANDLE NODE 249 (Line 63): string 'Linux', 'Linux'
249 handle result: obj_nodes=['1712'], value='Linux'
BLOCK 250 STARTS
HANDLE NODE 251 (Line 64): AST_ASSIGN cmd, =
HANDLE NODE 254 (Line 64): AST_ARRAY "Linux", 
HANDLE NODE 255 (Line 65): AST_ARRAY_ELEM "Linux", 
HANDLE NODE 256 (Line 65): string "Linux", "Linux"
256 handle result: obj_nodes=['1715'], value="Linux"
HANDLE NODE 258 (Line 66): AST_ARRAY_ELEM "notify-send", 
HANDLE NODE 259 (Line 66): string "notify-send", "notify-send"
259 handle result: obj_nodes=['1717'], value="notify-send"
HANDLE NODE 261 (Line 67): AST_ARRAY_ELEM '', 
HANDLE NODE 262 (Line 67): string '', ''
262 handle result: obj_nodes=['1719'], value=''
HANDLE NODE 264 (Line 68): AST_ARRAY_ELEM '-t 0', 
HANDLE NODE 265 (Line 68): string '-t 0', '-t 0'
265 handle result: obj_nodes=['1721'], value='-t 0'
HANDLE NODE 267 (Line 69): AST_ARRAY_ELEM '-i', 
HANDLE NODE 268 (Line 69): string '-i', '-i'
268 handle result: obj_nodes=['1723'], value='-i'
HANDLE NODE 270 (Line 70): AST_ARRAY_ELEM priority, 
HANDLE NODE 271 (Line 70): AST_ARRAY '-u', 
HANDLE NODE 272 (Line 71): AST_ARRAY_ELEM '-u', 
HANDLE NODE 273 (Line 71): string '-u', '-u'
273 handle result: obj_nodes=['1727'], value='-u'
HANDLE NODE 275 (Line 72): AST_ARRAY_ELEM range, 
HANDLE NODE 276 (Line 72): AST_ARRAY "low", [            "low"          , "normal"          , "critical"        ]
HANDLE NODE 277 (Line 72): AST_ARRAY_ELEM "low", 
HANDLE NODE 278 (Line 73): string "low", "low"
278 handle result: obj_nodes=['1731'], value="low"
HANDLE NODE 280 (Line 72): AST_ARRAY_ELEM "normal", 
HANDLE NODE 281 (Line 74): string "normal", "normal"
281 handle result: obj_nodes=['1733'], value="normal"
HANDLE NODE 283 (Line 72): AST_ARRAY_ELEM "critical", 
HANDLE NODE 284 (Line 75): string "critical", "critical"
284 handle result: obj_nodes=['1735'], value="critical"
HANDLE NODE 252 (Line 64): AST_VAR cmd, 
252 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1713'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#1")]
  assign used objs=[]
HANDLE NODE 288 (Line 79): AST_BREAK, break;
HANDLE NODE 291 (Line 80): string 'Windows_NT', 'Windows_NT'
291 handle result: obj_nodes=['1739'], value='Windows_NT'
BLOCK 292 STARTS
HANDLE NODE 293 (Line 81): AST_ASSIGN cmd, =
HANDLE NODE 296 (Line 81): AST_ARRAY "Windows", 
HANDLE NODE 297 (Line 82): AST_ARRAY_ELEM "Windows", 
HANDLE NODE 298 (Line 82): string "Windows", "Windows"
298 handle result: obj_nodes=['1742'], value="Windows"
HANDLE NODE 300 (Line 83): AST_ARRAY_ELEM "growlnotify", 
HANDLE NODE 301 (Line 83): string "growlnotify", "growlnotify"
301 handle result: obj_nodes=['1744'], value="growlnotify"
HANDLE NODE 303 (Line 84): AST_ARRAY_ELEM '', 
HANDLE NODE 304 (Line 84): string '', ''
304 handle result: obj_nodes=['1746'], value=''
HANDLE NODE 306 (Line 85): AST_ARRAY_ELEM '/s:true', 
HANDLE NODE 307 (Line 85): string '/s:true', '/s:true'
307 handle result: obj_nodes=['1748'], value='/s:true'
HANDLE NODE 309 (Line 86): AST_ARRAY_ELEM '/t:', 
HANDLE NODE 310 (Line 86): string '/t:', '/t:'
310 handle result: obj_nodes=['1750'], value='/t:'
HANDLE NODE 312 (Line 87): AST_ARRAY_ELEM '/i:', 
HANDLE NODE 313 (Line 87): string '/i:', '/i:'
313 handle result: obj_nodes=['1752'], value='/i:'
HANDLE NODE 315 (Line 88): AST_ARRAY_ELEM priority, 
HANDLE NODE 316 (Line 88): AST_ARRAY '/p:', 
HANDLE NODE 317 (Line 89): AST_ARRAY_ELEM '/p:', 
HANDLE NODE 318 (Line 89): string '/p:', '/p:'
318 handle result: obj_nodes=['1756'], value='/p:'
HANDLE NODE 320 (Line 90): AST_ARRAY_ELEM range, 
HANDLE NODE 321 (Line 90): AST_ARRAY 0, [              -2            , -1            , 0            , 1            , 2          ]
HANDLE NODE 322 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 323 (Line 91): AST_UNARY_OP 2, -2
HANDLE NODE 326 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 327 (Line 92): AST_UNARY_OP 1, -1
HANDLE NODE 330 (Line 90): AST_ARRAY_ELEM 0, 
HANDLE NODE 331 (Line 93): integer 0, 0
331 handle result: obj_nodes=['1760'], value=0
HANDLE NODE 333 (Line 90): AST_ARRAY_ELEM 1, 
HANDLE NODE 334 (Line 94): integer 1, 1
334 handle result: obj_nodes=['1762'], value=1
HANDLE NODE 336 (Line 90): AST_ARRAY_ELEM 2, 
HANDLE NODE 337 (Line 95): integer 2, 2
337 handle result: obj_nodes=['1764'], value=2
HANDLE NODE 294 (Line 81): AST_VAR cmd, 
294 handle result: obj_nodes=['1545'], name=cmd, name_nodes=['1578']
Assigning ['1740'] to 1578, pre_objs=['1545'], branches=[BranchTag("Switch146#2")]
  assign used objs=[]
HANDLE NODE 341 (Line 99): AST_BREAK, break;
HANDLE NODE 343 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 346 (Line 106): AST_ASSIGN exports, =
HANDLE NODE 351 (Line 106): AST_VAR growl, 
351 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 347 (Line 106): AST_PROP exports, module.exports
HANDLE NODE 348 (Line 106): AST_VAR module, 
348 handle result: obj_nodes=['1565'], name=module, name_nodes=['1564']
347 handle result: obj_nodes=['1568'], name=module.exports, name_nodes=['1567']
Assigning ['1587'] to 1567, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 344 (Line 106): AST_VAR exports, 
344 handle result: obj_nodes=['1568'], name=exports, name_nodes=['1570']
Assigning ['1587'] to 1570, pre_objs=['1568'], branches=[]
  Remove 1568
  assign used objs=[]
HANDLE NODE 353 (Line 112): AST_ASSIGN '1.4.1', =
HANDLE NODE 358 (Line 112): string '1.4.1', '1.4.1'
358 handle result: obj_nodes=['1768'], value='1.4.1'
HANDLE NODE 354 (Line 112): AST_PROP version, exports.version
HANDLE NODE 355 (Line 112): AST_VAR exports, 
355 handle result: obj_nodes=['1587'], name=exports, name_nodes=['1570']
Cannot find "direct" property, going into __proto__ ['1024']...
  exports.__proto__.version
Add prop name node exports.version (1587->1769)
354 handle result: obj_nodes=[], name=exports.version, name_nodes=['1769']
Assigning ['1768'] to 1769, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 359 (Line 144): AST_FUNC_DECL growl, growl
Declared function obj nodes: ['1587']
HANDLE NODE 994 (Line 234): NULL, ;
HANDLE NODE 995 (Line 236): AST_CALL growl, growl("test", "", "")
HANDLE NODE 996 (Line 236): AST_NAME growl, 
996 handle result: obj_nodes=['1587'], name=growl, name_nodes=['1592']
HANDLE NODE 999 (Line 236): string "test", "test"
999 handle result: obj_nodes=['1770'], value="test"
HANDLE NODE 1000 (Line 236): string "", ""
1000 handle result: obj_nodes=['1771'], value=""
HANDLE NODE 1001 (Line 236): string "", ""
1001 handle result: obj_nodes=['1772'], value=""
name node for arguments does not exist
add arg msg <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1770'], used_objs=[], values=[]), scope 1586
name node for msg does not exist
add arg options <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1771'], used_objs=[], values=[]), scope 1586
name node for options does not exist
add arg fn <- NodeHandleResult(name=None, name_nodes=[], obj_nodes=['1772'], used_objs=[], values=[]), scope 1586
name node for fn does not exist
name node for image does not exist
name node for args does not exist
FUNCTION 359 growl STARTS, SCOPE 1586, DECL OBJ 1587, this OBJ None, branches []
BLOCK 377 STARTS
HANDLE NODE 378 (Line 145): AST_ASSIGN image, image
HANDLE NODE 379 (Line 145): AST_VAR image, 
379 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
HANDLE NODE 381 (Line 146): AST_ASSIGN args, args
HANDLE NODE 382 (Line 146): AST_VAR args, 
382 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
HANDLE NODE 384 (Line 147): AST_ASSIGN options, options = options || {}
HANDLE NODE 387 (Line 147): AST_BINARY_OP options, ||
HANDLE NODE 388 (Line 147): AST_VAR options, 
388 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
HANDLE NODE 390 (Line 147): AST_ARRAY, 
HANDLE NODE 385 (Line 147): AST_VAR options, 
385 handle result: obj_nodes=['1771'], name=options, name_nodes=['1779']
Assigning ['1786', '1771'] to 1779, pre_objs=['1771'], branches=[]
  Remove 1771
  assign used objs=[]
HANDLE NODE 391 (Line 148): AST_ASSIGN fn, fn = fn || function(){}
HANDLE NODE 394 (Line 148): AST_BINARY_OP fn, ||
HANDLE NODE 395 (Line 148): AST_VAR fn, 
395 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
HANDLE NODE 397 (Line 148): AST_CLOSURE {closure}, 
Declared function obj nodes: ['1789']
HANDLE NODE 392 (Line 148): AST_VAR fn, 
392 handle result: obj_nodes=['1772'], name=fn, name_nodes=['1781']
Assigning ['1772', '1789'] to 1781, pre_objs=['1772'], branches=[]
  Remove 1772
  assign used objs=[]
HANDLE NODE 407 (Line 151): AST_IF, 
HANDLE NODE 408 (Line 151): AST_IF_ELEM, 
HANDLE NODE 409 (Line 151): AST_UNARY_OP cmd, !cmd
BLOCK 412 STARTS
HANDLE NODE 413 (Line 151): AST_RETURN, return fn(new Error('growl not supported on this platform'));
HANDLE NODE 414 (Line 151): AST_CALL fn, fn(new Error('growl not supported on this platform'))
HANDLE NODE 415 (Line 151): AST_NAME fn, 
415 handle result: obj_nodes=['1772', '1789'], name=fn, name_nodes=['1781']
HANDLE NODE 418 (Line 151): AST_NEW Error, new Error('growl not supported on this platform')
HANDLE NODE 419 (Line 151): AST_NAME Error, 
419 handle result: obj_nodes=['1303'], name=Error, name_nodes=['1308']
HANDLE NODE 422 (Line 151): string 'growl not supported on this platform', 'growl not supported on this platform'
422 handle result: obj_nodes=['1795'], value='growl not supported on this platform'
name node for arguments does not exist
FUNCTION 1297 Error STARTS, SCOPE 1302, DECL OBJ 1303, this OBJ 1800, branches [BranchTag("If407#0")]
prototype obj node is ['1305']
callback functions = set()
Edge 418->1297 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
418: function returned_objs=['1800'], used_objs=['1795']
add_blank_func func_name: fn
name node for arguments does not exist
FUNCTION 1804 fn STARTS, SCOPE 1809, DECL OBJ 1772, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#0")]
callback functions = set()
name node for arguments does not exist
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches [BranchTag("If407#0"), BranchTag("Call414#1")]
BLOCK 404 STARTS
414: function returned_objs=[], used_objs=['1800', '1795']
HANDLE NODE 423 (Line 152): AST_ASSIGN args, =
HANDLE NODE 426 (Line 152): AST_ARRAY, [cmd.pkg]
HANDLE NODE 427 (Line 152): AST_ARRAY_ELEM pkg, 
HANDLE NODE 428 (Line 152): AST_PROP pkg, cmd.pkg
HANDLE NODE 429 (Line 152): AST_VAR cmd, 
429 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
428 handle result: obj_nodes=['1744', '1661', '1682', '1717'], name=cmd.pkg, name_nodes=['1718', '1683', '1745', '1662']
HANDLE NODE 424 (Line 152): AST_VAR args, 
424 handle result: obj_nodes=['1545'], name=args, name_nodes=['1784']
Assigning ['1825'] to 1784, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
HANDLE NODE 433 (Line 155): AST_IF, 
HANDLE NODE 434 (Line 155): AST_IF_ELEM, 
HANDLE NODE 435 (Line 155): AST_ASSIGN image, =
HANDLE NODE 438 (Line 155): AST_PROP image, options.image
HANDLE NODE 439 (Line 155): AST_VAR options, 
439 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.image
Add prop name node options.image (1786->1828)
Add prop name node options.image (1771->1829)
438 handle result: obj_nodes=[], name=options.image, name_nodes=['1829', '1828']
HANDLE NODE 436 (Line 155): AST_VAR image, 
436 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Right OBJ not found
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[]
  Remove 1545
  assign used objs=[]
BLOCK 442 STARTS
HANDLE NODE 443 (Line 156): AST_SWITCH type, 
HANDLE NODE 444 (Line 156): AST_PROP type, cmd.type
HANDLE NODE 445 (Line 156): AST_VAR cmd, 
445 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
444 handle result: obj_nodes=['1715', '1680', '1659', '1742'], name=cmd.type, name_nodes=['1743', '1660', '1716', '1681']
HANDLE NODE 448 (Line 156): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 450 (Line 157): string 'Darwin-Growl', 'Darwin-Growl'
450 handle result: obj_nodes=['1831'], value='Darwin-Growl'
BLOCK 451 STARTS
HANDLE NODE 452 (Line 158): AST_ASSIGN flag, flag
HANDLE NODE 453 (Line 158): AST_VAR flag, 
Name node flag not found, create name node
453 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 455 (Line 158): AST_ASSIGN ext, ext = path.extname(image).substr(1)
HANDLE NODE 458 (Line 158): AST_METHOD_CALL substr, path.extname(image).substr(1)
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
Add prop name node path.extname (1545->1833)
459 handle result: obj_nodes=[], name=path.extname, name_nodes=['1833']
add_blank_func func_name: path.extname
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
459: function returned_objs=[], used_objs=['1545']
PARENT OBJ path.extname(image) NOT DEFINED, creating object nodes
name node for path.extname(image) does not exist
Add prop name node path.extname(image).substr (1852->1853)
458 handle result: obj_nodes=[], name=path.extname(image).substr, name_nodes=['1853']
add_blank_func func_name: path.extname(image).substr
HANDLE NODE 459 (Line 158): AST_METHOD_CALL extname, path.extname(image)
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
459 handle result: obj_nodes=['1840'], name=path.extname, name_nodes=['1833']
HANDLE NODE 460 (Line 158): AST_VAR path, 
460 handle result: obj_nodes=['1545'], name=path, name_nodes=['1574']
HANDLE NODE 464 (Line 158): AST_VAR image, 
464 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
FUNCTION 1834 path.extname STARTS, SCOPE 1839, DECL OBJ 1840, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
Edge 459->1834 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
459: function returned_objs=[], used_objs=['1545']
HANDLE NODE 468 (Line 158): integer 1, 1
468 handle result: obj_nodes=['1870'], value=1
name node for arguments does not exist
FUNCTION 1854 path.extname(image).substr STARTS, SCOPE 1859, DECL OBJ 1860, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
458: function returned_objs=[], used_objs=['1870']
HANDLE NODE 456 (Line 158): AST_VAR ext, 
Name node ext not found, create name node
456 handle result: obj_nodes=[], name=ext, name_nodes=['1877']
Right OBJ not found
Assigning ['1545'] to 1877, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=['1870']
HANDLE NODE 469 (Line 159): AST_ASSIGN flag, =
HANDLE NODE 472 (Line 159): AST_BINARY_OP flag, ||
HANDLE NODE 473 (Line 159): AST_VAR flag, 
473 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
HANDLE NODE 475 (Line 159): AST_BINARY_OP 'iconpath', &&
HANDLE NODE 476 (Line 159): AST_BINARY_OP 'icns', ==
HANDLE NODE 477 (Line 159): AST_VAR ext, 
477 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 479 (Line 159): string 'icns', 'icns'
479 handle result: obj_nodes=['1878'], value='icns'
HANDLE NODE 480 (Line 159): string 'iconpath', 'iconpath'
480 handle result: obj_nodes=['1881'], value='iconpath'
HANDLE NODE 470 (Line 159): AST_VAR flag, 
470 handle result: obj_nodes=[], name=flag, name_nodes=['1832']
Assigning ['1882'] to 1832, pre_objs=[], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 481 (Line 160): AST_ASSIGN flag, =
HANDLE NODE 484 (Line 160): AST_BINARY_OP flag, ||
HANDLE NODE 485 (Line 160): AST_VAR flag, 
485 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
HANDLE NODE 487 (Line 160): AST_BINARY_OP 'appIcon', &&
HANDLE NODE 488 (Line 160): AST_METHOD_CALL test, /^[A-Z]/.test(image)
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
PARENT OBJ /^[A-Z]/ NOT DEFINED, creating object nodes
name node for /^[A-Z]/ does not exist
Add prop name node /^[A-Z]/.test (1885->1886)
488 handle result: obj_nodes=[], name=/^[A-Z]/.test, name_nodes=['1886']
add_blank_func func_name: /^[A-Z]/.test
HANDLE NODE 489 (Line 160): AST_CONST /^[A-Z]/, /^[A-Z]/
HANDLE NODE 494 (Line 160): AST_VAR image, 
494 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1887 /^[A-Z]/.test STARTS, SCOPE 1892, DECL OBJ 1893, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
488: function returned_objs=[], used_objs=['1545']
HANDLE NODE 496 (Line 160): string 'appIcon', 'appIcon'
496 handle result: obj_nodes=['1904'], value='appIcon'
HANDLE NODE 482 (Line 160): AST_VAR flag, 
482 handle result: obj_nodes=['1882'], name=flag, name_nodes=['1832']
Assigning ['1882', '1905'] to 1832, pre_objs=['1882'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 497 (Line 161): AST_ASSIGN flag, =
HANDLE NODE 500 (Line 161): AST_BINARY_OP flag, ||
HANDLE NODE 501 (Line 161): AST_VAR flag, 
501 handle result: obj_nodes=['1882', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 503 (Line 161): AST_BINARY_OP 'image', &&
HANDLE NODE 504 (Line 161): AST_METHOD_CALL test, /^png|gif|jpe?g$/.test(ext)
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
PARENT OBJ /^png|gif|jpe?g$/ NOT DEFINED, creating object nodes
name node for /^png|gif|jpe?g$/ does not exist
Add prop name node /^png|gif|jpe?g$/.test (1908->1909)
504 handle result: obj_nodes=[], name=/^png|gif|jpe?g$/.test, name_nodes=['1909']
add_blank_func func_name: /^png|gif|jpe?g$/.test
HANDLE NODE 505 (Line 161): AST_CONST /^png|gif|jpe?g$/, /^png|gif|jpe?g$/
HANDLE NODE 510 (Line 161): AST_VAR ext, 
510 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
name node for arguments does not exist
FUNCTION 1910 /^png|gif|jpe?g$/.test STARTS, SCOPE 1915, DECL OBJ 1916, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#0")]
callback functions = set()
504: function returned_objs=[], used_objs=['1545']
HANDLE NODE 512 (Line 161): string 'image', 'image'
512 handle result: obj_nodes=['1927'], value='image'
HANDLE NODE 498 (Line 161): AST_VAR flag, 
498 handle result: obj_nodes=['1882', '1905'], name=flag, name_nodes=['1832']
Assigning ['1882', '1928', '1905'] to 1832, pre_objs=['1882', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 513 (Line 162): AST_ASSIGN flag, =
HANDLE NODE 516 (Line 162): AST_BINARY_OP flag, ||
HANDLE NODE 517 (Line 162): AST_VAR flag, 
517 handle result: obj_nodes=['1882', '1928', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 519 (Line 162): AST_BINARY_OP 'icon', &&
HANDLE NODE 520 (Line 162): AST_BINARY_OP ext, &&
HANDLE NODE 521 (Line 162): AST_VAR ext, 
521 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 523 (Line 162): AST_ASSIGN image, =
HANDLE NODE 526 (Line 162): AST_VAR ext, 
526 handle result: obj_nodes=['1545'], name=ext, name_nodes=['1877']
HANDLE NODE 524 (Line 162): AST_VAR image, 
524 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Assigning ['1545'] to 1783, pre_objs=['1545'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 528 (Line 162): string 'icon', 'icon'
528 handle result: obj_nodes=['1932'], value='icon'
HANDLE NODE 514 (Line 162): AST_VAR flag, 
514 handle result: obj_nodes=['1882', '1928', '1905'], name=flag, name_nodes=['1832']
Assigning ['1882', '1928', '1933', '1905'] to 1832, pre_objs=['1882', '1928', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 529 (Line 163): AST_ASSIGN flag, =
HANDLE NODE 532 (Line 163): AST_BINARY_OP 'icon', ||
HANDLE NODE 533 (Line 163): AST_VAR flag, 
533 handle result: obj_nodes=['1882', '1928', '1933', '1905'], name=flag, name_nodes=['1832']
HANDLE NODE 535 (Line 163): string 'icon', 'icon'
535 handle result: obj_nodes=['1935'], value='icon'
HANDLE NODE 530 (Line 163): AST_VAR flag, 
530 handle result: obj_nodes=['1882', '1928', '1933', '1905'], name=flag, name_nodes=['1832']
Assigning ['1882', '1933', '1905', '1928', '1935'] to 1832, pre_objs=['1882', '1928', '1933', '1905'], branches=[BranchTag("If433#0"), BranchTag("Switch448#0")]
  assign used objs=[]
HANDLE NODE 536 (Line 164): AST_METHOD_CALL push, args.push('--' + flag, image)
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
536 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 537 (Line 164): AST_VAR args, 
537 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 541 (Line 164): AST_BINARY_OP '--', +
HANDLE NODE 542 (Line 164): string '--', '--'
542 handle result: obj_nodes=['1936'], value='--'
HANDLE NODE 543 (Line 164): AST_VAR flag, 
543 handle result: obj_nodes=['1882', '1933', '1905', '1928', '1935'], name=flag, name_nodes=['1832']
HANDLE NODE 545 (Line 164): AST_VAR image, 
545 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7fb744a146a8>...
536: function returned_objs=[], used_objs=['1545']
HANDLE NODE 547 (Line 165): AST_BREAK, break;
HANDLE NODE 550 (Line 166): string 'Linux', 'Linux'
550 handle result: obj_nodes=['1939'], value='Linux'
BLOCK 551 STARTS
HANDLE NODE 552 (Line 167): AST_METHOD_CALL push, args.push(cmd.icon + " " + image)
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
552 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 553 (Line 167): AST_VAR args, 
553 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 557 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 558 (Line 167): AST_BINARY_OP " ", +
HANDLE NODE 559 (Line 167): AST_PROP icon, cmd.icon
HANDLE NODE 560 (Line 167): AST_VAR cmd, 
560 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1657->1940)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.icon
Add prop name node cmd.icon (1678->1941)
559 handle result: obj_nodes=['1723', '1752'], name=cmd.icon, name_nodes=['1940', '1753', '1724', '1941']
HANDLE NODE 563 (Line 167): string " ", " "
563 handle result: obj_nodes=['1942'], value=" "
HANDLE NODE 564 (Line 167): AST_VAR image, 
564 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
Running Python function <function array_push at 0x7fb744a146a8>...
552: function returned_objs=[], used_objs=['1943', '1545', '1752', '1942', '1945', '1723']
OBJ REACHES 293 (Line 81) -> 552 (Line 167)
OBJ REACHES 251 (Line 64) -> 552 (Line 167)
HANDLE NODE 566 (Line 169): AST_IF, 
HANDLE NODE 567 (Line 169): AST_IF_ELEM, 
HANDLE NODE 568 (Line 169): AST_UNARY_OP sticky, !options.sticky
BLOCK 573 STARTS
HANDLE NODE 574 (Line 169): AST_METHOD_CALL push, args.push('--hint=int:transient:1')
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
574 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 575 (Line 169): AST_VAR args, 
575 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 579 (Line 169): string '--hint=int:transient:1', '--hint=int:transient:1'
579 handle result: obj_nodes=['1948'], value='--hint=int:transient:1'
Running Python function <function array_push at 0x7fb744a146a8>...
574: function returned_objs=[], used_objs=['1948']
HANDLE NODE 580 (Line 170): AST_BREAK, break;
HANDLE NODE 583 (Line 171): string 'Windows', 'Windows'
583 handle result: obj_nodes=['1949'], value='Windows'
BLOCK 584 STARTS
HANDLE NODE 585 (Line 172): AST_METHOD_CALL push, args.push(cmd.icon + quote(image))
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
585 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 586 (Line 172): AST_VAR args, 
586 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 590 (Line 172): AST_BINARY_OP icon, +
HANDLE NODE 591 (Line 172): AST_PROP icon, cmd.icon
HANDLE NODE 592 (Line 172): AST_VAR cmd, 
592 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
591 handle result: obj_nodes=['1723', '1752'], name=cmd.icon, name_nodes=['1940', '1753', '1724', '1941']
HANDLE NODE 595 (Line 172): AST_CALL quote, quote(image)
HANDLE NODE 596 (Line 172): AST_NAME quote, 
596 handle result: obj_nodes=['1545'], name=quote, name_nodes=['1577']
add_blank_func func_name: quote
HANDLE NODE 599 (Line 172): AST_VAR image, 
599 handle result: obj_nodes=['1545'], name=image, name_nodes=['1783']
name node for arguments does not exist
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("If433#0"), BranchTag("Switch448#2")]
callback functions = set()
595: function returned_objs=[], used_objs=['1545']
Running Python function <function array_push at 0x7fb744a146a8>...
585: function returned_objs=[], used_objs=['1967', '1723', '1545', '1752']
OBJ REACHES 251 (Line 64) -> 585 (Line 172)
OBJ REACHES 293 (Line 81) -> 585 (Line 172)
HANDLE NODE 601 (Line 173): AST_BREAK, break;
HANDLE NODE 603 (Line 178): AST_IF, 
HANDLE NODE 604 (Line 178): AST_IF_ELEM sticky, 
HANDLE NODE 605 (Line 178): AST_PROP sticky, options.sticky
HANDLE NODE 606 (Line 178): AST_VAR options, 
606 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.sticky
Add prop name node options.sticky (1786->1969)
Add prop name node options.sticky (1771->1970)
605 handle result: obj_nodes=[], name=options.sticky, name_nodes=['1969', '1970']
BLOCK 609 STARTS
HANDLE NODE 610 (Line 178): AST_METHOD_CALL push, args.push(cmd.sticky)
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
610 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 611 (Line 178): AST_VAR args, 
611 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 615 (Line 178): AST_PROP sticky, cmd.sticky
HANDLE NODE 616 (Line 178): AST_VAR cmd, 
616 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.sticky
Add prop name node cmd.sticky (1657->1972)
615 handle result: obj_nodes=['1721', '1686', '1748'], name=cmd.sticky, name_nodes=['1687', '1722', '1749', '1972']
Running Python function <function array_push at 0x7fb744a146a8>...
610: function returned_objs=[], used_objs=['1721', '1686', '1748']
OBJ REACHES 251 (Line 64) -> 610 (Line 178)
OBJ REACHES 189 (Line 40) -> 610 (Line 178)
OBJ REACHES 293 (Line 81) -> 610 (Line 178)
HANDLE NODE 619 (Line 181): AST_IF, 
HANDLE NODE 620 (Line 181): AST_IF_ELEM priority, 
HANDLE NODE 621 (Line 181): AST_PROP priority, options.priority
HANDLE NODE 622 (Line 181): AST_VAR options, 
622 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.priority
Add prop name node options.priority (1786->1973)
Add prop name node options.priority (1771->1974)
621 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
BLOCK 625 STARTS
HANDLE NODE 626 (Line 182): AST_ASSIGN priority, priority = options.priority + ''
HANDLE NODE 629 (Line 182): AST_BINARY_OP '', +
HANDLE NODE 630 (Line 182): AST_PROP priority, options.priority
HANDLE NODE 631 (Line 182): AST_VAR options, 
631 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
630 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
HANDLE NODE 634 (Line 182): string '', ''
634 handle result: obj_nodes=['1976'], value=''
HANDLE NODE 627 (Line 182): AST_VAR priority, 
Name node priority not found, create name node
627 handle result: obj_nodes=[], name=priority, name_nodes=['1979']
Assigning ['1977'] to 1979, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1976']
HANDLE NODE 635 (Line 183): AST_ASSIGN checkindexOf, checkindexOf = cmd.priority.range.indexOf(priority)
HANDLE NODE 638 (Line 183): AST_METHOD_CALL indexOf, cmd.priority.range.indexOf(priority)
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1669', '1754', '1725', '1688'], name=cmd.priority, name_nodes=['1767', '1676', '1711', '1738']
639 handle result: obj_nodes=['1673', '1692', '1729', '1758'], name=cmd.priority.range, name_nodes=['1675', '1710', '1766', '1737']
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1673->1980)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1692->1981)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1729->1982)
Cannot find "direct" property, going into __proto__ ['1134']...
  cmd.priority.range.__proto__.indexOf
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.priority.range.__proto__.__proto__.indexOf
Add prop name node cmd.priority.range.indexOf (1758->1983)
638 handle result: obj_nodes=[], name=cmd.priority.range.indexOf, name_nodes=['1980', '1983', '1981', '1982']
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
add_blank_func func_name: cmd.priority.range.indexOf
HANDLE NODE 639 (Line 183): AST_PROP range, cmd.priority.range
HANDLE NODE 640 (Line 183): AST_PROP priority, cmd.priority
HANDLE NODE 641 (Line 183): AST_VAR cmd, 
641 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
640 handle result: obj_nodes=['1669', '1754', '1725', '1688'], name=cmd.priority, name_nodes=['1767', '1676', '1711', '1738']
639 handle result: obj_nodes=['1673', '1692', '1729', '1758'], name=cmd.priority.range, name_nodes=['1675', '1710', '1766', '1737']
HANDLE NODE 647 (Line 183): AST_VAR priority, 
647 handle result: obj_nodes=['1977'], name=priority, name_nodes=['1979']
name node for arguments does not exist
FUNCTION 1984 cmd.priority.range.indexOf STARTS, SCOPE 1989, DECL OBJ 1990, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#0")]
callback functions = set()
name node for arguments does not exist
FUNCTION 1995 cmd.priority.range.indexOf STARTS, SCOPE 2000, DECL OBJ 2001, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#1")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2006 cmd.priority.range.indexOf STARTS, SCOPE 2011, DECL OBJ 2012, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#2")]
callback functions = set()
name node for arguments does not exist
FUNCTION 2017 cmd.priority.range.indexOf STARTS, SCOPE 2022, DECL OBJ 2023, this OBJ None, branches [BranchTag("If619#0"), BranchTag("Call638#3")]
callback functions = set()
638: function returned_objs=[], used_objs=['1977']
HANDLE NODE 636 (Line 183): AST_VAR checkindexOf, 
Name node checkindexOf not found, create name node
636 handle result: obj_nodes=[], name=checkindexOf, name_nodes=['2052']
Right OBJ not found
Assigning ['1545'] to 2052, pre_objs=[], branches=[BranchTag("If619#0")]
  assign used objs=['1977']
OBJ REACHES 626 (Line 182) -> 635 (Line 183)
HANDLE NODE 649 (Line 184): AST_IF, 
HANDLE NODE 650 (Line 184): AST_IF_ELEM, 
HANDLE NODE 651 (Line 184): AST_UNARY_OP indexOf, ~cmd.priority.range.indexOf(priority)
BLOCK 663 STARTS
HANDLE NODE 664 (Line 185): AST_METHOD_CALL push, args.push(cmd.priority, options.priority)
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
664 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 665 (Line 185): AST_VAR args, 
665 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 669 (Line 185): AST_PROP priority, cmd.priority
HANDLE NODE 670 (Line 185): AST_VAR cmd, 
670 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
669 handle result: obj_nodes=['1669', '1754', '1725', '1688'], name=cmd.priority, name_nodes=['1767', '1676', '1711', '1738']
HANDLE NODE 673 (Line 185): AST_PROP priority, options.priority
HANDLE NODE 674 (Line 185): AST_VAR options, 
674 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
673 handle result: obj_nodes=[], name=options.priority, name_nodes=['1974', '1973']
Running Python function <function array_push at 0x7fb744a146a8>...
664: function returned_objs=[], used_objs=[]
HANDLE NODE 677 (Line 190): AST_IF, 
HANDLE NODE 678 (Line 190): AST_IF_ELEM, 
HANDLE NODE 679 (Line 190): AST_BINARY_OP name, &&
HANDLE NODE 680 (Line 190): AST_PROP name, options.name
HANDLE NODE 681 (Line 190): AST_VAR options, 
681 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.name
Add prop name node options.name (1786->2054)
Add prop name node options.name (1771->2055)
680 handle result: obj_nodes=[], name=options.name, name_nodes=['2054', '2055']
HANDLE NODE 684 (Line 190): AST_BINARY_OP "Darwin-Growl", ===
HANDLE NODE 685 (Line 190): AST_PROP type, cmd.type
HANDLE NODE 686 (Line 190): AST_VAR cmd, 
686 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
685 handle result: obj_nodes=['1715', '1680', '1659', '1742'], name=cmd.type, name_nodes=['1743', '1660', '1716', '1681']
HANDLE NODE 689 (Line 190): string "Darwin-Growl", "Darwin-Growl"
689 handle result: obj_nodes=['2056'], value="Darwin-Growl"
BLOCK 690 STARTS
HANDLE NODE 691 (Line 191): AST_METHOD_CALL push, args.push('--name', options.name)
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
691 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 692 (Line 191): AST_VAR args, 
692 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 696 (Line 191): string '--name', '--name'
696 handle result: obj_nodes=['2062'], value='--name'
HANDLE NODE 697 (Line 191): AST_PROP name, options.name
HANDLE NODE 698 (Line 191): AST_VAR options, 
698 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
697 handle result: obj_nodes=[], name=options.name, name_nodes=['2054', '2055']
Running Python function <function array_push at 0x7fb744a146a8>...
691: function returned_objs=[], used_objs=[]
HANDLE NODE 701 (Line 194): AST_SWITCH type, 
HANDLE NODE 702 (Line 194): AST_PROP type, cmd.type
HANDLE NODE 703 (Line 194): AST_VAR cmd, 
703 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
702 handle result: obj_nodes=['1715', '1680', '1659', '1742'], name=cmd.type, name_nodes=['1743', '1660', '1716', '1681']
HANDLE NODE 706 (Line 194): AST_SWITCH_LIST 'Darwin-Growl', 
HANDLE NODE 708 (Line 195): string 'Darwin-Growl', 'Darwin-Growl'
708 handle result: obj_nodes=['2063'], value='Darwin-Growl'
BLOCK 709 STARTS
HANDLE NODE 710 (Line 196): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
710 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 711 (Line 196): AST_VAR args, 
711 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 715 (Line 196): AST_PROP msg, cmd.msg
HANDLE NODE 716 (Line 196): AST_VAR cmd, 
716 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
715 handle result: obj_nodes=['1746', '1684', '1719', '1663'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fb744a146a8>...
710: function returned_objs=[], used_objs=['1746', '1684', '1719', '1663']
OBJ REACHES 293 (Line 81) -> 710 (Line 196)
OBJ REACHES 189 (Line 40) -> 710 (Line 196)
OBJ REACHES 251 (Line 64) -> 710 (Line 196)
OBJ REACHES 158 (Line 28) -> 710 (Line 196)
HANDLE NODE 719 (Line 197): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
719 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 720 (Line 197): AST_VAR args, 
720 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 724 (Line 197): AST_CALL quote, quote(msg)
HANDLE NODE 725 (Line 197): AST_NAME quote, 
725 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 728 (Line 197): AST_VAR msg, 
728 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0")]
callback functions = set()
724: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fb744a146a8>...
719: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 719 (Line 197)
HANDLE NODE 730 (Line 198): AST_IF, 
HANDLE NODE 731 (Line 198): AST_IF_ELEM title, 
HANDLE NODE 732 (Line 198): AST_PROP title, options.title
HANDLE NODE 733 (Line 198): AST_VAR options, 
733 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.title
Add prop name node options.title (1786->2069)
Add prop name node options.title (1771->2070)
732 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
BLOCK 736 STARTS
HANDLE NODE 737 (Line 198): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
737 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 738 (Line 198): AST_VAR args, 
738 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 742 (Line 198): AST_CALL quote, quote(options.title)
HANDLE NODE 743 (Line 198): AST_NAME quote, 
743 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 746 (Line 198): AST_PROP title, options.title
HANDLE NODE 747 (Line 198): AST_VAR options, 
747 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
746 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#0"), BranchTag("If730#0")]
callback functions = set()
742: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fb744a146a8>...
737: function returned_objs=[], used_objs=[]
HANDLE NODE 750 (Line 199): AST_BREAK, break;
HANDLE NODE 753 (Line 200): string 'Darwin-NotificationCenter', 'Darwin-NotificationCenter'
753 handle result: obj_nodes=['2077'], value='Darwin-NotificationCenter'
BLOCK 754 STARTS
HANDLE NODE 755 (Line 201): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
755 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 756 (Line 201): AST_VAR args, 
756 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 760 (Line 201): AST_PROP msg, cmd.msg
HANDLE NODE 761 (Line 201): AST_VAR cmd, 
761 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
760 handle result: obj_nodes=['1746', '1684', '1719', '1663'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fb744a146a8>...
755: function returned_objs=[], used_objs=['1746', '1684', '1719', '1663']
OBJ REACHES 293 (Line 81) -> 755 (Line 201)
OBJ REACHES 189 (Line 40) -> 755 (Line 201)
OBJ REACHES 251 (Line 64) -> 755 (Line 201)
OBJ REACHES 158 (Line 28) -> 755 (Line 201)
HANDLE NODE 764 (Line 202): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
764 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 765 (Line 202): AST_VAR args, 
765 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 769 (Line 202): AST_CALL quote, quote(msg)
HANDLE NODE 770 (Line 202): AST_NAME quote, 
770 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 773 (Line 202): AST_VAR msg, 
773 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1")]
callback functions = set()
769: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fb744a146a8>...
764: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 764 (Line 202)
HANDLE NODE 775 (Line 203): AST_IF, 
HANDLE NODE 776 (Line 203): AST_IF_ELEM title, 
HANDLE NODE 777 (Line 203): AST_PROP title, options.title
HANDLE NODE 778 (Line 203): AST_VAR options, 
778 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
777 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
BLOCK 781 STARTS
HANDLE NODE 782 (Line 204): AST_METHOD_CALL push, args.push(cmd.title)
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
782 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 783 (Line 204): AST_VAR args, 
783 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 787 (Line 204): AST_PROP title, cmd.title
HANDLE NODE 788 (Line 204): AST_VAR cmd, 
788 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1713->2084)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.title
Add prop name node cmd.title (1678->2085)
787 handle result: obj_nodes=['1665', '1750'], name=cmd.title, name_nodes=['1666', '2085', '2084', '1751']
Running Python function <function array_push at 0x7fb744a146a8>...
782: function returned_objs=[], used_objs=['1665', '1750']
OBJ REACHES 158 (Line 28) -> 782 (Line 204)
OBJ REACHES 293 (Line 81) -> 782 (Line 204)
HANDLE NODE 791 (Line 205): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
791 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 792 (Line 205): AST_VAR args, 
792 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 796 (Line 205): AST_CALL quote, quote(options.title)
HANDLE NODE 797 (Line 205): AST_NAME quote, 
797 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 800 (Line 205): AST_PROP title, options.title
HANDLE NODE 801 (Line 205): AST_VAR options, 
801 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
800 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If775#0")]
callback functions = set()
796: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fb744a146a8>...
791: function returned_objs=[], used_objs=[]
HANDLE NODE 804 (Line 207): AST_IF, 
HANDLE NODE 805 (Line 207): AST_IF_ELEM subtitle, 
HANDLE NODE 806 (Line 207): AST_PROP subtitle, options.subtitle
HANDLE NODE 807 (Line 207): AST_VAR options, 
807 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
Cannot find "direct" property, going into __proto__ ['1013']...
  options.__proto__.subtitle
Add prop name node options.subtitle (1786->2091)
Add prop name node options.subtitle (1771->2092)
806 handle result: obj_nodes=[], name=options.subtitle, name_nodes=['2092', '2091']
BLOCK 810 STARTS
HANDLE NODE 811 (Line 208): AST_METHOD_CALL push, args.push(cmd.subtitle)
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
811 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 812 (Line 208): AST_VAR args, 
812 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 816 (Line 208): AST_PROP subtitle, cmd.subtitle
HANDLE NODE 817 (Line 208): AST_VAR cmd, 
817 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1713->2094)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1678->2095)
Cannot find "direct" property, going into __proto__ ['1013']...
  cmd.__proto__.subtitle
Add prop name node cmd.subtitle (1740->2096)
816 handle result: obj_nodes=['1667'], name=cmd.subtitle, name_nodes=['2096', '2095', '1668', '2094']
Running Python function <function array_push at 0x7fb744a146a8>...
811: function returned_objs=[], used_objs=['1667']
OBJ REACHES 158 (Line 28) -> 811 (Line 208)
HANDLE NODE 820 (Line 209): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
820 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 821 (Line 209): AST_VAR args, 
821 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 825 (Line 209): AST_CALL quote, quote(options.title)
HANDLE NODE 826 (Line 209): AST_NAME quote, 
826 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 829 (Line 209): AST_PROP title, options.title
HANDLE NODE 830 (Line 209): AST_VAR options, 
830 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
829 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#1"), BranchTag("If804#0")]
callback functions = set()
825: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fb744a146a8>...
820: function returned_objs=[], used_objs=[]
HANDLE NODE 833 (Line 211): AST_BREAK, break;
HANDLE NODE 836 (Line 212): string 'Darwin-Growl', 'Darwin-Growl'
836 handle result: obj_nodes=['2102'], value='Darwin-Growl'
BLOCK 837 STARTS
HANDLE NODE 838 (Line 213): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
838 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 839 (Line 213): AST_VAR args, 
839 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 843 (Line 213): AST_PROP msg, cmd.msg
HANDLE NODE 844 (Line 213): AST_VAR cmd, 
844 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
843 handle result: obj_nodes=['1746', '1684', '1719', '1663'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fb744a146a8>...
838: function returned_objs=[], used_objs=['1746', '1684', '1719', '1663']
OBJ REACHES 293 (Line 81) -> 838 (Line 213)
OBJ REACHES 189 (Line 40) -> 838 (Line 213)
OBJ REACHES 251 (Line 64) -> 838 (Line 213)
OBJ REACHES 158 (Line 28) -> 838 (Line 213)
HANDLE NODE 847 (Line 214): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
847 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 848 (Line 214): AST_VAR args, 
848 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 852 (Line 214): AST_CALL quote, quote(msg)
HANDLE NODE 853 (Line 214): AST_NAME quote, 
853 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 856 (Line 214): AST_VAR msg, 
856 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2")]
callback functions = set()
852: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fb744a146a8>...
847: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 847 (Line 214)
HANDLE NODE 858 (Line 215): AST_IF, 
HANDLE NODE 859 (Line 215): AST_IF_ELEM title, 
HANDLE NODE 860 (Line 215): AST_PROP title, options.title
HANDLE NODE 861 (Line 215): AST_VAR options, 
861 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
860 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
BLOCK 864 STARTS
HANDLE NODE 865 (Line 215): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
865 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 866 (Line 215): AST_VAR args, 
866 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 870 (Line 215): AST_CALL quote, quote(options.title)
HANDLE NODE 871 (Line 215): AST_NAME quote, 
871 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 874 (Line 215): AST_PROP title, options.title
HANDLE NODE 875 (Line 215): AST_VAR options, 
875 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
874 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#2"), BranchTag("If858#0")]
callback functions = set()
870: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fb744a146a8>...
865: function returned_objs=[], used_objs=[]
HANDLE NODE 878 (Line 216): AST_BREAK, break;
HANDLE NODE 881 (Line 217): string 'Linux', 'Linux'
881 handle result: obj_nodes=['2114'], value='Linux'
BLOCK 882 STARTS
HANDLE NODE 883 (Line 218): AST_IF, 
HANDLE NODE 884 (Line 218): AST_IF_ELEM title, 
HANDLE NODE 885 (Line 218): AST_PROP title, options.title
HANDLE NODE 886 (Line 218): AST_VAR options, 
886 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
885 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
BLOCK 889 STARTS
HANDLE NODE 890 (Line 219): AST_METHOD_CALL push, args.push(quote(options.title))
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
890 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 891 (Line 219): AST_VAR args, 
891 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 895 (Line 219): AST_CALL quote, quote(options.title)
HANDLE NODE 896 (Line 219): AST_NAME quote, 
896 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 899 (Line 219): AST_PROP title, options.title
HANDLE NODE 900 (Line 219): AST_VAR options, 
900 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
899 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
895: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fb744a146a8>...
890: function returned_objs=[], used_objs=[]
HANDLE NODE 903 (Line 220): AST_METHOD_CALL push, args.push(cmd.msg)
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
903 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 904 (Line 220): AST_VAR args, 
904 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 908 (Line 220): AST_PROP msg, cmd.msg
HANDLE NODE 909 (Line 220): AST_VAR cmd, 
909 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
908 handle result: obj_nodes=['1746', '1684', '1719', '1663'], name=cmd.msg, name_nodes=['1685', '1720', '1664', '1747']
Running Python function <function array_push at 0x7fb744a146a8>...
903: function returned_objs=[], used_objs=['1746', '1684', '1719', '1663']
OBJ REACHES 293 (Line 81) -> 903 (Line 220)
OBJ REACHES 189 (Line 40) -> 903 (Line 220)
OBJ REACHES 251 (Line 64) -> 903 (Line 220)
OBJ REACHES 158 (Line 28) -> 903 (Line 220)
HANDLE NODE 912 (Line 221): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
912 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 913 (Line 221): AST_VAR args, 
913 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 917 (Line 221): AST_CALL quote, quote(msg)
HANDLE NODE 918 (Line 221): AST_NAME quote, 
918 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 921 (Line 221): AST_VAR msg, 
921 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#0")]
callback functions = set()
917: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fb744a146a8>...
912: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 912 (Line 221)
HANDLE NODE 923 (Line 218): AST_IF_ELEM, 
HANDLE NODE 924 (Line 218): NULL, 
BLOCK 925 STARTS
HANDLE NODE 926 (Line 223): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
926 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 927 (Line 223): AST_VAR args, 
927 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 931 (Line 223): AST_CALL quote, quote(msg)
HANDLE NODE 932 (Line 223): AST_NAME quote, 
932 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 935 (Line 223): AST_VAR msg, 
935 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#3"), BranchTag("If883#1")]
callback functions = set()
931: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fb744a146a8>...
926: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 926 (Line 223)
HANDLE NODE 937 (Line 225): AST_BREAK, break;
HANDLE NODE 940 (Line 226): string 'Windows', 'Windows'
940 handle result: obj_nodes=['2132'], value='Windows'
BLOCK 941 STARTS
HANDLE NODE 942 (Line 227): AST_METHOD_CALL push, args.push(quote(msg))
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
942 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 943 (Line 227): AST_VAR args, 
943 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 947 (Line 227): AST_CALL quote, quote(msg)
HANDLE NODE 948 (Line 227): AST_NAME quote, 
948 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 951 (Line 227): AST_VAR msg, 
951 handle result: obj_nodes=['1770'], name=msg, name_nodes=['1777']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4")]
callback functions = set()
947: function returned_objs=[], used_objs=['1770']
Running Python function <function array_push at 0x7fb744a146a8>...
942: function returned_objs=[], used_objs=['1770']
OBJ REACHES 995 (Line 236) -> 942 (Line 227)
HANDLE NODE 953 (Line 228): AST_IF, 
HANDLE NODE 954 (Line 228): AST_IF_ELEM title, 
HANDLE NODE 955 (Line 228): AST_PROP title, options.title
HANDLE NODE 956 (Line 228): AST_VAR options, 
956 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
955 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
BLOCK 959 STARTS
HANDLE NODE 960 (Line 228): AST_METHOD_CALL push, args.push(cmd.title + quote(options.title))
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.push
960 handle result: obj_nodes=['1145'], name=args.push, name_nodes=['1150']
HANDLE NODE 961 (Line 228): AST_VAR args, 
961 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 965 (Line 228): AST_BINARY_OP title, +
HANDLE NODE 966 (Line 228): AST_PROP title, cmd.title
HANDLE NODE 967 (Line 228): AST_VAR cmd, 
967 handle result: obj_nodes=['1713', '1657', '1678', '1740'], name=cmd, name_nodes=['1578']
966 handle result: obj_nodes=['1665', '1750'], name=cmd.title, name_nodes=['1666', '2085', '2084', '1751']
HANDLE NODE 970 (Line 228): AST_CALL quote, quote(options.title)
HANDLE NODE 971 (Line 228): AST_NAME quote, 
971 handle result: obj_nodes=['1545', '1956'], name=quote, name_nodes=['1577']
HANDLE NODE 974 (Line 228): AST_PROP title, options.title
HANDLE NODE 975 (Line 228): AST_VAR options, 
975 handle result: obj_nodes=['1786', '1771'], name=options, name_nodes=['1779']
974 handle result: obj_nodes=[], name=options.title, name_nodes=['2070', '2069']
FUNCTION 1950 quote STARTS, SCOPE 1955, DECL OBJ 1956, this OBJ None, branches [BranchTag("Switch706#4"), BranchTag("If953#0")]
callback functions = set()
970: function returned_objs=[], used_objs=[]
Running Python function <function array_push at 0x7fb744a146a8>...
960: function returned_objs=[], used_objs=['1665', '1750', '2144']
OBJ REACHES 158 (Line 28) -> 960 (Line 228)
OBJ REACHES 293 (Line 81) -> 960 (Line 228)
HANDLE NODE 978 (Line 229): AST_BREAK, break;
HANDLE NODE 980 (Line 233): AST_CALL exec, exec(args.join(' '), fn)
HANDLE NODE 981 (Line 233): AST_NAME exec, 
981 handle result: obj_nodes=['1545'], name=exec, name_nodes=['1572']
add_blank_func func_name: exec
HANDLE NODE 984 (Line 233): AST_METHOD_CALL join, args.join(' ')
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
Cannot find "direct" property, going into __proto__ ['1134']...
  args.__proto__.join
984 handle result: obj_nodes=['1193'], name=args.join, name_nodes=['1198']
HANDLE NODE 985 (Line 233): AST_VAR args, 
985 handle result: obj_nodes=['1825'], name=args, name_nodes=['1784']
HANDLE NODE 989 (Line 233): string ' ', ' '
989 handle result: obj_nodes=['2157'], value=' '
Running Python function <function array_join at 0x7fb744a147b8>...
984: function returned_objs=['2158'], used_objs=['1750', '1669', '2144', '1967', '1667', '1688', '1948', '1665', '2062', '1661', '1754', '1684', '1663', '1945', '1717', '1725', '1719', '1748', '1937', '1744', '1721', '1545', '1686', '1746', '1682']
HANDLE NODE 990 (Line 233): AST_VAR fn, 
990 handle result: obj_nodes=['1772', '1789'], name=fn, name_nodes=['1781']
name node for arguments does not exist
FUNCTION 2146 exec STARTS, SCOPE 2151, DECL OBJ 2152, this OBJ None, branches []
callback functions = {'1772', '1789'}
FUNCTION 1804 fn STARTS, SCOPE 1809, DECL OBJ 1772, this OBJ None, branches []
FUNCTION 397 {closure} STARTS, SCOPE 1788, DECL OBJ 1789, this OBJ None, branches []
BLOCK 404 STARTS
Edge 980->397 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
980: function returned_objs=[], used_objs=['1750', '1669', '2144', '1967', '1667', '1688', '1948', '1665', '2062', '1661', '1754', '1684', '1663', '1945', '1772', '1725', '1717', '1719', '1748', '1937', '2158', '1744', '1721', '1545', '1686', '1746', '1789', '1682']
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 960 (Line 228) -> 980 (Line 233)
OBJ REACHES 585 (Line 172) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 574 (Line 169) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 691 (Line 191) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 158 (Line 28) -> 980 (Line 233)
OBJ REACHES 552 (Line 167) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 536 (Line 164) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 251 (Line 64) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
OBJ REACHES 293 (Line 81) -> 980 (Line 233)
OBJ REACHES 391 (Line 148) -> 980 (Line 233)
OBJ REACHES 189 (Line 40) -> 980 (Line 233)
995: function returned_objs=[], used_objs=[]
Add CFG edge 72 -> 1640
Add CFG edge 140 -> 1605
Add CFG edge 150 -> 62
Add INTER_FUNC_REACHES 150 -> 67
Add CFG edge 413 -> 1806
Add CFG edge 413 -> 398
Add CFG edge 413 -> 1299
Add CFG edge 455 -> 1856
Add CFG edge 455 -> 1836
Add CFG edge 481 -> 1889
Add CFG edge 497 -> 1912
Add CFG edge 536 -> 1141
Add CFG edge 552 -> 1141
Add CFG edge 574 -> 1141
Add CFG edge 585 -> 1141
Add CFG edge 585 -> 1952
Add CFG edge 610 -> 1141
Add CFG edge 635 -> 1986
Add CFG edge 635 -> 1997
Add CFG edge 635 -> 2008
Add CFG edge 635 -> 2019
Add CFG edge 664 -> 1141
Add CFG edge 691 -> 1141
Add CFG edge 710 -> 1141
Add CFG edge 719 -> 1141
Add CFG edge 719 -> 1952
Add CFG edge 737 -> 1141
Add CFG edge 737 -> 1952
Add CFG edge 755 -> 1141
Add CFG edge 764 -> 1141
Add CFG edge 764 -> 1952
Add CFG edge 782 -> 1141
Add CFG edge 791 -> 1141
Add CFG edge 791 -> 1952
Add CFG edge 811 -> 1141
Add CFG edge 820 -> 1141
Add CFG edge 820 -> 1952
Add CFG edge 838 -> 1141
Add CFG edge 847 -> 1141
Add CFG edge 847 -> 1952
Add CFG edge 865 -> 1141
Add CFG edge 865 -> 1952
Add CFG edge 890 -> 1141
Add CFG edge 890 -> 1952
Add CFG edge 903 -> 1141
Add CFG edge 912 -> 1141
Add CFG edge 912 -> 1952
Add CFG edge 926 -> 1141
Add CFG edge 926 -> 1952
Add CFG edge 942 -> 1141
Add CFG edge 942 -> 1952
Add CFG edge 960 -> 1141
Add CFG edge 960 -> 1952
Add CFG edge 980 -> 1806
Add CFG edge 980 -> 398
Add CFG edge 980 -> 1189
Add CFG edge 995 -> 360
Add INTER_FUNC_REACHES 995 -> 365
Add INTER_FUNC_REACHES 995 -> 369
Add INTER_FUNC_REACHES 995 -> 373
Finished Importing
Finished Importing
add_blank_func func_name: Object
add_blank_func func_name: Object
name node for Object does not exist
name node for Object does not exist
add_blank_func func_name: Function
add_blank_func func_name: Function
name node for Function does not exist
name node for Function does not exist
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: toString
add_blank_func func_name: toString
add_blank_func func_name: toLocaleString
add_blank_func func_name: toLocaleString
add_blank_func func_name: valueOf
add_blank_func func_name: valueOf
add_blank_func func_name: String
add_blank_func func_name: String
name node for String does not exist
name node for String does not exist
add_blank_func func_name: Number
add_blank_func func_name: Number
name node for Number does not exist
name node for Number does not exist
add_blank_func func_name: Array
add_blank_func func_name: Array
name node for Array does not exist
name node for Array does not exist
add_blank_func func_name: push
add_blank_func func_name: push
add_blank_func func_name: pop
add_blank_func func_name: pop
add_blank_func func_name: unshift
add_blank_func func_name: unshift
add_blank_func func_name: shift
add_blank_func func_name: shift
add_blank_func func_name: join
add_blank_func func_name: join
add_blank_func func_name: forEach
add_blank_func func_name: forEach
add_blank_func func_name: keys
add_blank_func func_name: keys
add_blank_func func_name: values
add_blank_func func_name: values
add_blank_func func_name: entries
add_blank_func func_name: entries
add_blank_func func_name: slice
add_blank_func func_name: slice
add_blank_func func_name: filter
add_blank_func func_name: filter
add_blank_func func_name: Boolean
add_blank_func func_name: Boolean
name node for Boolean does not exist
name node for Boolean does not exist
add_blank_func func_name: Symbol
add_blank_func func_name: Symbol
name node for Symbol does not exist
name node for Symbol does not exist
add_blank_func func_name: Error
add_blank_func func_name: Error
name node for Error does not exist
name node for Error does not exist
add_blank_func func_name: EvalError
add_blank_func func_name: EvalError
name node for EvalError does not exist
name node for EvalError does not exist
add_blank_func func_name: InternalError
add_blank_func func_name: InternalError
name node for InternalError does not exist
name node for InternalError does not exist
add_blank_func func_name: RangeError
add_blank_func func_name: RangeError
name node for RangeError does not exist
name node for RangeError does not exist
add_blank_func func_name: ReferenceError
add_blank_func func_name: ReferenceError
name node for ReferenceError does not exist
name node for ReferenceError does not exist
add_blank_func func_name: SyntaxError
add_blank_func func_name: SyntaxError
name node for SyntaxError does not exist
name node for SyntaxError does not exist
add_blank_func func_name: TypeError
add_blank_func func_name: TypeError
name node for TypeError does not exist
name node for TypeError does not exist
add_blank_func func_name: URIError
add_blank_func func_name: URIError
name node for URIError does not exist
name node for URIError does not exist
add_blank_func func_name: parseInt
add_blank_func func_name: parseInt
name node for parseInt does not exist
name node for parseInt does not exist
add_blank_func func_name: parseFloat
add_blank_func func_name: parseFloat
name node for parseFloat does not exist
name node for parseFloat does not exist
add_blank_func func_name: decodeURI
add_blank_func func_name: decodeURI
name node for decodeURI does not exist
name node for decodeURI does not exist
add_blank_func func_name: decodeURIComponent
add_blank_func func_name: decodeURIComponent
name node for decodeURIComponent does not exist
name node for decodeURIComponent does not exist
add_blank_func func_name: encodeURI
add_blank_func func_name: encodeURI
name node for encodeURI does not exist
name node for encodeURI does not exist
add_blank_func func_name: encodeURIComponent
add_blank_func func_name: encodeURIComponent
name node for encodeURIComponent does not exist
name node for encodeURIComponent does not exist
add_blank_func func_name: escape
add_blank_func func_name: escape
name node for escape does not exist
name node for escape does not exist
add_blank_func func_name: unescape
add_blank_func func_name: unescape
name node for unescape does not exist
name node for unescape does not exist
add_blank_func func_name: setTimeout
add_blank_func func_name: setTimeout
name node for setTimeout does not exist
name node for setTimeout does not exist
add_blank_func func_name: clearTimeout
add_blank_func func_name: clearTimeout
name node for clearTimeout does not exist
name node for clearTimeout does not exist
add_blank_func func_name: setInterval
add_blank_func func_name: setInterval
name node for setInterval does not exist
name node for setInterval does not exist
add_blank_func func_name: clearInterval
add_blank_func func_name: clearInterval
name node for clearInterval does not exist
name node for clearInterval does not exist
name node for undefined does not exist
name node for undefined does not exist
name node for Infinity does not exist
name node for Infinity does not exist
name node for NaN does not exist
name node for NaN does not exist
name node for true does not exist
name node for true does not exist
name node for false does not exist
name node for false does not exist
Internal objects
Internal objects
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
GENERATE OBJECT GRAPH: 1
REGISTER 21 to 1
HANDLE NODE 1 (Line 1): AST_TOPLEVEL, 
FILE ./tests/vul_demo.js BEGINS
name node for ./tests/vul_demo.js does not exist
name node for ./tests/vul_demo.js does not exist
name node for module does not exist
name node for module does not exist
name node for exports does not exist
name node for exports does not exist
name node for this does not exist
name node for this does not exist
name node for child_process does not exist
name node for child_process does not exist
name node for process does not exist
name node for process does not exist
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
name node for SayHelper does not exist
name node for SayHelper does not exist
Declared function obj nodes: ['679']
name node for mySayHelper does not exist
name node for mySayHelper does not exist
name node for mySayHelper2 does not exist
name node for mySayHelper2 does not exist
FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
BLOCK 4 STARTS
HANDLE NODE 5 (Line 1): AST_ASSIGN child_process, child_process = require('child_process')
HANDLE NODE 8 (Line 1): AST_CALL require, require('child_process')
HANDLE NODE 9 (Line 1): AST_NAME require, 
Name node require not found, create name node
9 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module child_process at built-in not found!
8: function returned_objs=[], used_objs=[]
HANDLE NODE 6 (Line 1): AST_VAR child_process, 
6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Right side handling error at statement 5, child 8
HANDLE NODE 13 (Line 2): AST_ASSIGN process, process = require('process')
HANDLE NODE 16 (Line 2): AST_CALL require, require('process')
HANDLE NODE 17 (Line 2): AST_NAME require, 
17 handle result: obj_nodes=[], name=require, name_nodes=['688']
Required module process at built-in not found!
16: function returned_objs=[], used_objs=[]
HANDLE NODE 14 (Line 2): AST_VAR process, 
14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Right side handling error at statement 13, child 16
HANDLE NODE 21 (Line 3): AST_FUNC_DECL SayHelper, SayHelper
Declared function obj nodes: ['679']
HANDLE NODE 69 (Line 10): AST_ASSIGN mySayHelper, mySayHelper = new SayHelper()
HANDLE NODE 72 (Line 10): AST_NEW SayHelper, new SayHelper()
HANDLE NODE 73 (Line 10): AST_NAME SayHelper, 
73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
BLOCK 27 STARTS
HANDLE NODE 28 (Line 4): AST_ASSIGN "user", =
HANDLE NODE 33 (Line 4): string "user", "user"
33 handle result: obj_nodes=['695'], value="user"
HANDLE NODE 29 (Line 4): AST_PROP username, this.username
HANDLE NODE 30 (Line 4): AST_VAR this, 
30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.username (693->696)
29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
Assigning ['695'] to 696, pre_objs=[], branches=[]
Assigning ['695'] to 696, pre_objs=[], branches=[]
  assign used objs=[]
HANDLE NODE 34 (Line 5): AST_ASSIGN greet, =
HANDLE NODE 39 (Line 5): AST_CLOSURE {closure}, 
Declared function obj nodes: ['698']
HANDLE NODE 35 (Line 5): AST_PROP greet, this.greet
HANDLE NODE 36 (Line 5): AST_VAR this, 
36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
Add prop name node this.greet (693->703)
35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
Assigning ['698'] to 703, pre_objs=[], branches=[]
Assigning ['698'] to 703, pre_objs=[], branches=[]
  assign used objs=[]
prototype obj node is ['681']
prototype obj node is ['681']
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
Edge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.
72: function returned_objs=['693'], used_objs=[]
HANDLE NODE 70 (Line 10): AST_VAR mySayHelper, 
70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
Assigning ['693'] to 685, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 76 (Line 11): AST_ASSIGN mySayHelper2, mySayHelper2 = mySayHelper
HANDLE NODE 79 (Line 11): AST_VAR mySayHelper, 
79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
HANDLE NODE 77 (Line 11): AST_VAR mySayHelper2, 
77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
Assigning ['693'] to 686, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=[]
HANDLE NODE 81 (Line 12): AST_IF, 
HANDLE NODE 82 (Line 12): AST_IF_ELEM 2, 
HANDLE NODE 83 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 83 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 84 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 85 (Line 12): AST_VAR process, 
85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
Add prop name node process.argv (649->705)
84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
PARENT OBJ process.argv NOT DEFINED, creating object nodes
Add prop name node process.argv.2 (706->707)
83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
BLOCK 89 STARTS
HANDLE NODE 90 (Line 12): AST_ASSIGN username, =
HANDLE NODE 95 (Line 12): AST_DIM 2, process.argv[2]
HANDLE NODE 95 (Line 12): AST_PROP 2, process.argv[2]
HANDLE NODE 96 (Line 12): AST_PROP argv, process.argv
HANDLE NODE 97 (Line 12): AST_VAR process, 
97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
HANDLE NODE 91 (Line 12): AST_PROP username, mySayHelper2.username
HANDLE NODE 92 (Line 12): AST_VAR mySayHelper2, 
92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
Right OBJ not found
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
  assign used objs=[]
HANDLE NODE 101 (Line 13): AST_METHOD_CALL greet, mySayHelper.greet()
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
HANDLE NODE 102 (Line 13): AST_VAR mySayHelper, 
102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
name node for arguments does not exist
name node for arguments does not exist
name node for commandline does not exist
name node for commandline does not exist
FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
BLOCK 46 STARTS
HANDLE NODE 47 (Line 6): AST_ASSIGN commandline, commandline = 'echo Hello, ' + this.username + '!'
HANDLE NODE 50 (Line 6): AST_BINARY_OP '!', +
HANDLE NODE 51 (Line 6): AST_BINARY_OP 'echo Hello, ', +
HANDLE NODE 52 (Line 6): string 'echo Hello, ', 'echo Hello, '
52 handle result: obj_nodes=['715'], value='echo Hello, '
HANDLE NODE 53 (Line 6): AST_PROP username, this.username
HANDLE NODE 54 (Line 6): AST_VAR this, 
54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
Cannot find "direct" property, going into __proto__ ['117']...
  this.__proto__.username
Add prop name node this.username (672->716)
53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
HANDLE NODE 57 (Line 6): string '!', '!'
57 handle result: obj_nodes=['719'], value='!'
HANDLE NODE 48 (Line 6): AST_VAR commandline, 
48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
Assigning ['720'] to 713, pre_objs=['649'], branches=[]
  Remove 649
  Remove 649
  assign used objs=['719', '717', '715']
HANDLE NODE 58 (Line 7): AST_METHOD_CALL execSync, child_process.execSync(commandline)
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
Add prop name node child_process.execSync (649->722)
58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
add_blank_func func_name: child_process.execSync
add_blank_func func_name: child_process.execSync
HANDLE NODE 59 (Line 7): AST_VAR child_process, 
59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
HANDLE NODE 63 (Line 7): AST_VAR commandline, 
63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
name node for arguments does not exist
name node for arguments does not exist
FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
callback functions = set()
58: function returned_objs=[], used_objs=['720']
OBJ REACHES 47 (Line 6) -> 58 (Line 7)
101: function returned_objs=[], used_objs=[]
Add CFG edge 58 -> 725
Add CFG edge 69 -> 22
Add CFG edge 101 -> 40
