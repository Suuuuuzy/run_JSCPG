INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '715', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['719', '717', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '717', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '719', '715']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ./vul_demo.js BEGINS
INFO:root:name node for ./vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['715', '719', '717']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
INFO:root:[7m[37mFinished Importing[0m
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Object
INFO:root:name node for Object does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Function
INFO:root:name node for Function does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: toLocaleString
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: valueOf
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: String
INFO:root:name node for String does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Number
INFO:root:name node for Number does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Array
INFO:root:name node for Array does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: push
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: pop
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unshift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: shift
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: join
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: forEach
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: keys
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: values
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: entries
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: slice
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: filter
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Boolean
INFO:root:name node for Boolean does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Symbol
INFO:root:name node for Symbol does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: Error
INFO:root:name node for Error does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: EvalError
INFO:root:name node for EvalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: InternalError
INFO:root:name node for InternalError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: RangeError
INFO:root:name node for RangeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: ReferenceError
INFO:root:name node for ReferenceError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: SyntaxError
INFO:root:name node for SyntaxError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: TypeError
INFO:root:name node for TypeError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: URIError
INFO:root:name node for URIError does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseInt
INFO:root:name node for parseInt does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: parseFloat
INFO:root:name node for parseFloat does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURI
INFO:root:name node for decodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: decodeURIComponent
INFO:root:name node for decodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURI
INFO:root:name node for encodeURI does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: encodeURIComponent
INFO:root:name node for encodeURIComponent does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: escape
INFO:root:name node for escape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: unescape
INFO:root:name node for unescape does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setTimeout
INFO:root:name node for setTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearTimeout
INFO:root:name node for clearTimeout does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: setInterval
INFO:root:name node for setInterval does not exist
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: clearInterval
INFO:root:name node for clearInterval does not exist
INFO:root:name node for undefined does not exist
INFO:root:name node for Infinity does not exist
INFO:root:name node for NaN does not exist
INFO:root:name node for true does not exist
INFO:root:name node for false does not exist
INFO:root:Internal objects
INFO:root:undefined_obj: 649, infinity_obj: 651, negative_infinity_obj: 653, nan_obj:654, true_obj: 656, false_obj: 658
INFO:root:RUN: 
INFO:root:REGISTER 21 to 1
INFO:root:[1m[36mHANDLE NODE[0m 1 (Line 1): [97m[100mAST_TOPLEVEL[0m, 
INFO:root:FILE ../test/vul_demo.js BEGINS
INFO:root:name node for ../test/vul_demo.js does not exist
INFO:root:name node for module does not exist
INFO:root:name node for exports does not exist
INFO:root:name node for this does not exist
INFO:root:name node for child_process does not exist
INFO:root:name node for process does not exist
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:name node for SayHelper does not exist
INFO:root:Declared function obj nodes: ['679']
INFO:root:name node for mySayHelper does not exist
INFO:root:name node for mySayHelper2 does not exist
INFO:root:FUNCTION 1 SayHelper STARTS, SCOPE 660, DECL OBJ 661, this OBJ None, branches []
INFO:root:BLOCK 4 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 5 (Line 1): [97m[100mAST_ASSIGN[0m child_process, child_process = require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 8 (Line 1): [97m[100mAST_CALL[0m require, require('child_process')
INFO:root:[1m[36mHANDLE NODE[0m 9 (Line 1): [97m[100mAST_NAME[0m require, 
INFO:root:Name node require not found,  name node
INFO:root:9 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module child_process at built-in not found!
INFO:root:8: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 6 (Line 1): [97m[100mAST_VAR[0m child_process, 
INFO:root:6 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
ERROR:root:Right side handling error at statement 5, child 8
INFO:root:[1m[36mHANDLE NODE[0m 13 (Line 2): [97m[100mAST_ASSIGN[0m process, process = require('process')
INFO:root:[1m[36mHANDLE NODE[0m 16 (Line 2): [97m[100mAST_CALL[0m require, require('process')
INFO:root:[1m[36mHANDLE NODE[0m 17 (Line 2): [97m[100mAST_NAME[0m require, 
INFO:root:17 handle result: obj_nodes=[], name=require, name_nodes=['688']
ERROR:root:Required module process at built-in not found!
INFO:root:16: function returned_objs=[], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 14 (Line 2): [97m[100mAST_VAR[0m process, 
INFO:root:14 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
ERROR:root:Right side handling error at statement 13, child 16
INFO:root:[1m[36mHANDLE NODE[0m 21 (Line 3): [97m[100mAST_FUNC_DECL[0m SayHelper, SayHelper
INFO:root:Declared function obj nodes: ['679']
INFO:root:[1m[36mHANDLE NODE[0m 69 (Line 10): [97m[100mAST_ASSIGN[0m mySayHelper, mySayHelper = new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 72 (Line 10): [97m[100mAST_NEW[0m SayHelper, new SayHelper()
INFO:root:[1m[36mHANDLE NODE[0m 73 (Line 10): [97m[100mAST_NAME[0m SayHelper, 
INFO:root:73 handle result: obj_nodes=['679'], name=SayHelper, name_nodes=['684']
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 21 SayHelper STARTS, SCOPE 678, DECL OBJ 679, this OBJ 693, branches []
INFO:root:BLOCK 27 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 28 (Line 4): [97m[100mAST_ASSIGN[0m "user", =
INFO:root:[1m[36mHANDLE NODE[0m 33 (Line 4): [97m[100mstring[0m "user", "user"
INFO:root:33 handle result: obj_nodes=['695'], value="user"
INFO:root:[1m[36mHANDLE NODE[0m 29 (Line 4): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 30 (Line 4): [97m[100mAST_VAR[0m this, 
INFO:root:30 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.username (693->696)[0m
INFO:root:29 handle result: obj_nodes=[], name=this.username, name_nodes=['696']
INFO:root:Assigning ['695'] to 696, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 34 (Line 5): [97m[100mAST_ASSIGN[0m greet, =
INFO:root:[1m[36mHANDLE NODE[0m 39 (Line 5): [97m[100mAST_CLOSURE[0m {closure}, 
INFO:root:Declared function obj nodes: ['698']
INFO:root:[1m[36mHANDLE NODE[0m 35 (Line 5): [97m[100mAST_PROP[0m greet, this.greet
INFO:root:[1m[36mHANDLE NODE[0m 36 (Line 5): [97m[100mAST_VAR[0m this, 
INFO:root:36 handle result: obj_nodes=['693'], name=this, name_nodes=[]
INFO:root:[32mAdd prop name node this.greet (693->703)[0m
INFO:root:35 handle result: obj_nodes=[], name=this.greet, name_nodes=['703']
INFO:root:Assigning ['698'] to 703, pre_objs=[], branches=[]
INFO:root:  assign used objs=[]
INFO:root:prototype obj node is ['681']
INFO:root:[31mEdge 72->21 exists: 0, {'type:TYPE': 'CALLS'}. Duplicate edge will not be created.[0m
INFO:root:72: function returned_objs=['693'], used_objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 70 (Line 10): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:70 handle result: obj_nodes=['649'], name=mySayHelper, name_nodes=['685']
INFO:root:Assigning ['693'] to 685, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 76 (Line 11): [97m[100mAST_ASSIGN[0m mySayHelper2, mySayHelper2 = mySayHelper
INFO:root:[1m[36mHANDLE NODE[0m 79 (Line 11): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:79 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:[1m[36mHANDLE NODE[0m 77 (Line 11): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:77 handle result: obj_nodes=['649'], name=mySayHelper2, name_nodes=['686']
INFO:root:Assigning ['693'] to 686, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 81 (Line 12): [97m[100mAST_IF[0m, 
INFO:root:[1m[36mHANDLE NODE[0m 82 (Line 12): [97m[100mAST_IF_ELEM[0m 2, 
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 83 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 84 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 85 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:85 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:[32mAdd prop name node process.argv (649->705)[0m
INFO:root:84 handle result: obj_nodes=[], name=process.argv, name_nodes=['705']
INFO:root:[1m[32mPARENT OBJ process.argv NOT DEFINED, creating object nodes[0m
INFO:root:[32mAdd prop name node process.argv.2 (706->707)[0m
INFO:root:83 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:BLOCK 89 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 90 (Line 12): [97m[100mAST_ASSIGN[0m username, =
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_DIM[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 95 (Line 12): [97m[100mAST_PROP[0m 2, process.argv[2]
INFO:root:[1m[36mHANDLE NODE[0m 96 (Line 12): [97m[100mAST_PROP[0m argv, process.argv
INFO:root:[1m[36mHANDLE NODE[0m 97 (Line 12): [97m[100mAST_VAR[0m process, 
INFO:root:97 handle result: obj_nodes=['649'], name=process, name_nodes=['677']
INFO:root:96 handle result: obj_nodes=['706'], name=process.argv, name_nodes=['705']
INFO:root:95 handle result: obj_nodes=[], name=process.argv.2, name_nodes=['707']
INFO:root:[1m[36mHANDLE NODE[0m 91 (Line 12): [97m[100mAST_PROP[0m username, mySayHelper2.username
INFO:root:[1m[36mHANDLE NODE[0m 92 (Line 12): [97m[100mAST_VAR[0m mySayHelper2, 
INFO:root:92 handle result: obj_nodes=['693'], name=mySayHelper2, name_nodes=['686']
INFO:root:91 handle result: obj_nodes=['695'], name=mySayHelper2.username, name_nodes=['696']
WARNING:root:Right OBJ not found
INFO:root:Assigning ['649'] to 696, pre_objs=['695'], branches=[BranchTag("If81#0")]
INFO:root:  assign used objs=[]
INFO:root:[1m[36mHANDLE NODE[0m 101 (Line 13): [97m[100mAST_METHOD_CALL[0m greet, mySayHelper.greet()
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:101 handle result: obj_nodes=['698'], name=mySayHelper.greet, name_nodes=['703']
INFO:root:[1m[36mHANDLE NODE[0m 102 (Line 13): [97m[100mAST_VAR[0m mySayHelper, 
INFO:root:102 handle result: obj_nodes=['693'], name=mySayHelper, name_nodes=['685']
INFO:root:name node for arguments does not exist
INFO:root:name node for commandline does not exist
INFO:root:FUNCTION 39 {closure} STARTS, SCOPE 697, DECL OBJ 698, this OBJ None, branches []
INFO:root:BLOCK 46 STARTS
INFO:root:[1m[36mHANDLE NODE[0m 47 (Line 6): [97m[100mAST_ASSIGN[0m commandline, commandline = 'echo Hello, ' + this.username + '!'
INFO:root:[1m[36mHANDLE NODE[0m 50 (Line 6): [97m[100mAST_BINARY_OP[0m '!', +
INFO:root:[1m[36mHANDLE NODE[0m 51 (Line 6): [97m[100mAST_BINARY_OP[0m 'echo Hello, ', +
INFO:root:[1m[36mHANDLE NODE[0m 52 (Line 6): [97m[100mstring[0m 'echo Hello, ', 'echo Hello, '
INFO:root:52 handle result: obj_nodes=['715'], value='echo Hello, '
INFO:root:[1m[36mHANDLE NODE[0m 53 (Line 6): [97m[100mAST_PROP[0m username, this.username
INFO:root:[1m[36mHANDLE NODE[0m 54 (Line 6): [97m[100mAST_VAR[0m this, 
INFO:root:54 handle result: obj_nodes=['672'], name=this, name_nodes=['675']
INFO:root:Cannot find "direct" property, going into __proto__ ['117']...
INFO:root:  this.__proto__.username
INFO:root:[32mAdd prop name node this.username (672->716)[0m
INFO:root:53 handle result: obj_nodes=[], name=this.username, name_nodes=['716']
INFO:root:[1m[36mHANDLE NODE[0m 57 (Line 6): [97m[100mstring[0m '!', '!'
INFO:root:57 handle result: obj_nodes=['719'], value='!'
INFO:root:[1m[36mHANDLE NODE[0m 48 (Line 6): [97m[100mAST_VAR[0m commandline, 
INFO:root:48 handle result: obj_nodes=['649'], name=commandline, name_nodes=['713']
INFO:root:Assigning ['720'] to 713, pre_objs=['649'], branches=[]
INFO:root:  Remove 649
INFO:root:  assign used objs=['717', '715', '719']
INFO:root:[1m[36mHANDLE NODE[0m 58 (Line 7): [97m[100mAST_METHOD_CALL[0m execSync, child_process.execSync(commandline)
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[32mAdd prop name node child_process.execSync (649->722)[0m
INFO:root:58 handle result: obj_nodes=[], name=child_process.execSync, name_nodes=['722']
INFO:root:[7m[38;5;179madd_blank_func[0m func_name: child_process.execSync
INFO:root:[1m[36mHANDLE NODE[0m 59 (Line 7): [97m[100mAST_VAR[0m child_process, 
INFO:root:59 handle result: obj_nodes=['649'], name=child_process, name_nodes=['676']
INFO:root:[1m[36mHANDLE NODE[0m 63 (Line 7): [97m[100mAST_VAR[0m commandline, 
INFO:root:63 handle result: obj_nodes=['720'], name=commandline, name_nodes=['713']
INFO:root:2nd
INFO:root:name node for arguments does not exist
INFO:root:FUNCTION 723 child_process.execSync STARTS, SCOPE 728, DECL OBJ 729, this OBJ None, branches []
ERROR:root:callback functions =
INFO:root:58: function returned_objs=[], used_objs=['720']
WARNING:root:OBJ REACHES 47 (Line 6) -> 58 (Line 7)
INFO:root:101: function returned_objs=[], used_objs=[]
WARNING:root:Add CFG edge 58 -> 725
WARNING:root:Add CFG edge 69 -> 22
WARNING:root:Add CFG edge 101 -> 40
